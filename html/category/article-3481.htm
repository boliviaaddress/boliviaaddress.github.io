<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3481.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Spring_boot之自动加载自己的AutoConfiguration - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Spring_boot之自动加载自己的AutoConfiguration</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <h1>1. 背景</h1> <p>如果项目中要开发一个比较通用的组件，这个组件要被其它springboot项目应用并且其它springboot项目在应用它时不想要加入新的标注和代码，只要在pom.xml里加入它的依赖就。这种情况下，怎么办呢</p> <h1>2. 实践代码</h1> <h2>2.1. 组件spring_autoconfiguration</h2> <p>假如：我们组件名字时spring_autoconfiguration,在我们的组件里加入<strong>META-INF/spring.factories文件</strong></p> <p><img fetchpriority="high" decoding="async" alt="" height="403" src="http://img.555519.xyz/uploads3/20220829/8bf5d3a4cb29cfc97be2567f4c815503.jpg"></p> <p>&nbsp;创建这个组件的MyEnableAutoConfiguration</p> <pre><code class="language-java">@Configuration(proxyBeanMethods = false) public class MyEnableAutoConfiguration { 	 	static Logger logger = LoggerFactory.getLogger(MyEnableAutoConfiguration.class); 	 	public MyEnableAutoConfiguration() { 		logger.info("MyEnableAutoConfiguration is starting instantiating"); 	} 	 	@Bean 	public MyService myService() { 		return new MyService(); 	}  }</code></pre> <p>MyService</p> <pre><code class="language-java">public class MyService {  }</code></pre> <p>pom.xml</p> <pre><code class="language-XML">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt; 	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  	&lt;parent&gt; 		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; 		&lt;version&gt;2.6.2&lt;/version&gt; 		&lt;relativePath /&gt; 	&lt;/parent&gt;  	&lt;groupId&gt;com&lt;/groupId&gt; 	&lt;artifactId&gt;spring_autoconfiguration&lt;/artifactId&gt; 	&lt;version&gt;1-SNAPSHOT&lt;/version&gt; 	&lt;packaging&gt;jar&lt;/packaging&gt;  	&lt;dependencies&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; 		&lt;/dependency&gt; 	&lt;/dependencies&gt; &lt;/project&gt;</code></pre> <h2>2.2. 项目spring_boot_test</h2> <p>这个是springboot的项目，需要依赖组件spring_autoconfiguration，</p> <p>pom.xml</p> <pre><code class="language-XML">		&lt;dependency&gt; 				&lt;groupId&gt;com&lt;/groupId&gt; 				&lt;artifactId&gt;spring_autoconfiguration&lt;/artifactId&gt; 				&lt;version&gt;1-SNAPSHOT&lt;/version&gt; 		&lt;/dependency&gt;</code></pre> <p>spring boot 的启动类</p> <pre><code class="language-java">@SpringBootApplication public class App { 	 	static Logger logger = LoggerFactory.getLogger(App.class); 	     public static void main(String[] args) {     	ConfigurableApplicationContext context = SpringApplication.run( App.class, args );     	MyService myService = context.getBean(MyService.class);     	logger.info("myService is " + myService);     } }</code></pre> <p>执行代码</p> <pre><code class="language-java">2022-06-27 18:30:22.081  INFO 16168 --- [           main] com.harry.App                            : myService is com.harry.service.MyService@29a23c3d</code></pre> <h1>3. AutoConfiguration可以自动加载的原理</h1> <p>&nbsp;在SpringBoot的启动类中，@SpringBootApplication注解的代码里面有一句@EnableAutoConfiguration</p> <p><img decoding="async" alt="" height="207" src="http://img.555519.xyz/uploads3/20220829/a1a14b50180fbe401d618cbda9205a66.jpg"></p> <blockquote> <p>&nbsp;@<strong>ComponentScan</strong>: 注解的作用是扫描@SpringBootApplication所在的Application类（即spring-boot项目的入口类）所在的包（basepackage）下所有的@component注解（或拓展了@component的注解）标记的bean，并注册到spring容器中。</p> <p>&nbsp; @<strong>EnableAutoConfiguration</strong>: 注解加载的是资源目录META-INF文件下的spring.factories的文件。包括导入到项目中的Jar包的META-INF文件夹下的spring.factories文件。spring.factories文件是一个properties文件。</p> </blockquote> <p>组件的项目中的spring.factories文件的内容如下。也就是说，其它项目在导入我的这个Jar的时候，会去加载MyEnableAutoConfiguration这个类。多个类用逗号隔开</p> <pre><code class="language-java">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\ com.harry.autoconfiguration.MyEnableAutoConfiguration</code></pre> <p>如果你要改变某个AutoConfiugration的实例化的顺序，可以用下面的标注</p> <p>@AutoConfigureAfter(value = {ConfigurationB.class})</p> <p>或</p> <p>@AutoConfigureBefore(value = {ConfigurationB.class})</p> <p>例子代码</p> <pre><code class="language-java">@Configuration @AutoConfigureAfter(value = {ConfigurationB.class}) public class ConfigurationA { 	 	public ConfigurationA() { 		System.out.println("ConfigurationA.."); 	} }</code></pre> <pre><code class="language-java">@Configuration public class ConfigurationB { 	public ConfigurationB() { 		System.out.println("ConfigurationB.."); 	}  }</code></pre> <p>在spring.factories文件里配置ConfigurationA和ConfigurationB</p> <pre><code>org.springframework.boot.autoconfigure.EnableAutoConfiguration=\ com.harry.configuration.ConfigurationA,\com.harry.configuration.ConfigurationB</code></pre> <p>执行结果</p> <pre><code>ConfigurationB.. ConfigurationA..</code></pre> <p>如果去掉@AutoConfigureAfter(value = {ConfigurationB.class})标注</p> <pre><code class="language-java">@Configuration //@AutoConfigureAfter(value = {ConfigurationB.class}) public class ConfigurationA { 	 	public ConfigurationA() { 		System.out.println("ConfigurationA.."); 	} }</code></pre> <p>执行结果</p> <pre><code class="language-java">ConfigurationA.. ConfigurationB..</code></pre> <p><span style="color:#fe2c24;"><strong>注意</strong></span></p> <p><span style="color:#fe2c24;"><strong>如果没在</strong></span><span style="color:#fe2c24;"><strong>spring.factories文件里配置的Configuration类不被视为AutoConfiguration.也就是说，配有@Configuration类如果没有在spring.factories配置的话，加@AutoConfigureAfter或@AutoConfigureBefore不能改变其实例化顺序。</strong></span></p> <p><span style="color:#fe2c24;"><strong>比如去掉</strong></span><span style="color:#fe2c24;"><strong>spring.factories的配置</strong></span></p> <pre><code>#org.springframework.boot.autoconfigure.EnableAutoConfiguration=\ #com.harry.configuration.ConfigurationA,\com.harry.configuration.ConfigurationB</code></pre> <p>执行结果</p> <pre><code>ConfigurationA.. ConfigurationB..</code></pre> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3480.htm">后端思维之数据库性能优化方案</a></p>
                                                <p>下一个：<a href="/html/category/article-3482.htm">MySQL数据类型——时间/日期类型（DATE、TIME、DATETIME、TIMESTAMP、YEAR）</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6085.htm" title="开一家宠物医院需要多少钱费用（开一家宠物医院大概需要投资多少钱）">开一家宠物医院需要多少钱费用（开一家宠物医院大概需要投资多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-4427.htm" title="家里养狗养猫会传染给人什么病（家里有狗养猫）">家里养狗养猫会传染给人什么病（家里有狗养猫）</a></li>
                        <li class="py-2"><a href="/html/category/article-3728.htm" title="Linux  C++  实现一个简易版的ping （也就是ICMP协议）">Linux  C++  实现一个简易版的ping （也就是ICMP协议）</a></li>
                        <li class="py-2"><a href="/html/category/article-4120.htm" title="项目打包成 jar 后包无法读取src/main/resources下文件">项目打包成 jar 后包无法读取src/main/resources下文件</a></li>
                        <li class="py-2"><a href="/html/category/article-6129.htm" title="宠物粮批发平台有哪些公司（宠物粮批发平台有哪些公司招聘）">宠物粮批发平台有哪些公司（宠物粮批发平台有哪些公司招聘）</a></li>
                        <li class="py-2"><a href="/html/category/article-4538.htm" title="春节指的是除夕还是正月初一(春节是农历的哪一天除夕是哪天)">春节指的是除夕还是正月初一(春节是农历的哪一天除夕是哪天)</a></li>
                        <li class="py-2"><a href="/html/category/article-4147.htm" title="MySQL 5.7的Homebrew安装 &#8211; MacOS">MySQL 5.7的Homebrew安装 &#8211; MacOS</a></li>
                        <li class="py-2"><a href="/html/category/article-4503.htm" title="女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）">女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-3718.htm" title="Vue3中vuex的基本使用方法实例_vue.js">Vue3中vuex的基本使用方法实例_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-6217.htm" title="青岛最好的动物医院排名（青岛市动物诊疗价目收费表）">青岛最好的动物医院排名（青岛市动物诊疗价目收费表）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">37</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>