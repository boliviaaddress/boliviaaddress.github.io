<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3487.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>如何保证数据库与redis缓存数据一致性 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">如何保证数据库与redis缓存数据一致性</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>既然要解决这个问题，那么首先要大概了解为啥会出现数据不一致呢？根本原因是我们无法将数据库更新操作与缓存更新操作放在同一个事务内同步成功，同步失败！</p> <h2>一、常见操作及问题</h2> <h3><strong>1.1、先更新数据库，后更新缓存</strong></h3> <p><img fetchpriority="high" decoding="async" alt="" height="401" src="http://img.555519.xyz/uploads3/20220829/a014dd01c687ac6d6cc635c45c59cae1.jpg"></p> <p>问题：假如有两个请求，请求1先更新数据库，将库存更新为1，这时CPU切换给了请求2，请求2将库存更新为2并且将库存更新为了2，这时CPU又切换到了请求1，这时将库存更新为1，这样最终数据库中库存数量是2，而缓存中库存数量却为1，导致了两者不一致，因此这种操作是无法保证两者一致的。</p> <h3><strong>1.2、先更新缓存后更新数据库</strong></h3> <p><img decoding="async" alt="" height="449" src="http://img.555519.xyz/uploads3/20220829/87826fb8d6bf3be077789ded163fc149.jpg"></p> <p>问题：假如有两个请求，请求1先更新缓存为1，然后这时CPU切换到请求2上了，更新缓存为2，更新数据库库存也为2，然后CPU又切换到了请求1上，这时请求1更新数据库库存为1，最终缓存中库存为2，数据库中库存为1。两者数据不一致。</p> <h3><strong>1.3、先删除缓存，后更新数据库</strong></h3> <p><img decoding="async" alt="" height="537" src="http://img.555519.xyz/uploads3/20220829/2abb66e0c2f466ea2d13e7659120176a.jpg"></p> <p>问题：假如请求1先删除缓存，这时CPU切换到请求2，请求2从缓存中读取查询库存，发现缓存中不存在，那么就会去读取数据库中的库存，数据库中当前库存是1，那么就会把1加载到缓存中。然后CPU切换到了请求1上，它去更新数据库将库存更新为2，这样最后缓存中值是1，数据库中值是2，两者不一致。</p> <h3><strong>1.4、先更新数据库，后删除缓存</strong></h3> <p><img loading="lazy" decoding="async" alt="" height="467" src="http://img.555519.xyz/uploads3/20220829/f7f835d444811592f87f4303a1811427.jpg"></p> <p>&nbsp;问题：假如有3个请求，请求1先更新数据库库存为1，随后就删掉了缓存。CPU切换到请求3，请求3查询数据库，发现数据库中数据不存在，因此就读取数据库中的库存，值为1。这时CPU又切给了请求2，请求2先更新数据库库存为2，随后就再次尝试删除缓存（这时缓存中没值）。这时CPU又切给了请求3，请求3把刚才从数据库中查询出来的库存1加载到缓存中。这就又导致了最终缓存与数据库中的数据不一致。虽然先更新数据库然后删除缓存依然有问题，但相比于上面3个出现的概率会比较小（一般数据库更新操作要比查询数据库并填充到缓存的时间要长，不过当查询数据库即将要向缓存中填充的时候出现ygc的话就可能发生不一致的情况）</p> <h2>二、方案进阶</h2> <h3>2.1、延迟双删</h3> <p><img loading="lazy" decoding="async" alt="" height="428" src="http://img.555519.xyz/uploads3/20220829/b14378155e52c42ddd1b74a3a1e9463e.jpg"></p> <p>&nbsp;问题：线程1先删除缓存，然后更新数据库中库存为2（原来是1），然后再次删除缓存，接着CPU切到线程2，线程2从从库中查询库存还是老数据1，然后将库存1加载到缓存。接着CPU切换到线程3，线程3将主库库存2同步到从库上，这样最终数据库中库存是2，而缓存中库存为1，两者不一致。<span style="color:#fe2c24;">延迟双删之所以难以解决数据一致性问题，主要在于我们无法确定延迟多久来第二次删除缓存，当我们遇到数据库主从延迟的时候，很难估计一个合理的时间出来。</span></p> <h3>2.2、redis读写锁</h3> <p><strong>2.2.1&nbsp; 读多写少</strong></p> <pre><code class="language-java">public void testUpdate(String lockKey) {     //先获取读写锁     RReadWriteLock readWriteLock = redissonClient.getReadWriteLock(lockKey);     //加一把写锁     RLock lock = readWriteLock.writeLock();     try {     	//考虑到可能瞬时有非常多的读请求并有部分写请求，这里加上写锁会与读操作互斥，这样会导致读操作都排队等候，     	//为防止积压太多请求，这里尝试获取锁只等待1秒钟，如果1秒钟之内能获取到锁，那么返回true，     	//如果1秒钟之内无法获取锁，那么返回false，这样我们就可以把积压的读写请求限制在了可控的范围内，那么拿不到     	//锁的请求都直接响应给请求端网络繁忙请稍后重试的提示了。 		if (lock.tryLock(1, TimeUnit.SECONDS)) { 			try{ 			   //更新数据库 			} catch(Exception ex){ 			          			} finally{ 			   //当获取锁成功时最后一定要记住finally去关闭锁 			   lock.unlock();   //释放锁 			}  		} else { 			//没有加到锁，直接给请求端响应即可，不需要释放锁 			throw new RuntimeException("网络繁忙，请稍后重试！"); 		} 	} catch (InterruptedException e) { 		e.printStackTrace(); 		throw new RuntimeException("加锁出现异常"); 	}    }        public void testQuery(String lockKey) {     //先获取读写锁     RReadWriteLock readWriteLock = redissonClient.getReadWriteLock(lockKey);     //加一把读锁     RLock lock = readWriteLock.readLock();     try {     	//考虑到可能瞬时有非常多的读请求，如果这时没有对当前商品加写锁的操作，那么读操作是不互斥的，可以并发查询，这样可以保证     	//绝大多数场景下可以支持比较高的并发。如果当前商品有写锁，那么读请求需要排队等候获取锁，如果1秒钟之内无法获取锁，那么     	//返回false，这样我们就可以把积压的读写请求限制在了可控的范围内，那么拿不到锁的请求都直接响应给请求端网络繁忙请稍后重试的提示了。 		if (lock.tryLock(1, TimeUnit.SECONDS)) { 			try{ 			   //先从缓存中查询库存，如果缓存中没有则从数据库中查询库存并把查到的结果放到缓存当中 			} catch(Exception ex){ 			          			} finally{ 			   //当获取锁成功时最后一定要记住finally去关闭锁 			   lock.unlock();   //释放锁 			}  		} else { 			//没有加到锁，直接给请求端响应即可，不需要释放锁 			throw new RuntimeException("网络繁忙，请稍后重试！"); 		} 	} catch (InterruptedException e) { 		e.printStackTrace(); 		throw new RuntimeException("加锁出现异常"); 	}    }</code></pre> <p>&nbsp;说明：对于一般中小企业，量级不算太大的话，可以采用上面说的方法来解决缓存与数据库一致性问题。因为绝大多数情况下都是读，因此效率还是很高的。</p> <p><strong>2.2.2 读多写也多</strong></p> <p>假如我们应对像秒杀这样的场景的话，显然库存的变更是非常多的而且并发非常高，每秒可能有几十万甚至上百万请求，这种情况下，更新数据库接着操作缓存的这种方式显然就非常不合适了，因为数据库压根没有办法支撑瞬间几十万的并发，因此秒杀场景下（写多读也多）我们扣减库存其实操作的是缓存，然后异步通过RocktMq的方式发给我们的服务器，消费者以可接受的速度消费订单扣减库存。秒杀是一个非常大的课题，牵扯的内容很多，感兴趣的可以学习相关内容。</p> <h3>2.3、<strong>异步监听binlog删除 + 重试</strong></h3> <p><img loading="lazy" decoding="async" alt="" height="464" src="http://img.555519.xyz/uploads3/20220829/a90367f750281649573444b336316068.jpg"></p> <p>存在的问题：<br /> 1）脏数据时间窗口“较大”</p> <p>这个脏数据时间窗口较大，是相对同步删除来说。在你收到binlog之前，他中间要经过：binlog从主库同步到从库、binlog从库到binlog监听组件、binlog从监听组件发送到MQ、消费MQ消息，这些操作每个都是有一定的耗时的，可能是几十毫秒甚至几百毫秒，所以说它其实整体是有一个脏数据的时间窗口。</p> <p>而同步删除是在更新完数据库后马上删除，时间窗口大概也就是1毫秒左右，所以说binlog的方式相对于同步删除，可能存在的脏数据窗口会稍微大一点。</p> <p>2）极端场景下存在长期脏数据问题</p> <p>binlog抓取组件宕机导致脏数据。该方案强依赖于监听binlog的组件，如果监听binlog组件出现宕机，则会导致大量脏数据。</p> <p>拆库拆表流程中可能存在并发脏数据</p> <p>拆库拆表流程中并发脏数据问题</p> <p>我们来看下面这个例子：</p> <p>表A正在进行数据库拆分，当前进行到灰度切读流量阶段：部分读新库，部分读老库</p> <p>数据库拆分大致流程：增量数据同步（双写）、全量数据迁移、数据一致性校验、灰度切读、切读完毕后停写老库。</p> <p>此时表A存在数据 a=1，并发情况下可能有以下流程</p> <p><img loading="lazy" decoding="async" alt="" height="303" src="http://img.555519.xyz/uploads3/20220829/960177083707482a9ebc8aba57279def.jpg"></p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3486.htm">javascript异步：callback-promise-async/await</a></p>
                                                <p>下一个：<a href="/html/category/article-3488.htm">springboot RestTemplate,访问https实现SSL请求</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3720.htm" title="Git回退代码到指定版本方法">Git回退代码到指定版本方法</a></li>
                        <li class="py-2"><a href="/html/category/article-3699.htm" title="【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);">【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);</a></li>
                        <li class="py-2"><a href="/html/category/article-3700.htm" title="【nodejs】【mongo】nodejs数据查询【mongo】">【nodejs】【mongo】nodejs数据查询【mongo】</a></li>
                        <li class="py-2"><a href="/html/category/article-3715.htm" title="CSS图片上面放文字实现方式">CSS图片上面放文字实现方式</a></li>
                        <li class="py-2"><a href="/html/category/article-3701.htm" title="网络协议之:Domain name service DNS详解_在线工具">网络协议之:Domain name service DNS详解_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3710.htm" title="FUNCTION XXX does not exist">FUNCTION XXX does not exist</a></li>
                        <li class="py-2"><a href="/html/category/article-3690.htm" title="springboot集成Elasticsearch实现各种搜索功能">springboot集成Elasticsearch实现各种搜索功能</a></li>
                        <li class="py-2"><a href="/html/category/article-3714.htm" title="windows配置kubectl访问k8s集群">windows配置kubectl访问k8s集群</a></li>
                        <li class="py-2"><a href="/html/category/article-3725.htm" title="Linux 搭建NFS文件服务器实现文件共享">Linux 搭建NFS文件服务器实现文件共享</a></li>
                        <li class="py-2"><a href="/html/category/article-3683.htm" title="C语言实现BMP格式转RGB格式、YUV格式">C语言实现BMP格式转RGB格式、YUV格式</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>