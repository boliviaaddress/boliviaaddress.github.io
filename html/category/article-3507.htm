<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3507.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>聊聊分布式一致性算法协议 Paxos - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">聊聊分布式一致性算法协议 Paxos</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <div id="js_content"> <p style="text-align:center;"></p> <h2></h2> <p style="text-align:justify;">作者 | 码哥字节</p> <p style="text-align:left;">来源 | 码哥字节</p> <p>Google的粗粒度锁服务Chubby的设计开发者Burrows曾经说过：所有一致性协议本质上要么是Paxos要么是其变体。</p> <p>网上有很多讲解Paxos算法的文章，但是质量层次不齐。今天笔者带大家深入聊一下Paxos</p> <h2>Paxos是什么？</h2> <p>Paxos算法是基于消息传递且具有高度容错特性的一致性算法，是目前公认的解决分布式一致性问题最有效的算法之一。</p> <p>Paxos算法是Lamport宗师提出的一种基于消息传递的分布式一致性算法，使其获得2013年图灵奖。</p> <p>自Paxos问世以来就持续垄断了分布式一致性算法，Paxos这个名词几乎等同于分布式一致性。</p> <p>Google的很多大型分布式系统都采用了Paxos算法来解决分布式一致性问题，如Chubby、Megastore以及Spanner等。开源的ZooKeeper，以及MySQL 5.7推出的用来取代传统的主从复制的MySQL Group Replication等纷纷采用Paxos算法解决分布式一致性问题。</p> <p>但是它也有两个明显的缺点：</p> <ol> <li> <p>难以理解</p> </li> <li> <p>在工程是实现上比较复杂。</p> </li> </ol> <h2>问题产生的背景</h2> <p>在常见的分布式系统中，总会发生诸如机器宕机或网络异常（包括消息的延迟、丢失、重复、乱序，还有网络分区）等情况。Paxos算法需要解决的问题就是如何在一个可能发生上述异常的分布式系统中，快速且正确地在集群内部对某个数据的值达成一致，并且保证不论发生以上任何异常，都不会破坏整个系统的一致性。</p> <blockquote> <p>“</p> <p>这里某个数据的值并不只是狭义上的某个数，它可以是一条日志，也可以是一条命令（command）。根据应用场景不同，某个数据的值有不同的含义。</p> <p>”</p> </blockquote> <p style="text-align:left;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/8310ae60bd9a9a9ba18dc6fee218b7a2.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <h2>相关概念</h2> <p>在Paxos算法中，有三种角色：</p> <ul> <li> <p>Proposer (提案者)</p> </li> <li> <p>Acceptor (人大代表)</p> </li> <li> <p>Learners (广大群众)</p> </li> </ul> <p>需要注意的是，在具体的算法实现过程中，并不是一个进程只能担任其中一种角色，它有可能会同时充当多个。比如一个进程既是Proposer又是Acceptor还是Learner。</p> <p>还有一个很重要的概念叫提案（Proposal）。最终要达成一致的value就在提案里。</p> <p>这个提案包括什么呢？是仅仅包括一个信息数值吗？到底是如何咱们继续向下阅读，目前咱们先认为仅仅是一个普普通通的value。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/dbf9007fa5908b264598589d08a90990.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <h3>初次认识</h3> <p>Paxos算法过程和我国的立法过程是极其相似的（法律案的提出、法律案的审议、法律案的表决、法律的公布四个阶段），所谓的提案就是新颁布法律。</p> <p>Proposer (提案者)可以提出（propose）提案；Accoptor可以接受（accept）提案；如果某个提案被选定（chosen），那么该提案里的value就被选定了。</p> <p>回到刚刚说的『对某个数据的值达成一致』，指的是Proposer、Acceptor、Learner都认为同一个value被选定（chosen）。那么，Proposer、Acceptor、Learner分别在什么情况下才能认为某个value被选定呢？</p> <ul> <li> <p>Proposer：只要Proposer发的提案被Acceptor接受（刚开始先认为只需要一个Acceptor接受即可，在推导过程中会发现需要半数以上的Acceptor同意才行），Proposer就认为该提案里的value被选定了。</p> </li> <li> <p>Acceptor：只要Acceptor接受了某个提案，Acceptor就认为该提案里的value被选定了。</p> </li> <li> <p>Learner：作为一个学习者，Acceptor告诉Learner哪个value被选定，Learner就认为那个value被选定。</p> </li> </ul> <h2>问题描述</h2> <p>假设有一组可以提出（propose）value的进程集合（提案者团队），一个一致性算法需要保证提出的这么多value中，仅仅只有一个相同的value被选定（chosen）。也就是说要么没有value被提出，只要提出了value并且被选定，那么大家最终学习到的value必须是一致的。对于一致性算法，安全性（safaty）要求如下：</p> <ul> <li> <p>只有被提出的value才能被选定。</p> </li> <li> <p>只有一个value被选定。</p> </li> <li> <p>如果某个进程认为某个value被选定了，那么这个value必须是真的被选定的那个。</p> </li> </ul> <blockquote> <p>“</p> <p>Paxos的目标：保证最终有一个value会被选定，当value被选定后，进程最终也能获取到被选定的value。</p> <p>”</p> </blockquote> <p>俗话说的好，哪里有需求，哪里就会出现糟糕的问题。如果假设不同角色之间可以通过发送消息来进行通信，那么：</p> <ul> <li> <p>每个角色以各自任意的速度进行通信执行，在这个过程中可能会因为各种原因出错而导致执行停止或重启。当一个value被选定之后，因为故障原因才恢复正常的角色因为失去了某些重要的信息，导致它们无法确定被选定的值。</p> </li> <li> <p>消息在传递过程中可能出现任意时长的延迟，可能会重复，也可能丢失。但是消息不会被损坏，即消息内容不会被篡改（拜占庭将军问题）。</p> </li> </ul> <p>以上都是可能会遇到的问题，要怎么解决？？？</p> <h2>推导过程</h2> <h3>最简单的方案——只有一个Acceptor</h3> <p>假设只有一个Acceptor（可以有多个Proposer），只要Acceptor接受它收到的第一个提案，则该提案被选定，该提案里的value就是被选定的value。这样就保证只有一个value会被选定。</p> <p>但是，如果这个唯一的Acceptor宕机了，那么整个系统就无法工作了！</p> <p>因此，一个Acceptor是不可行的，必须要有多个Acceptor！</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/9eacdc2fb95739fc469b2042573ec361.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <h3>多个Acceptor</h3> <p>当有多个Acceptor的时候，如何保证在多个Proposer和多个Acceptor的情况下选定一个value呢？</p> <p>大家可以自己先进行思考。</p> <p>首先，我们的最终目标是无论有多少Proposer提出提案，有且仅有一个value被选定。</p> <p>那么，我们可以先定义一个约束：</p> <blockquote> <p>“</p> <p>P1：一个Acceptor必须接受它收到的第一个提案。</p> <p>”</p> </blockquote> <p>但是，这样又会出现其它的问题：如果每个Proposer所提出的提案value是不同的，并且将提案发送给不同的Acceptor。根据P1约束，每个Acceptor都接受它收到的第一个提案，就会出现不同value被选定的情况，出现了不一致。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/803e38c065886d6a2a4e7a2702754dd1.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <p>刚刚是因为『一个提案只要被一个Acceptor接受，则该提案的value就被选定了』才导致了出现上面不一致的问题。因此，我们需要加一个规定：</p> <blockquote> <p>“</p> <p>规定：一个提案被选定需要被半数以上的Acceptor接受</p> <p>”</p> </blockquote> <p>一个提案被半数以上接受，说明『一个Acceptor必须能够接受不止一个提案！』，不然可能导致最终没有value被选定。比如上图的情况。v1、v2、v3都没有被选定，因为它们都只被一个Acceptor的接受，并没有被超过半数以上的Acceptor接受。</p> <p>最开始将【提案 = value】已经无法满足现在的需求，因为当一个Proposer发送多个提案到一个Acceptor的时候，需要使用一个编号来区分被提出的顺序。现在【提案=提案编号+value】。</p> <p>虽然允许多个提案被选定，但必须保证所有被选定的提案都具有相同的value值。否则又会出现不一致。</p> <blockquote> <p>“</p> <p>P2：如果某个value为v的提案被选定了，那么每个编号更高的被选定提案的value必须也是v。</p> <p>”</p> </blockquote> <p>一个提案只有被Acceptor接受才可能被选定，因此我们可以把P2约束改写成对Acceptor接受的提案的约束P2a。</p> <blockquote> <p>“</p> <p>P2a：如果某个value为v的提案被选定了，那么每个编号更高的被Acceptor接受的提案的value必须也是v。</p> <p>”</p> </blockquote> <p>只要满足了P2a，就能满足P2。</p> <p>但是，考虑如下的情况：以立法过程为背景，假设总的有5个人大代表（Acceptor）。</p> <p>人民法院（Proposer2）提出[M1,V1]的提案，人大代表2-5号（半数以上）均接受了该提案，于是对于人大代表2-5号和人民法院来讲，它们都认为V1提案是被选定的。此时，人大代表1在办完其它事务之后也参与到其中（之前人大代表1没有收到过任何提案），此时最高人民检察院（另一个提案者Proposer1）向人大代表1发送了[M2,V2]的提案（V2≠V1且M2&gt;M1），对于人大代表1来讲，这是它收到的第一个提案。根据P1（一个Acceptor必须接受它收到的第一个提案。）,人大代表1必须接受该提案！同时人大代表1认为V2被选定。这就出现了两个问题：</p> <ul> <li> <p>人大代表1认为V2被选定，人大代表2-5和人民法院认为V1被选定。出现了不一致。</p> </li> <li> <p>V1被选定了，但是编号更高的被人大代表1接受的提案[M2,V2]的value为V2，且V2≠V1。这就跟P2a（如果某个value为v的提案被选定了，那么每个编号更高的被Acceptor接受的提案的value必须也是v）矛盾了。</p> </li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/6c6041dcfb8721b6c0965a0e7c9d07e9.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <p>所以，我们要对P2a约束进行加强！</p> <p>P2a是对Acceptor接受的提案约束，但其实提案是Proposer提出来的，所有我们可以对Proposer提出的提案进行约束。得到P2b：</p> <blockquote> <p>“</p> <p>P2b：如果某个value为v的提案被选定了，那么之后任何Proposer提出的编号更高的提案的value必须也是v。</p> <p>”</p> </blockquote> <p>那么，如何确保在某个value为v的提案被选定后，Proposer提出的编号更高的提案的value都是v呢？</p> <p>只要满足P2c即可：</p> <blockquote> <p>“</p> <p>P2c：对于任意的N和V，如果提案[N, V]被提出，那么存在一个半数以上的Acceptor组成的集合S，满足以下两个条件中的任意一个：</p> <ul> <li> <p>S中每个Acceptor都没有接受过编号小于N的提案。</p> </li> <li> <p>S中Acceptor接受过的最大编号的提案的value为V。</p> </li> </ul> <p>”</p> </blockquote> <h3>Proposer生成提案</h3> <p>为了满足P2b，这里有个比较重要的思想：Proposer生成提案之前，应该先去『学习』已经被选定或者可能被选定的value，然后以该value作为自己提出的提案的value。如果没有value被选定，Proposer才可以自己决定value的值。这样才能达成一致。这个学习的阶段是通过一个『Prepare请求』实现的。</p> <p>于是我们得到了如下的提案生成算法：</p> <ul> <li> <p>Proposer选择一个新的提案编号N，然后向某个Acceptor集合（半数以上）发送请求，要求该集合中的每个Acceptor做出如下响应（response）。</p> <p>(a) 向Proposer承诺保证不再接受任何编号小于N的提案。</p> <p>(b) 如果Acceptor已经接受过提案，那么就向Proposer响应已经接受过的编号小于N的最大编号的提案。</p> <p>我们将该请求称为编号为N的Prepare请求。</p> </li> <li> <p>如果Proposer收到了半数以上的Acceptor的响应，那么它就可以生成编号为N，Value为V的提案[N,V]。这里的V是所有的响应中编号最大的提案的Value。如果所有的响应中都没有提案，那 么此时V就可以由Proposer自己选择(一般为当前提案)。</p> <p>生成提案后，Proposer将该提案发送给半数以上的Acceptor集合，并期望这些Acceptor能接受该提案。我们称该请求为Accept请求。（注意：此时接受Accept请求的Acceptor集合不一定是之前响应Prepare请求的Acceptor集合）</p> </li> </ul> <h3>Acceptor接受提案</h3> <p>Acceptor可以忽略任何请求（包括Prepare请求和Accept请求）而不用担心破坏算法的安全性。因此，我们这里要讨论的是什么时候Acceptor可以响应一个请求。</p> <p>我们对Acceptor接受提案给出如下约束：</p> <blockquote> <p>“</p> <p>P1a：一个Acceptor只要尚未响应过任何编号大于N的Prepare请求，那么他就可以接受这个编号为N的提案。</p> <p>”</p> </blockquote> <p>如果Acceptor收到一个编号为N的Prepare请求，在此之前它已经响应过编号大于N的Prepare请求。根据P1a，该Acceptor不可能接受编号为N的提案。因此，该Acceptor可以忽略编号为N的Prepare请求。当然，也可以回复一个error，让Proposer尽早知道自己的提案不会被接受。</p> <p>因此，一个Acceptor只需记住：1. 已接受的编号最大的提案 2. 已响应的请求的最大编号。</p> <h3>Paxos算法描述</h3> <p>经过上面的推导，我们总结下Paxos算法的流程。</p> <p>Paxos算法分为两个阶段。具体如下：</p> <p>1.阶段一：</p> <ul> <li> <p>Proposer选择一个提案编号N，然后向半数以上的Acceptor发送编号为N的Prepare请求。</p> </li> <li> <p>如果一个Acceptor收到一个编号为N的Prepare请求，且N大于该Acceptor已经响应过的所有Prepare请求的编号，那么它就会将它已经接受过的编号最大的提案（如果有的话） 作为响应反馈给Proposer，同时该Acceptor承诺不再接受任何编号小于N的提案。</p> </li> </ul> <p>2.阶段二：</p> <ul> <li> <p>如果Proposer收到半数以上Acceptor对其发出的编号为N的Prepare请求的响应，那么它就会发送一个针对[N,V]提案的Accept请求给半数以上的Acceptor（和之前的Acceptor不一定相同）。注意：V就是收到的响应中编号最大的提案的value，如果响应中不包含任何提案，那么V就由Proposer自己决定。</p> </li> <li> <p>如果Acceptor收到一个针对编号为N的提案的Accept请求，只要该Acceptor没有对编号大于N的Prepare请求做出过响应，它就接受该提案。</p> </li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/9288abda16d4b99c20361bfec2a9efe7.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <h2>Learner学习被选定的value</h2> <p>Learner学习（获取）被选定的value有如下三种方案：</p> <h3>方案一</h3> <p>Acceptor接受到一个提案，就将该提案发送给所有Learners.</p> <ul> <li> <p>优点：Learner能够快速获取被选定的value</p> </li> <li> <p>缺点：通信次数为M*N（M为提案数，N为Learner数）</p> </li> </ul> <h3>方案二</h3> <p>Acceptor接受一个提案，就将提案发送给主Learner,主Learner再通知其它Learner</p> <ul> <li> <p>优点：通信次数减少（M+N-1）（M为提案数，N为Learner数，M个提案发送给主Learner，然后主Learner通知N-1个Learner）</p> </li> <li> <p>缺点：单点故障问题（主Learner可能出现故障）</p> </li> </ul> <h3>方案三</h3> <p>Acceptor接受一个提案，就将提案发送给Learner团,Learner团再通知其它Learner</p> <ul> <li> <p>优点：解决了方案二单点故障问题，可靠性好</p> </li> <li> <p>缺点：实现复杂，网络通信复杂度高</p> </li> </ul> <h2>如何保证Paxos算法的活性</h2> <p>通过选取主Proposer，就可以保证Paxos算法的活性。通过选取主Proposer，并规定只有主Proposer才能提出议案。这样一来只要主Proposer和过半的Acceptor能够正常进行网络通信，那么但凡主Proposer提出一个编号更高的提案，该提案终将会被批准，这样通过选择一个主Proposer，整套Paxos算法就能够保持活性。至此，我们得到一个既能保证安全性，又能保证活性的分布式一致性算法——Paxos算法。</p> <p style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/f35a54a05f1b72c9d9c17de3fb9d688a.jpg" alt="聊聊分布式一致性算法协议 Paxos"></p> <h2>总结<br /></h2> <p>到此，我们针对Paxos算法是什么、它的特性以及算法的具体推导过程做了详细的阐述。Paxos算法是现在很多一致性算法的变体，非常值得我们学习~</p> </div> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3506.htm">mysql数据库锁MDL锁的解释_在线工具</a></p>
                                                <p>下一个：<a href="/html/category/article-3508.htm">@NotNull注解失效原因之一</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4346.htm" title="动物医院诊疗范围猫科犬科牙科内科（动物医院连锁）">动物医院诊疗范围猫科犬科牙科内科（动物医院连锁）</a></li>
                        <li class="py-2"><a href="/html/category/article-4573.htm" title="安安宠物电话（安安宠物医院地址）">安安宠物电话（安安宠物医院地址）</a></li>
                        <li class="py-2"><a href="/html/category/article-3726.htm" title="win11系统如何创建虚拟磁盘">win11系统如何创建虚拟磁盘</a></li>
                        <li class="py-2"><a href="/html/category/article-5953.htm" title="猫驱虫一次要多少钱左右（猫猫驱虫多少钱）">猫驱虫一次要多少钱左右（猫猫驱虫多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-3719.htm" title="flex布局之5个div盒子一排，不同屏幕，盒子宽度自适应">flex布局之5个div盒子一排，不同屏幕，盒子宽度自适应</a></li>
                        <li class="py-2"><a href="/html/category/article-6172.htm" title="动物疫苗研发生产流程QA生产职责（动物疫苗工艺）">动物疫苗研发生产流程QA生产职责（动物疫苗工艺）</a></li>
                        <li class="py-2"><a href="/html/category/article-6216.htm" title="单螺杆泵品牌排名(单螺杆泵企业)">单螺杆泵品牌排名(单螺杆泵企业)</a></li>
                        <li class="py-2"><a href="/html/category/article-4120.htm" title="项目打包成 jar 后包无法读取src/main/resources下文件">项目打包成 jar 后包无法读取src/main/resources下文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4148.htm" title="Java基础之浅谈接口">Java基础之浅谈接口</a></li>
                        <li class="py-2"><a href="/html/category/article-3722.htm" title="MyBatis:SQL语句中的foreach标签的详细介绍">MyBatis:SQL语句中的foreach标签的详细介绍</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">37</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>