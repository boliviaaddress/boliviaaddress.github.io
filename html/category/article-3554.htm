<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3554.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Google kickstart 2022 Round A题解 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Google kickstart 2022 Round A题解</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h2 id="speed-typing"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://codingcompetitions.withgoogle.com/kickstart/round/00000000008cb33e/00000000009e7021"  target="_blank" rel="nofollow">Speed Typing</a></h2> <h3 id="题意概述">题意概述</h3> <p>给出两个字符串<code>I</code>和<code>P</code>，问能否通过删除<code>P</code>中若干个字符得到<code>I</code>？如果能的话，需要删除字符的个数是多少？</p> <h3 id="数据规模">数据规模</h3> <div class="math display">\[1≤|I|,|P|≤10^5<br /> \]</div> <h3 id="双指针">双指针</h3> <p>设置两个指针<code>i</code>和<code>j</code>分别指向<code>I</code>和<code>P</code>的第一个字符，滑动指针<code>j</code>，如果<code>j</code>指向的字符与<code>i</code>指向的字符相同，则让<code>i</code>向后滑动一个字符，当<code>i</code>滑动到<code>I</code>字符串末尾或<code>j</code>滑动到<code>P</code>字符串末尾后即可结束循环。如果<code>i</code>滑动到<code>I</code>字符串末尾，则说明可以通过删除<code>P</code>中若干个字符得到<code>I</code>，那么删除的字符个数为<span class="math inline">\(|P|-|I|\)</span>；反之则不能。</p> <h3 id="复杂度">复杂度</h3> <ul> <li>时间复杂度为<span class="math inline">\(O(max(|I|,|P|))\)</span>。</li> <li>空间复杂度为<span class="math inline">\(O(1)\)</span>。</li> </ul> <h3 id="c代码">C++代码</h3> <pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt; using namespace std; using gg = long long; #define rep(i, a, b, c) for (gg i = (a); i &lt;= (b); i += (c)) #define rrep(i, a, b, c) for (gg i = (a); i &gt;= (b); i -= (c)) constexpr gg MAX = 1e6 + 5; constexpr gg mod = 1e9 + 7; constexpr gg INF = 4e18; constexpr double eps = 1e-12; gg ti, ni, mi, ki, di, pi, xi, yi; gg up(gg n, gg m) { return n &gt;= 0 ? (n + m - 1) / m : n / m; } gg down(gg n, gg m) { return n &gt;= 0 ? n / m : (n - m + 1) / m; } //! ti; MAX; mod; 边界 void solve() {     string s1, s2;     cin &gt;&gt; s1 &gt;&gt; s2;     gg i = 0, j = 0;     for (; i &lt; s1.size() and j &lt; s2.size(); ++i, ++j) {         while (j &lt; s2.size() and s1[i] != s2[j]) {             ++j;         }         if (j == s2.size()) {             break;         }     }     i == s1.size() ? cout &lt;&lt; s2.size() - s1.size() : cout &lt;&lt; "IMPOSSIBLE"; } int main() {     ios::sync_with_stdio(false);     cin.tie(0);     ti = 1;     cin &gt;&gt; ti;     for (gg ii = 1; ii &lt;= ti; ++ii) {         cout &lt;&lt; "Case #" &lt;&lt; ii &lt;&lt; ": ";         solve();         cout &lt;&lt; "\n";     }     return 0; }</code></pre> <h2 id="challenge-nine"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://codingcompetitions.withgoogle.com/kickstart/round/00000000008cb33e/00000000009e7997"  target="_blank" rel="nofollow">Challenge Nine</a></h2> <h3 id="题意概述-1">题意概述</h3> <p>给定一个正整数<span class="math inline">\(N\)</span>，在给定的数字<span class="math inline">\(N\)</span>的任意位置插入一个<code>[0,9]</code>之间的数字，得到一个不带前导零的新的数字，需要保证这个新的数字是9的倍数。问能构造出的最小的数字是多少？</p> <h3 id="数据规模-1">数据规模</h3> <div class="math display">\[1≤N≤10^{123456}<br /> \]</div> <h3 id="贪心">贪心</h3> <p>由于给出的数字非常大，需要用字符串读入。易知一个数字是9的倍数的充要条件是该数各位上的数字之和也是9的倍数。因此，先计算出读取的字符串各位上的数字之和<code>sum</code>，遍历<code>0~9</code>这10个数字，假设当前遍历到的数字是<code>i</code>，如果<code>i</code>与<code>sum</code>之和是9的倍数，说明插入<code>i</code>能够保证新数字是9的倍数。接着从<code>N</code>的高位向低位遍历，假设当前遍历到的位上的数字是<code>j</code>，如果<code>i&lt;j</code>，则将<code>i</code>插入到<code>j</code>之前可以得到最小的数字（想一想为什么？）。</p> <h3 id="复杂度-1">复杂度</h3> <ul> <li>时间复杂度为<span class="math inline">\(O(n)\)</span>。</li> <li>空间复杂度为<span class="math inline">\(O(n)\)</span>。</li> </ul> <p>其中<span class="math inline">\(n\)</span>指的是数字<code>N</code>的位数。</p> <h3 id="c代码-1">C++代码</h3> <pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt; using namespace std; using gg = long long; #define rep(i, a, b, c) for (gg i = (a); i &lt;= (b); i += (c)) #define rrep(i, a, b, c) for (gg i = (a); i &gt;= (b); i -= (c)) constexpr gg MAX = 1e6 + 5; constexpr gg mod = 1e9 + 7; constexpr gg INF = 4e18; constexpr double eps = 1e-12; gg ti, ni, mi, ki, di, pi, xi, yi; gg up(gg n, gg m) { return n &gt;= 0 ? (n + m - 1) / m : n / m; } gg down(gg n, gg m) { return n &gt;= 0 ? n / m : (n - m + 1) / m; } //! ti; MAX; mod; 边界 void solve() {     string n;     cin &gt;&gt; n;     gg m = n.size(), sum = 0;     array&lt;gg, 2&gt; ans{m + 1, 10};     for (char c : n) {         sum += c - '0';     }     n.push_back(10 + '0');     rep(i, 0, 9, 1) {         if ((i + sum) % 9 == 0) {             rep(j, 0, m, 1) {                 if (n[j] - '0' &gt; i and (j &gt; 0 or i != 0) and ans[0] &gt; j) {                     ans = {j, i};                     break;                 }             }         }     }     n.pop_back();     cout &lt;&lt; n.substr(0, ans[0]) &lt;&lt; ans[1] &lt;&lt; n.substr(ans[0]); } int main() {     ios::sync_with_stdio(false);     cin.tie(0);     ti = 1;     cin &gt;&gt; ti;     for (gg ii = 1; ii &lt;= ti; ++ii) {         cout &lt;&lt; "Case #" &lt;&lt; ii &lt;&lt; ": ";         solve();         cout &lt;&lt; "\n";     }     return 0; }</code></pre> <h2 id="palindrome-free-strings"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://codingcompetitions.withgoogle.com/kickstart/round/00000000008cb33e/00000000009e762e"  target="_blank" rel="nofollow">Palindrome Free Strings</a></h2> <h3 id="题意概述-2">题意概述</h3> <p>给出一个长度为<span class="math inline">\(N\)</span>的只包含<code>0</code>、<code>1</code>和<code>?</code>构成的字符串<code>S</code>，可以随机用<code>0</code>、<code>1</code>替换掉字符串<code>S</code>中所有的<code>?</code>，问能否找到一种替换方法，使得所得到的串没有长度大于等于5的回文子串。</p> <h3 id="数据规模-2">数据规模</h3> <div class="math display">\[1&lt;=N&lt;=5\times 10^4<br /> \]</div> <h3 id="动态规划">动态规划</h3> <p>首先需要注意到，如果字符串<code>S</code>中包含长度为<span class="math inline">\(n(n&gt;2)\)</span>的回文子串，那么将该回文子串首尾两个字符，那么得到的长度为<span class="math inline">\(n-2\)</span>的子串必然也是回文的，因此，可以得到结论：如果<code>S</code>中不包含长度为5的回文子串，那么<code>S</code>中必然也不包含长度为<span class="math inline">\(5+2k(k&gt;0)\)</span>的回文子串；如果<code>S</code>中不包含长度为6的回文子串，那么<code>S</code>中必然也不包含长度为<span class="math inline">\(6+2k(k&gt;0)\)</span>的回文子串。因此，只要能够找到一种替换方法使得<code>S</code>不包含长度为5和6的回文子串，那么<code>S</code>中必然也没有长度大于等于5的回文子串。</p> <p>一种暴力的方法，是通过递归的方法将<code>S</code>中的字符<code>?</code>逐个替换为<code>0</code>或<code>1</code>，并验证得到的字符串中是否存在长度为5或6的回文子串，时间复杂度为<span class="math inline">\(O(n\cdot 2^n)\)</span>，这种方法能够通过小数据。下面主要介绍通过大数据的方法。</p> <p>显然，暴力方法的时间复杂度为指数级，可以通过动态规划将时间复杂度降低到多项式级别。先进行分类讨论：如果<code>S</code>长度小于5，那么该字符串无论怎么替换<code>?</code>字符，都可以满足要求，直接输出<code>POSSIBLE</code>即可；如果<code>S</code>长度为5，那么可以暴力枚举所有可能得到的替换后的字符串，并验证该字符串是否为回文串即可；下面主要讨论<code>S</code>长度大于5的情况。</p> <p>设<span class="math inline">\(dp[i]\)</span>表示以<code>S</code>的前<code>i</code>个字符能否找到一种替换方法保证没有长度大于等于5的回文子串。由于要验证是否包含长度为6的回文子串，那么在每次添加新的字符<code>S[i]</code>时，<code>S[i]</code>能否构成长度为6的回文子串与<code>S[i]</code>前面的5个字符<code>S[i-5],S[i-4],S[i-3],S[i-2],S[i-1]</code>有关，因此，可以为<code>S[i]</code>的前5个字符标记一个状态，由于每个字符的取值只有<code>0</code>和<code>1</code>两种，因此状态总数为<span class="math inline">\(2^5\)</span>。针对字符<code>S[i]</code>，暴力枚举以<code>S[i]</code>结尾的长度为6的子串的可能替换结果字符串<code>j</code>，如果<code>j</code>包含长度为5或6的回文子串，则不符合题目要求；否则<span class="math inline">\(dp[i][j]=dp[i-1][j']\)</span>，其中<span class="math inline">\(j'=S[i-6]+j[:5]\)</span>。具体实现可参考代码。</p> <h3 id="复杂度-2">复杂度</h3> <ul> <li>时间复杂度为<span class="math inline">\(O(2^K\cdot N)\)</span>。</li> <li>空间复杂度为<span class="math inline">\(O(2^K\cdot N)\)</span>。</li> </ul> <p>其中<span class="math inline">\(K=5\)</span>。</p> <h3 id="c代码-2">C++代码</h3> <pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt; using namespace std; using gg = long long; #define rep(i, a, b, c) for (gg i = (a); i &lt;= (b); i += (c)) #define rrep(i, a, b, c) for (gg i = (a); i &gt;= (b); i -= (c)) constexpr gg MAX = 1e5 + 5; constexpr gg MAX2 = 70; constexpr gg mod = 1e9 + 7; constexpr gg INF = 4e18; constexpr double eps = 1e-12; gg ti, ni, mi, ki, di, pi, xi, yi; gg up(gg n, gg m) { return n &gt;= 0 ? (n + m - 1) / m : n / m; } gg down(gg n, gg m) { return n &gt;= 0 ? n / m : (n - m + 1) / m; } //! ti; MAX; mod; 边界 bool dp[MAX][MAX2]; string s; void dfs(gg p, gg r, string cur, vector&lt;string&gt;&amp; v) {     if (p &gt; r) {         v.push_back(cur);         return;     }     if (s<div class="section-content"></p></div><p> != '1') {         dfs(p + 1, r, cur + "0", v);     }     if (s<div class="section-content"></p></div><p> != '0') {         dfs(p + 1, r, cur + "1", v);     } } bool isPalic(const string&amp; s) { return equal(s.begin(), s.end(), s.rbegin()); } void solve() {     cin &gt;&gt; ni &gt;&gt; s;     if (ni &lt;= 4) {         cout &lt;&lt; "POSSIBLE";     } else if (ni == 5) {         vector&lt;string&gt; v;         dfs(0, 4, "", v);         bool ans = all_of(v.begin(), v.end(), isPalic);         cout &lt;&lt; (ans ? "IMPOSSIBLE" : "POSSIBLE");     } else {         bool ans = false;         rep(i, 5, ni - 1, 1) {             vector&lt;string&gt; v;             dfs(i - 5, i, "", v);             for (string&amp; k : v) {                 gg cur = stoll(k, 0, 2);                 dp[i][cur] = not(isPalic(k) or isPalic(k.substr(0, 5)) or isPalic(k.substr(1, 5)));                 if (i &gt;= 6) {                     bool res = false;                     if (s[i - 6] != '1') {                         res = res or dp[i - 1][stoll("0" + k.substr(0, 5), 0, 2)];                     }                     if (s[i - 6] != '0') {                         res = res or dp[i - 1][stoll("1" + k.substr(0, 5), 0, 2)];                     }                     dp[i][cur] = dp[i][cur] and res;                 }                 if (i == ni - 1) {                     ans = ans or dp[i][cur];                 }             }         }         cout &lt;&lt; (ans ? "POSSIBLE" : "IMPOSSIBLE");     } } int main() {     ios::sync_with_stdio(false);     cin.tie(0);     ti = 1;     cin &gt;&gt; ti;     for (gg ii = 1; ii &lt;= ti; ++ii) {         cout &lt;&lt; "Case #" &lt;&lt; ii &lt;&lt; ": ";         solve();         cout &lt;&lt; "\n";     }     return 0; }</code></pre> <h2 id="interesting-integers"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://codingcompetitions.withgoogle.com/kickstart/round/00000000008cb33e/00000000009e73ea"  target="_blank" rel="nofollow">Interesting Integers</a></h2> <h3 id="题意概述-3">题意概述</h3> <p>如果一个整数的所有数字的乘积能被所有数字的和整除，就称这个整数为有趣的。给出两个整数<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>，找出<span class="math inline">\([A,B]\)</span>之间有趣的整数个数。</p> <h3 id="数据规模-3">数据规模</h3> <div class="math display">\[1≤A≤B≤10^5（小数据）<br /> \]</div> <h3 id="算法设计">算法设计</h3> <p>目前只会解小数据，大数据的解法可参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://leetcode-cn.com/circle/discuss/zABLhz/"  target="_blank" rel="nofollow">Google Kick Start 2022 Round A 题解</a>。通过枚举<span class="math inline">\([A,B]\)</span>之间的数字，暴力判断组成该整数的所有数字的乘积能能否被所有数字的和整除即可。</p> <h3 id="复杂度-3">复杂度</h3> <ul> <li>时间复杂度为<span class="math inline">\(O(n)\)</span>。</li> <li>空间复杂度为<span class="math inline">\(O(n)\)</span>。</li> </ul> <p>其中<span class="math inline">\(n=B-A+1\)</span>。</p> <h3 id="c代码-3">C++代码</h3> <pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt; using namespace std; using gg = long long; #define rep(i, a, b, c) for (gg i = (a); i &lt;= (b); i += (c)) #define rrep(i, a, b, c) for (gg i = (a); i &gt;= (b); i -= (c)) constexpr gg MAX = 1e5 + 5; constexpr gg MAX2 = 70; constexpr gg mod = 1e9 + 7; constexpr gg INF = 4e18; constexpr double eps = 1e-12; gg ti, ni, mi, ki, di, pi, xi, yi; gg up(gg n, gg m) { return n &gt;= 0 ? (n + m - 1) / m : n / m; } gg down(gg n, gg m) { return n &gt;= 0 ? n / m : (n - m + 1) / m; } //! ti; MAX; mod; 边界 bool func(gg n) {     gg s = 0, p = 1;     while (n &gt; 0) {         s += n % 10;         p *= n % 10;         n /= 10;     }     return p % s == 0; } void solve() {     cin &gt;&gt; xi &gt;&gt; yi;     gg ans = 0;     rep(i, xi, yi, 1) {         if (func(i)) {             ++ans;         }     }     cout &lt;&lt; ans; } int main() {     ios::sync_with_stdio(false);     cin.tie(0);     ti = 1;     cin &gt;&gt; ti;     for (gg ii = 1; ii &lt;= ti; ++ii) {         cout &lt;&lt; "Case #" &lt;&lt; ii &lt;&lt; ": ";         solve();         cout &lt;&lt; "\n";     }     return 0; }</code></pre> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3553.htm">vue框架 vue组件中的ref、props传值并修改、混合（子组件重复部分利用混合可以减少代码量的重复编写）</a></p>
                                                <p>下一个：<a href="/html/category/article-3555.htm">Vue，在v-for中遍历含有多个对象的数组时，实现单选框</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3692.htm" title="创建TypeScript代码模板(NVS+Yarn+ESLint+Prettier+Husky)">创建TypeScript代码模板(NVS+Yarn+ESLint+Prettier+Husky)</a></li>
                        <li class="py-2"><a href="/html/category/article-3693.htm" title="@Order的使用与Aop多切面的执行顺序">@Order的使用与Aop多切面的执行顺序</a></li>
                        <li class="py-2"><a href="/html/category/article-3723.htm" title="Kotlin杂记之标准函数和静态方法">Kotlin杂记之标准函数和静态方法</a></li>
                        <li class="py-2"><a href="/html/category/article-3779.htm" title="js数组删除的方法">js数组删除的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4091.htm" title="通过传递数字参数返回什么MySQL CONCAT()函数？">通过传递数字参数返回什么MySQL CONCAT()函数？</a></li>
                        <li class="py-2"><a href="/html/category/article-3696.htm" title="UML——顺序图">UML——顺序图</a></li>
                        <li class="py-2"><a href="/html/category/article-3686.htm" title="Springboot之请求映射">Springboot之请求映射</a></li>
                        <li class="py-2"><a href="/html/category/article-3715.htm" title="CSS图片上面放文字实现方式">CSS图片上面放文字实现方式</a></li>
                        <li class="py-2"><a href="/html/category/article-3689.htm" title="Spring（六）&#8212;-Spring AOP概述及底层实现原理">Spring（六）&#8212;-Spring AOP概述及底层实现原理</a></li>
                        <li class="py-2"><a href="/html/category/article-3712.htm" title="python中基本数据类型&#8212;&#8211;内置数据类型">python中基本数据类型&#8212;&#8211;内置数据类型</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>