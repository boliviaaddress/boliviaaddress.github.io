<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3559.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C语言进阶——数据的存储 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">C语言进阶——数据的存储</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="-toc" style="margin-left:0px;"> <p id="%E4%B8%80.%C2%A0%20%C2%A0%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-toc" style="margin-left:0px;">一.&nbsp; &nbsp;数据类型</p> <p id="%E4%BA%8C.%C2%A0%20%C2%A0%E6%95%B4%E5%BD%A2%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8-toc" style="margin-left:0px;">二.&nbsp; &nbsp;整形在内存中的存储</p> <p id="1.%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81-toc" style="margin-left:40px;">1.原码、反码、补码</p> <p id="2.%E5%A4%A7%E5%B0%8F%E7%AB%AF-toc" style="margin-left:40px;">2.大小端</p> <p id="%E4%B8%89.%C2%A0%20%C2%A0%C2%A0%E6%B5%AE%E7%82%B9%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%C2%A0-toc" style="margin-left:0px;">三.&nbsp; &nbsp;&nbsp;浮点型在内存中的存储&nbsp;</p> <p id="%E5%AD%98%E5%82%A8-toc" style="margin-left:40px;">存储</p> <p id="%E5%8F%96%E5%87%BA-toc" style="margin-left:40px;">取出</p> <hr id="hr-toc"/> <h1 id="%E4%B8%80.%C2%A0%20%C2%A0%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">一.&nbsp; &nbsp;数据类型</h1> <p>在前面，我们已经学过一些基本的内置类型</p> <p>char——字符数据类型</p> <p>short——短整型</p> <p>int——整形</p> <p>long——长整形</p> <p>long long——更长的整形</p> <p>float——单精度浮点数</p> <p>double——双精度浮点数</p> <p>而除开这些基本类型，数据类型还包括</p> <p><strong>构造类型：</strong></p> <p>数组类型<br /> 结构体类型 struct<br /> 枚举类型 enum<br /> 联合类型 union</p> <p><strong>指针类型：</strong></p> <p><strong>空类型：</strong></p> <p>void表示空类型，通常应用于函数的返回类型、函数的参数、指针类型<br /> 而作为指针类型时（void*），表示无具体类型的指针</p> <hr/> <hr/> <h1 id="%E4%BA%8C.%C2%A0%20%C2%A0%E6%95%B4%E5%BD%A2%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8">二.&nbsp; &nbsp;整形在内存中的存储</h1> <h2 id="1.%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81">1.原码、反码、补码</h2> <p style="margin-left:0;text-align:justify;">计算机中的有符号整形有三种表示方法，即原码、反码和补码。</p> <p style="margin-left:0;text-align:justify;">三种表示方法均有符号位和数值位两部分，符号位都是用0表示"正”，用1表示"负”，而数值位三种表示方法各不相同。</p> <p style="margin-left:0;text-align:justify;">无符号、正数:原码、反码、补码相同</p> <p style="margin-left:0;text-align:justify;">负数</p> <p style="margin-left:0;text-align:justify;"><strong>原码</strong><br /> 直接将数值按照正负数的形式翻译成二进制就可以得到原码。</p> <p style="margin-left:0;text-align:justify;"><strong>反码</strong><br /> 将原码的符号位不变，其他位依次按位取反就可以得到反码。</p> <p style="margin-left:0;text-align:justify;"><strong>补码</strong><br /> 反码+1就得到补码。</p> <p style="margin-left:0;text-align:justify;"> <p style="margin-left:0;text-align:justify;">对于整形来说︰数据存放内存中其实存放的是补码。</p> <p style="margin-left:0;text-align:justify;">在计算机系统中，数值一律用补码来表示和存储。原因在于，使用补码，可以将符号位和数值域统<br /> 一处理；<br /> 同时，加法和减法也可以统一处理（CPU只有加法器）此外，补码与原码相互转换，其运算过程<br /> 是相同的，不需要额外的硬件电路。</p> <p style="margin-left:0;text-align:justify;"> <p style="margin-left:0;text-align:justify;">例如</p> <pre><code class="language-cpp">unsigned int i=10; int j=-20; printf("%d",i+j);</code></pre> <p style="margin-left:0;text-align:justify;">我们可以得到</p> <p style="margin-left:0;text-align:justify;">i的补码为00000000&nbsp;00000000&nbsp;00000000&nbsp;00001010</p> <p style="margin-left:0;text-align:justify;">j的补码为11111111&nbsp;11111111&nbsp;11111111&nbsp;11101100</p> <p style="margin-left:0;text-align:justify;">相加后得到11111111&nbsp;11111111&nbsp;11111111 11110110</p> <p style="margin-left:0;text-align:justify;">转化为整形便是-10；</p> <p style="margin-left:0;text-align:justify;"><img fetchpriority="high" decoding="async" alt="" height="182" src="http://img.555519.xyz/uploads/20230203/5a47e16b56bf4e2173d82a953f829432.jpg"></p> <p>&nbsp;</p> <p style="margin-left:0;text-align:justify;">而在进行类型转换的时候，要对补码进行截断或补位处理</p> <p style="margin-left:0;text-align:justify;">而补位时，有符号则补符号位，无符号则补0；</p> <p style="margin-left:0;text-align:justify;">例如</p> <pre><code class="language-cpp">char a=128; printf("%d",a);</code></pre> <p>首先，128为整形数据，默认为4个字节。</p> <p>其补码为 00000000 00000000 00000000 10000000；</p> <p>而将其赋给字符变量a时，要进行截断处理，即10000000；</p> <p>在我们使用的vs中，char默认为有符号，因此头部的1为符号位。</p> <p>而a作为整形打印时，由于符号位为1，在前面补1</p> <p>11111111&nbsp;11111111&nbsp;11111111&nbsp;10000000</p> <p>作为整形打印-128</p> <p><img decoding="async" alt="" height="151" src="http://img.555519.xyz/uploads/20230203/cc8de8a830a726d761f316310c71cbb5.jpg"></p> <hr/> <h2 id="2.%E5%A4%A7%E5%B0%8F%E7%AB%AF">2.大小端</h2> <p>大端（存储）模式，是指数据的低位保存在内存的高地址中，而数据的高位，保存在内存的低地址<br /> 中；<br /> 小端（存储）模式，是指数据的低位保存在内存的低地址中，而数据的高位，保存在内存的高地<br /> 址中。</p> <p><strong>为什么会有大小端模式之分呢？</strong></p> <blockquote> <p>这是因为在计算机系统中，我们是以字节为单位的，每个地址单元都对应着一个字节，一个字节为8 bit。但是在C语言中除了8 bit的char之外，还有16 bit的short型，32 bit的long型（要看具体的编译器），另外，对于位数大于8位的处理器，例如16位或者32位的处理器，由于寄存器宽度大于一个字节，那么必然存在着一个如何将多个字节安排的问题。因此就导致了大端存储模式和小端存储模式。<br /> 例如：一个 16bit 的 short 型 x ，在内存中的地址为 0x0010 ， x 的值为 0x1122 ，那么 0x11 为高字节， 0x22 为低字节。对于大端模式，就将 0x11 放在低地址中，即 0x0010 中， 0x22 放在高地址中，即 0x0011 中。小端模式，刚好相反。我们常用的 X86 结构是小端模式，而 KEIL C51 则为大端模式。很多的ARM，DSP都为小端模式。有些ARM处理器还可以由硬件来选择是大端模式还是小端模式。</p> </blockquote> <p>例如在vs环境下</p> <p><img decoding="async" alt="" height="176" src="http://img.555519.xyz/uploads/20230203/bf1b70f52b3f7b59925f5cc71d1b6ca2.jpg"></p> <p>&nbsp;当我们查看i的地址时，存储为01 00 00 00（16进制表示），而i的补码为 00 00 00 01</p> <p>因此我们可以知道这是小端存储。</p> <p>而顺序并非完全相反，这是因为存储时是以字节为单位。</p> <p>而我们也可以利用这个特性来写一段代码判断是大端还是小端。</p> <p>我们依然可以利用上面的i；小端存储时，i为 01 00 00 00 而大端则为 00 00 00 01</p> <p>因此我们可以通过判断第一个字节的数据来判断</p> <pre><code class="language-cpp">int main() { 	int i = 1; 	if (*(char*)&i) 		printf("小端\n"); 	else 		printf("大端\n"); 	return 0; }</code></pre> <p><img loading="lazy" decoding="async" alt="" height="224" src="http://img.555519.xyz/uploads/20230203/83e6233224129d4625b90a3b09a427a6.jpg"></p> <hr/> <hr/> <h1 id="%E4%B8%89.%C2%A0%20%C2%A0%C2%A0%E6%B5%AE%E7%82%B9%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%C2%A0">三.&nbsp; &nbsp;&nbsp;浮点型在内存中的存储&nbsp;</h1> <h2 id="%E5%AD%98%E5%82%A8">存储</h2> <p>所有的浮点数都可以表示为&nbsp; &nbsp; (-1)^S * M * 2^E</p> <p>其中&nbsp; &nbsp;(-1)^S表示符号位，S为0或1&nbsp; &nbsp;M表示有效数字，大于等于1，小于2&nbsp; &nbsp; &nbsp;2^E表示指数位。</p> <p>例如5.5</p> <p>二进制表示为101.1</p> <p>转化为对应格式为 (-1)^0*1.011*2^2&nbsp; &nbsp; &nbsp;其中S为0，M为1.011，E为2</p> <p>而float类型最高1位为S，后面8位为E，最后23位为M</p> <p>double类型最高1位为S，后面11位为E，最后52位为M</p> <p>以float类型为例</p> <p>S原样存储&nbsp; &nbsp; &nbsp;由于E可能为负数，因此将E加上127后存储&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 而M固定范围大于等于1小于2，因此只需要存储小数部分，若是M存储后还有空间则补0</p> <p>例如5.5 存储后为1 00000010 01100000000000000000000</p> <hr/> <h2 id="%E5%8F%96%E5%87%BA">取出</h2> <p>当E全为1时，表示指数位为2^128，因此可以直接表示为正负无穷大（取决于符号位）</p> <p>而当E全为0时，表示指数位为2^-126，非常接近0，因此不再加上E的整数部分1，而是作为小于1的小数表示正负0或者接近0的数。</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3558.htm">vue 实现弹窗关闭后刷新效果_vue.js</a></p>
                                                <p>下一个：<a href="/html/category/article-3560.htm">Antd 动态显示 Upload 已上传文件</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4393.htm" title="2022公务员国考报名流程（国家公务员国考报名）">2022公务员国考报名流程（国家公务员国考报名）</a></li>
                        <li class="py-2"><a href="/html/category/article-4503.htm" title="女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）">女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-5593.htm" title="吉他牌子哪个好用(吉他牌子哪个好一点)">吉他牌子哪个好用(吉他牌子哪个好一点)</a></li>
                        <li class="py-2"><a href="/html/category/article-4092.htm" title="nginx进程管理">nginx进程管理</a></li>
                        <li class="py-2"><a href="/html/category/article-3709.htm" title="MySQL分页查询">MySQL分页查询</a></li>
                        <li class="py-2"><a href="/html/category/article-3722.htm" title="MyBatis:SQL语句中的foreach标签的详细介绍">MyBatis:SQL语句中的foreach标签的详细介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-3712.htm" title="python中基本数据类型&#8212;&#8211;内置数据类型">python中基本数据类型&#8212;&#8211;内置数据类型</a></li>
                        <li class="py-2"><a href="/html/category/article-5952.htm" title="喵咪驱虫怎么做的（猫驱虫使用方法）">喵咪驱虫怎么做的（猫驱虫使用方法）</a></li>
                        <li class="py-2"><a href="/html/category/article-3721.htm" title="（九）C++对象模型和this指针基础">（九）C++对象模型和this指针基础</a></li>
                        <li class="py-2"><a href="/html/category/article-4537.htm" title="宠物领养协议模板图片大全（宠物领养协议模板图片大全集）">宠物领养协议模板图片大全（宠物领养协议模板图片大全集）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>