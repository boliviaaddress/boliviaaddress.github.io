<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3581.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Shiro&#8211;解决is not eligible for getting processed by all BeanPostProcessors - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Shiro&#8211;解决is not eligible for getting processed by all BeanPostProcessors</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>原文网址：Shiro--解决is not eligible for getting processed by all BeanPostProcessors_IT利刃出鞘的博客-CSDN博客</p> <h1>简介</h1> <p><strong>说明</strong></p> <p><strong></strong>本文介绍使用SpringBoot整合Shiro时打印"is not eligible for getting processed by all BeanPostProcessors"的原因以及解决方案。</p> <p><strong>问题描述</strong></p> <p>使用SpringBoot整合Shiro时发现有如下输出：</p> <pre><code>2021-08-14 17:53:25.145  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.152  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.367  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.369  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'userMapper' of type [com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.378  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.example.demo.business.rbac.user.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.444  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.445  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'roleMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.448  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'roleServiceImpl' of type [com.example.demo.business.rbac.role.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.482  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'permissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.483  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'permissionMapper' of type [com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.485  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'permissionServiceImpl' of type [com.example.demo.business.rbac.permission.service.impl.PermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.486  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'getDatabaseRealm' of type [com.example.demo.config.shiro.realm.DatabaseRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.491  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.493  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.504  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.530  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.539  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'shiroFilterChainDefinition' of type [org.apache.shiro.spring.web.config.DefaultShiroFilterChainDefinition] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.543  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'requestContextFilter' of type [org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.551  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.555  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'formContentFilter' of type [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.573  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.575  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.576  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'characterEncodingFilter' of type [org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.601  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.config.web.autoconfigure.ShiroWebFilterConfiguration' of type [org.apache.shiro.spring.config.web.autoconfigure.ShiroWebFilterConfiguration$$EnhancerBySpringCGLIB$$2285dfd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 17:53:25.615  INFO 80884 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'globalFilters' of type [java.util.Collections$SingletonList] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-1</code></pre> <p>发现这个信息一直在输出：</p> <p>Bean 'xxx' of type [com.example.demo.business.rbac.user.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</p> <p>中文描述</p> <p>意思是：xxx这个bean不能被所有的BeanPostProcessors处理（比如：自动代理（即：AOP））</p> <p><strong>这个输出可能引起的问题</strong></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 我们知道，Spring的很多逻辑是用AOP实现的，比较重要的一个就是：数据库的事务。如果事务不能被代理的话，那么Spring将无法控制事务（比如：提交、回滚）。</p> <h1>原因解析</h1> <h2>简介</h2> <p>&nbsp; &nbsp; &nbsp; &nbsp; 依赖了UserService的某个bean实现了BeanPostProcessor之类的接口，导致UserServiceImpl被提前注入，导致无法被AOP。</p> <h2>断点调试</h2> <p><strong>1.打条件断点</strong></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 在SpringBoot的代码中获得userServiceImpl这个bean的地方打断点，看是哪个特殊的bean最终依赖了userServiceImpl这个bean。</p> <p>打条件断点：</p> <p><img fetchpriority="high" decoding="async" alt="" height="520" src="http://img.555519.xyz/uploads3/20220822/106d172b3dd690b010cd892bb1049e30.jpg"></p> <p>我如何知道在哪里打断点的？</p> <p>这个就要了解Bean的创建过程了，见：Spring--Bean生命周期--流程/原理--SpringBoot_IT利刃出鞘的博客-CSDN博客_springboot中bean的生命周期</p> <p>所以，本处的断点可以打在下边这些的任意一个方法里边：</p> <ul> <li>AbstractBeanFactory#getBean</li> <li>AbstractBeanFactory#doGetBean</li> <li>AbstractAutowireCapableBeanFactory#createBean</li> <li>AbstractAutowireCapableBeanFactory#doCreateBean</li> </ul> <p><strong>2.进入断点</strong></p> <p><img decoding="async" alt="" height="912" src="http://img.555519.xyz/uploads3/20220822/91e2104d68270d661f32f80b02f9c287.jpg"></p> <p>在上边的箭头处沿着栈信息往前找，看它是如何依赖到UserServiceImpl的。</p> <pre><code>前边是bean的类型，后边是bean的名字。有的bean没类型（required为null），只有bean名字。 org.springframework.beans.factory.config.BeanPostProcessor（webMvcObjectMapperConfigurer）     org.springframework.aop.Advisor（org.springframework.transaction.config.internalTransactionAdvisor）         （org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration）             org.springframework.aop.Advisor（authorizationAttributeSourceAdvisor）                 （securityManager）                     （getDatabaseRealm） //这个是我代码中自定义的Realm的用@Bean注册时的方法名                         （userServiceImpl）</code></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一目了然了。我代码里边是webMvcObjectMapperConfigurer这个BeanPostProcessor的实现类最终依赖到了UserServiceImpl。它使UserServiceImpl提前被IOC，无法被AOP了。</p> <p><strong>注意</strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本处我的代码是webMvcObjectMapperConfigurer这个BeanPostProcessor的实现类最终依赖到了UserServiceImpl。</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个与个人的Shiro使用方式有关，我是在代码里提供了下边这个bean，所以才会这样</p> <pre><code class="language-java">/**  * 开启shiro aop注解支持.  * 使用代理方式;所以需要开启代码支持;  *  * @param securityManager  * @return  */ @Bean public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(         SecurityManager securityManager) {     AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor =             new AuthorizationAttributeSourceAdvisor();     authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);     return authorizationAttributeSourceAdvisor; }</code></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果提供了ShiroFilterFactoryBean这个bean，也会导致“is not eligible for getting processed by all BeanPostProcessors”这个问题，因为它也实现了BeanPostProcessor接口。</p> <h1>解决方案</h1> <h2>方案1：延迟初始化</h2> <p><strong>其他网址</strong></p> <p>Spring--BeanPostProcessor--注意/问题/坑--SpringBoot_IT利刃出鞘的博客-CSDN博客</p> <p>Spring(SpringBoot)--延迟加载(@Lazy注解等)--使用/原理_IT利刃出鞘的博客-CSDN博客</p> <p><strong>简介</strong></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 可以使用延迟初始化来解决。延迟初始化会在IOC的时候先给出一个代理类，IOC之后的AOP这个BeanPostProcessor会正常地给它处理。</p> <p><strong>具体做法</strong></p> <p>加一个注解即可：@Lazy。可以在两个地方加这个注解：字段、方法参数。</p> <p>方案1：加到字段上</p> <pre><code class="language-java">import org.springframework.context.annotation.Lazy; import org.apache.shiro.realm.AuthorizingRealm;  public class DatabaseRealm extends AuthorizingRealm {     @Lazy     @Autowired     private UserService userService; }</code></pre> <p>方案2：加到构造方法的参数上</p> <pre><code class="language-java">import org.springframework.context.annotation.Lazy; import org.apache.shiro.realm.AuthorizingRealm;  public class DatabaseRealm extends AuthorizingRealm {     private UserService userService; 	public DatabaseRealm(@Lazy @Autowired UserService userService){ 		this.userService = userService; 	} }</code></pre> <p><strong>修改之后的输出</strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我把业务有关的数据库Service都加上了@Lazy。就是这几个：UserService、OrderService、ProductService。</p> <pre><code>2021-08-14 20:03:12.810  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$a5a744cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:12.833  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$a83a8371] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:12.866  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.example.demo.config.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$4242a0c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.297  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'hashedCredentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.315  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'getDatabaseRealm' of type [com.example.demo.config.shiro.realm.DatabaseRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.319  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.321  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.326  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.342  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.349  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'shiroFilterChainDefinition' of type [org.apache.shiro.spring.web.config.DefaultShiroFilterChainDefinition] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.352  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'requestContextFilter' of type [org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.356  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.358  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'formContentFilter' of type [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.385  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.387  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.388  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'characterEncodingFilter' of type [org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.402  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.config.web.autoconfigure.ShiroWebFilterConfiguration' of type [org.apache.shiro.spring.config.web.autoconfigure.ShiroWebFilterConfiguration$$EnhancerBySpringCGLIB$$fcae0a6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2021-08-14 20:03:13.410  INFO 8232 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'globalFilters' of type [java.util.Collections$SingletonList] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</code></pre> <p>可以看到，这几个Service的输出就没有了。</p> <p>但是，还有其他的bean会报这个问题。报就报吧，只要他没影响到功能就行。</p> <h2>方案2：@Role(BeanDefinition.ROLE_INFRASTRUCTURE)</h2> <h3>简介</h3> <p><strong>方案说明</strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Bean的声明上加个注解：@Role(BeanDefinition.ROLE_INFRASTRUCTURE)<br /> 表明这个bean是完全后台模式，不需要被代理。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 需要注意的是，我们的Realm需要操作数据库，它里边依赖的Service（例如UserService）仍然需要被代理。所以，上边“方案1”的延迟初始化仍然需要加到UserService等Service上。</p> <p><strong>原理</strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spring 容器初始化时会在refresh方法中执行 registerBeanPostProcessors(beanFactory);<br /> 此方法为容器增加了一个BeanPostProcessorChecker这个BeanPostProcessor，它会记录下当前的BeanPostProcessor数量。方法位置是：org.springframework.context.support.PostProcessorRegistrationDelegate.BeanPostProcessorChecker#postProcessAfterInitialization</p> <p>代码如下：</p> <pre><code class="language-java">@Override public Object postProcessAfterInitialization(Object bean, String beanName) {     if (!(bean instanceof BeanPostProcessor) && !isInfrastructureBean(beanName) &&             this.beanFactory.getBeanPostProcessorCount() < this.beanPostProcessorTargetCount) {         if (logger.isInfoEnabled()) {             logger.info("Bean '" + beanName + "' of type [" + bean.getClass().getName() +                     "] is not eligible for getting processed by all BeanPostProcessors " +                     "(for example: not eligible for auto-proxying)");         }     }     return bean; }</code></pre> <p>满足了三个条件才会打印这个日志，<br /> 1. bean 没有实现BeanPostProcesor<br /> 2. 不是 isInfrastructureBean，<br /> 3. 之前记录的BeanPostProcess数量少于当前的数量。</p> <h3>测试</h3> <p>在Shiro的总配置类上的所有Bean上都加上@Role(BeanDefinition.ROLE_INFRASTRUCTURE)。</p> <p>代码示例：</p> <pre><code class="language-java">package com.example.demo.config.shiro;  import com.example.demo.common.constant.WhiteList; import com.example.demo.config.shiro.filter.JwtFilter; import com.example.demo.config.shiro.realm.AccountRealm; import org.apache.shiro.authc.credential.HashedCredentialsMatcher; import org.apache.shiro.mgt.DefaultSessionStorageEvaluator; import org.apache.shiro.mgt.DefaultSubjectDAO; import org.apache.shiro.mgt.SecurityManager; import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor; import org.apache.shiro.spring.web.ShiroFilterFactoryBean; import org.apache.shiro.spring.web.config.DefaultShiroFilterChainDefinition; import org.apache.shiro.spring.web.config.ShiroFilterChainDefinition; import org.apache.shiro.web.filter.authc.AuthenticatingFilter; import org.apache.shiro.web.mgt.DefaultWebSecurityManager; import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator; import org.springframework.beans.factory.config.BeanDefinition; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Role;  import javax.servlet.Filter; import java.util.LinkedHashMap; import java.util.Map;  @Configuration @Role(BeanDefinition.ROLE_INFRASTRUCTURE) public class ShiroConfig {     @Bean     @Role(BeanDefinition.ROLE_INFRASTRUCTURE)     public ShiroFilterChainDefinition shiroFilterChainDefinition() {         DefaultShiroFilterChainDefinition chainDefinition = new DefaultShiroFilterChainDefinition();          chainDefinition.addPathDefinition("/login", "anon");          WhiteList.ALL.forEach(str -> {             chainDefinition.addPathDefinition(str, "anon");         });          // all other paths require a logged in user         chainDefinition.addPathDefinition("/**", "jwt");         return chainDefinition;     }      /**      * 设置过滤器，将自定义的Filter加入。      */     @Bean("shiroFilterFactoryBean")     @Role(BeanDefinition.ROLE_INFRASTRUCTURE)     public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) {         ShiroFilterFactoryBean factoryBean = new ShiroFilterFactoryBean();         // 登录的地址         factoryBean.setLoginUrl("/login");         // 登录成功后要跳转的地址         // factoryBean.setSuccessUrl("/index");         // 未授权地址         // factoryBean.setUnauthorizedUrl("/unauthorized");         factoryBean.setSecurityManager(securityManager);         Map<String, Filter> filterMap = factoryBean.getFilters();         filterMap.put("jwt", new JwtFilter());         factoryBean.setFilters(filterMap);         factoryBean.setFilterChainDefinitionMap(shiroFilterChainDefinition().getFilterChainMap());          return factoryBean;     }      @Bean     @Role(BeanDefinition.ROLE_INFRASTRUCTURE)     public DefaultWebSecurityManager securityManager() {         DefaultSubjectDAO subjectDAO = new DefaultSubjectDAO();         DefaultSessionStorageEvaluator defaultSessionStorageEvaluator = new DefaultSessionStorageEvaluator();         // 关闭shiro自带的session。这样不能通过session登录shiro，后面将采用jwt凭证登录。         // 见：http://shiro.apache.org/session-management.html#SessionManagement-DisablingSubjectStateSessionStorage         defaultSessionStorageEvaluator.setSessionStorageEnabled(false);         subjectDAO.setSessionStorageEvaluator(defaultSessionStorageEvaluator);          DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();         securityManager.setRealm(getDatabaseRealm());         securityManager.setSubjectDAO(subjectDAO);          return securityManager;     }      @Bean     @Role(BeanDefinition.ROLE_INFRASTRUCTURE)     public AccountRealm getDatabaseRealm() {         return new AccountRealm();     }      /**      * setUsePrefix(true)用于解决一个奇怪的bug。如下：      *  在引入spring aop的情况下，在@Controller注解的类的方法中加入@RequiresRole等      *  shiro注解，会导致该方法无法映射请求，导致返回404。加入这项配置能解决这个bug。      */     @Bean     @Role(BeanDefinition.ROLE_INFRASTRUCTURE)     public static DefaultAdvisorAutoProxyCreator getDefaultAdvisorAutoProxyCreator(){         DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator=new DefaultAdvisorAutoProxyCreator();         defaultAdvisorAutoProxyCreator.setUsePrefix(true);         return defaultAdvisorAutoProxyCreator;     } }</code></pre> <p>启动结果</p> <pre><code>  .   ____          _            __ _ _  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \ ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )   '  |____| .__|_| |_|_| |_\__, | / / / /  =========|_|==============|___/=/_/_/_/  :: Spring Boot ::        (v2.3.8.RELEASE)  2022-05-18 19:16:52.898  INFO 4824 --- [           main] com.example.demo.ShiroApplication        : Starting ShiroApplication on DESKTOP-QI6B9ME with PID 4824 (E:\work\Idea_proj\shiro\shiro_3_jwt\target\classes started by Liu in E:\work\Idea_proj\shiro\shiro_3_jwt) 2022-05-18 19:16:52.901  INFO 4824 --- [           main] com.example.demo.ShiroApplication        : No active profile set, falling back to default profiles: default 2022-05-18 19:16:53.884  INFO 4824 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$88a9810a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2022-05-18 19:16:53.972  INFO 4824 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$8b3cbfaf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2022-05-18 19:16:54.477  INFO 4824 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2022-05-18 19:16:54.489  INFO 4824 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2022-05-18 19:16:54.702  INFO 4824 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http) 2022-05-18 19:16:54.711  INFO 4824 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat] 2022-05-18 19:16:54.711  INFO 4824 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.41] 2022-05-18 19:16:54.817  INFO 4824 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext 2022-05-18 19:16:54.817  INFO 4824 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1872 ms Logging initialized using 'class org.apache.ibatis.logging.stdout.StdOutImpl' adapter. Property 'mapperLocations' was not specified.  _ _   |_  _ _|_. ___ _ |    _  | | |\/|_)(_| | |_\  |_)||_|_\       /               |                                  3.4.3.1  2022-05-18 19:16:56.483  INFO 4824 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor' 2022-05-18 19:16:56.764  INFO 4824 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '' 2022-05-18 19:16:56.947  INFO 4824 --- [           main] com.example.demo.ShiroApplication        : Started ShiroApplication in 4.399 seconds (JVM running for 5.471)</code></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可见，“is not eligible for getting processed by all BeanPostProcessors”警告已经少了很多，但还是有4个类的警告：ShiroBeanAutoConfiguration、ShiroAnnotationProcessorAutoConfiguration、AuthorizationAttributeSourceAdvisor、DefaultEventBus。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 上边这4个是Shiro包里边的类，我们无法处理。</p> <h1>思考</h1> <p>&nbsp; &nbsp; &nbsp; &nbsp; 如何完全去掉“is not eligible for getting processed by all BeanPostProcessors”这个输出？</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 很不幸，没有办法。Shiro它在关键的bean处实现了BeanPostProcessor接口，它又依赖了其他东西，就会导致其他东西提前IOC，无法AOP。</p> <p>一个很好的权限框架应该是这样的：</p> <ol> <li>可以方便配置使用session或者token</li> <li>可以方便配置session或token的超时时间</li> <li>不实现BeanPostProcessor</li> <li>提供无需身份认证的注解，这个注解可以加到方法或者类上</li> <li>默认支持主流的缓存技术：Redis、Memcache、单机版。而且可配置、可自定义读写缓存的逻辑</li> <li>支持前后端一体的和前后端分离的场景，可以通过配置来切换。 <ol> <li>比如：我想前后端分离，就用不到shiro里边的loginUrl、successUrl、unauthorizedUrl</li> </ol> </li> </ol> <h1>其他网址</h1> <p>Bean生命周期--BeanPostProcessor-坑_IT利刃出鞘的博客-CSDN博客<br />业务类无法被AOP代理问题</p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3580.htm">Sequelize数据库中文排序</a></p>
                                                <p>下一个：<a href="/html/category/article-3582.htm">SpringBoot+Vue之分页操作</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3728.htm" title="Linux  C++  实现一个简易版的ping （也就是ICMP协议）">Linux  C++  实现一个简易版的ping （也就是ICMP协议）</a></li>
                        <li class="py-2"><a href="/html/category/article-3715.htm" title="CSS图片上面放文字实现方式">CSS图片上面放文字实现方式</a></li>
                        <li class="py-2"><a href="/html/category/article-4092.htm" title="nginx进程管理">nginx进程管理</a></li>
                        <li class="py-2"><a href="/html/category/article-5593.htm" title="吉他牌子哪个好用(吉他牌子哪个好一点)">吉他牌子哪个好用(吉他牌子哪个好一点)</a></li>
                        <li class="py-2"><a href="/html/category/article-6041.htm" title="动物疫苗销售需要什么手续和条件呢英文翻译（卖动物疫苗利润有多高）">动物疫苗销售需要什么手续和条件呢英文翻译（卖动物疫苗利润有多高）</a></li>
                        <li class="py-2"><a href="/html/category/article-6172.htm" title="动物疫苗研发生产流程QA生产职责（动物疫苗工艺）">动物疫苗研发生产流程QA生产职责（动物疫苗工艺）</a></li>
                        <li class="py-2"><a href="/html/category/article-5979.htm" title="动物疫苗价格表图片大全大图高清 动物疫苗价格表图片大全大图高清版">动物疫苗价格表图片大全大图高清 动物疫苗价格表图片大全大图高清版</a></li>
                        <li class="py-2"><a href="/html/category/article-6217.htm" title="青岛最好的动物医院排名（青岛市动物诊疗价目收费表）">青岛最好的动物医院排名（青岛市动物诊疗价目收费表）</a></li>
                        <li class="py-2"><a href="/html/category/article-6040.htm" title="赤豆粥（赤豆粥图片）">赤豆粥（赤豆粥图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-5952.htm" title="喵咪驱虫怎么做的（猫驱虫使用方法）">喵咪驱虫怎么做的（猫驱虫使用方法）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">37</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>