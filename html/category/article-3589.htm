<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3589.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>unity 编辑器扩展简单入门 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">unity 编辑器扩展简单入门</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h1 id="unity-编辑器扩展简单入门">unity 编辑器扩展简单入门</h1> <pre><code>通过使用编辑器扩展，我们可以对一些机械的操作实现自动化，而不用使用额外的环境，将工具与开发环境融为一体；并且，编辑器扩展也提供GUI库，来实现可视化操作；编辑器扩展甚至也可以“补充”IDE缺失的一些内容，让IDE更加人性化。</code></pre> <h2 id="主要内容">主要内容</h2> <ul> <li>MenuItem无界面操作</li> <li>窗口</li> <li>优化内置操作</li> <li>简单工具窗口</li> <li>Gizmos改造场景显示</li> </ul> <h2 id="一menuitem无界面操作">一、MenuItem无界面操作</h2> <hr/> <p>在<code>assets</code>文件夹下创建<code>Editor</code>文件夹，创建一个新的<code>c#</code>脚本；</p> <pre><code class="language-C#">using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEditor;  public class BaseTest : MonoBehaviour {     [MenuItem("德玛/第一个扩展")]     static void debugLog()     {         Debug.Log("我是一个menuItem");     } }</code></pre> <p>如图，这是我们第一个创建的扩展。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/fafe920b3e7cf931286a7bc969e54a58.jpg" alt="unity 编辑器扩展简单入门"></p> <p>此时，如果我们需要获得一个当前场景选中的物品，则<br /> 需要通过<code>Selection</code>。将代码拷贝到当前创建的类里面：</p> <pre><code class="language-C#">    // 设置第二个参数     [MenuItem("德玛/two", false)]     static void testSecondParam()     {         Vector3 p = Selection.activeTransform.position;         Vector3 v3 = new Vector3(p.x+1, p.y, p.z);         Instantiate(Selection.activeTransform, v3, Quaternion.identity);     }     [MenuItem("德玛/two", true)]     static bool testSecondParam2()     {         return Selection.activeGameObject != null;     }</code></pre> <p>通过这段代码，我们可以创建一个只有选择了一个场景物体，才会激活的按钮。</p> <h2 id="二窗口">二、窗口</h2> <hr/> <p>创建窗口需要通过<code>EditorWindow</code>作为基类，还是<code>MenuItem</code>为入口创建；</p> <pre><code class="language-C#">using UnityEngine; using System.Collections; using UnityEditor;		//注意要引用 public class MyWindow : EditorWindow {     [MenuItem("德玛/Window/NormalWindow")]//在unity菜单Window下有MyWindow选项     static void NormalWindow()     { 		windowType = 1;         MyWindow myWindow = (MyWindow)EditorWindow.GetWindow(typeof(MyWindow), true, "德玛标题", true);//创建窗口         myWindow.Show();//展示     }  	public void Awake() 	{ 		//在资源中读取一张贴图 		texture = Resources.Load("1") as Texture; 	} 	//绘制窗口时调用 	void OnGUI() 	{             EditorGUILayout.LabelField("选中"); 			EditorGUILayout.LabelField(EditorWindow.focusedWindow.ToString()); 			EditorGUILayout.LabelField("划入"); 			EditorGUILayout.LabelField(EditorWindow.mouseOverWindow.ToString()); 	} 	//更新 	void Update() 	{  	} 	void OnFocus() 	{ 		Debug.Log("当窗口获得焦点时调用一次"); 	} 	void OnLostFocus() 	{ 		Debug.Log("当窗口丢失焦点时调用一次"); 	} 	void OnHierarchyChange() 	{ 		Debug.Log("当Hierarchy视图中的任何对象发生改变时调用一次"); 	} 	void OnProjectChange() 	{ 		Debug.Log("当Project视图中的资源发生改变时调用一次"); 	} 	void OnInspectorUpdate() 	{ 		//Debug.Log("窗口面板的更新"); 		//这里开启窗口的重绘，不然窗口信息不会刷新 		this.Repaint(); 	}  	void OnSelectionChange() 	{ 		//当窗口出去开启状态，并且在Hierarchy视图中选择某游戏对象时调用 		foreach (Transform t in Selection.transforms) 		{ 			//有可能是多选，这里开启一个循环打印选中游戏对象的名称 			Debug.Log("OnSelectionChange" + t.name); 		} 	}  	void OnDestroy() 	{ 		Debug.Log("当窗口关闭时调用"); 	} }</code></pre> <p>将上面的代码放入<code>Editor</code>目录下，通过<code>德玛/Window/NormalWindow</code>可以打开窗口。<br /><code>EditorWindow.focusedWindow</code>获取当前焦点窗口；<br /><code>EditorWindow.mouseOverWindow</code>获取当前鼠标划入的窗口；</p> <p>各种生命周期函数均有打印，自行理会。</p> <pre><code class="language-C#">	void OnInspectorUpdate() 	{ 		//Debug.Log("窗口面板的更新"); 		//这里开启窗口的重绘，不然窗口信息不会刷新 		this.Repaint(); 	}</code></pre> <p>这段代码可以保证实时刷新显示。</p> <h2 id="三优化内置操作">三、优化内置操作</h2> <hr/> <p>当路径放入<code>GameObject</code>的时候，会出现在右键菜单里面；</p> <pre><code class="language-C#">  [MenuItem("GameObject/德玛/德玛Custom Game Object", false, 10]</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cfc11ff870a411c8b72c9c6fa9df3c34.jpg" alt="unity 编辑器扩展简单入门"></p> <h4 id="注解">注解</h4> <p>当然，除了在<code>Editor</code>目录下添加各种扩展以外，我们可以通过给项目脚本添加注解的方式，来优化编辑器显示；<br /> 比如通过添加类似于<code>Component</code>的方式，来优化脚本的添加方式，点击后会直接将脚本添加到场景物体上。<br /> 将<code>[RequireComponent(typeof(Rigidbody))]</code>放入类头。我们将下面脚本放入到<code>Assets/Scripts</code>目录下面。</p> <pre><code class="language-C#">using UnityEngine;  // 通过编辑器的Component菜单添加脚本 [RequireComponent(typeof(Rigidbody))] [HelpURL("https://docs.unity3d.com/ScriptReference/HelpURLAttribute.html")] [AddComponentMenu("德玛/添加德玛脚本")] public class ContextTesting : MonoBehaviour {     [Header("属性标题")]     [Multiline(3)]     public string name2;      [Space(100)]     [Tooltip("用于设置性别")]     public string sex;      [HideInInspector]     public int p = 5;      [Range(1, 100)]     [Tooltip("Health value between 0 and 100.")]     public int health = 0;      /// Add a context menu named "Do Something" in the inspector     /// of the attached script.     /// 给当前脚本添加右键内容     [ContextMenu("德玛西亚")]     void DoSomething()     {         Debug.Log("德玛西亚打印");     }      // 给属性添加右键     [ContextMenuItem("重置属性为空", "ResetBiography")]     public string playerBiography = "";     void ResetBiography()     {         playerBiography = "";     } }</code></pre> <p>我们发现，我们可以想组件一样的添加脚本了！<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/dee55a9cd89ae9652b7d60ec62fce409.jpg" alt="unity 编辑器扩展简单入门"><br /> 在<code>Inspector</code>目录我们也注意到当前脚本属性的显示也发生了变化；<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/74f61bdb49d6cf31eec888fc145d9dd7.jpg" alt="unity 编辑器扩展简单入门"></p> <p>在<code>Inspector</code>上，我们也多出来一个<code>Rigidbody</code>组件。</p> <h4 id="美化项目脚本的属性显示">美化项目脚本的属性显示</h4> <p>在<code>Assets/Scripts</code>下面创建<code>MyPlayer</code></p> <pre><code class="language-C#">using UnityEngine; using System.Collections;  public class MyPlayer : MonoBehaviour {     public int armor = 100;     public int attack = 100;     public GameObject equipment;  }</code></pre> <p>在<code>Editor</code>下面创建<code>MyPlayerEditor</code>:</p> <pre><code class="language-C#">using UnityEngine; using UnityEditor; using System.Collections; [CustomEditor(typeof(MyPlayer))] public class MyPlayerEditor : Editor {     SerializedProperty attack;     void OnEnable()     {         attack = serializedObject.FindProperty("attack");     }     public override void OnInspectorGUI()     {         serializedObject.Update();         EditorGUILayout.IntSlider(attack, 0, 100, new GUIContent("攻击力"));         ProgressBar(attack.intValue / 100, "攻击力");         serializedObject.ApplyModifiedProperties();     }     private void ProgressBar(float value, string label)     {         Rect rect = GUILayoutUtility.GetRect(18, 18, "TextField");         EditorGUI.ProgressBar(rect, value, label);         EditorGUILayout.Space();     } }</code></pre> <p>观察<code>Inspector</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e35a41f86001a892f313cc906c4ab08a.jpg" alt="unity 编辑器扩展简单入门"></p> <h2 id="简单工具窗口">简单工具窗口</h2> <hr/> <p>一个简单的确认窗口</p> <pre><code class="language-C#">using UnityEngine; using UnityEditor;  public class MyEditorUtilityTest : ScriptableObject {     [MenuItem("德玛/自定义对话框")]     static void CreateWizard()     {         if (EditorUtility.DisplayDialog("对话框标题", "对话框的消息", "OK", "取消"))         {             Debug.Log("OK被点击");         }         else         {             Debug.Log("您没有点击OK");         }     } }</code></pre> <p>显示如下<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/abbd4de9650f00e7995f89ad562fdbba.jpg" alt="unity 编辑器扩展简单入门"></p> <h2 id="gizmos改造场景显示">Gizmos改造场景显示</h2> <hr/> <p>我们可以改造物体在场景中的显示；<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/488d80637ea05072c50b2ea3a6c26d12.jpg" alt="unity 编辑器扩展简单入门"></p> <p>如下代码<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/741d9ca477e6271b7a9803e53a5ca2c0.jpg" alt="unity 编辑器扩展简单入门"></p> <h2 id="其他">其他</h2> <hr/> <p>通过上面的案例，我们大致了解了Unity编辑器扩展的基本内容，通过这些已经可以实现很多功能了！</p> <p>仓库地址：<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/wyy5552/unityEditor"  target="_blank" rel="nofollow">https://github.com/wyy5552/unityEditor</a></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3588.htm">centos7下离线安装nginx</a></p>
                                                <p>下一个：<a href="/html/category/article-3590.htm">.NET宝藏API之：OutputFormatter，格式化输出对象</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3696.htm" title="UML——顺序图">UML——顺序图</a></li>
                        <li class="py-2"><a href="/html/category/article-3700.htm" title="【nodejs】【mongo】nodejs数据查询【mongo】">【nodejs】【mongo】nodejs数据查询【mongo】</a></li>
                        <li class="py-2"><a href="/html/category/article-3699.htm" title="【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);">【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);</a></li>
                        <li class="py-2"><a href="/html/category/article-3710.htm" title="FUNCTION XXX does not exist">FUNCTION XXX does not exist</a></li>
                        <li class="py-2"><a href="/html/category/article-3683.htm" title="C语言实现BMP格式转RGB格式、YUV格式">C语言实现BMP格式转RGB格式、YUV格式</a></li>
                        <li class="py-2"><a href="/html/category/article-3754.htm" title="Python3通过字符串访问与修改局部变量">Python3通过字符串访问与修改局部变量</a></li>
                        <li class="py-2"><a href="/html/category/article-3676.htm" title="Uncaught SyntaxError: Unexpected token &lt;">Uncaught SyntaxError: Unexpected token &lt;</a></li>
                        <li class="py-2"><a href="/html/category/article-3709.htm" title="MySQL分页查询">MySQL分页查询</a></li>
                        <li class="py-2"><a href="/html/category/article-3680.htm" title="springboot常用组件的集成">springboot常用组件的集成</a></li>
                        <li class="py-2"><a href="/html/category/article-3711.htm" title="Java数据结构-栈的实现">Java数据结构-栈的实现</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>