<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3599.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Java日期与时间 LocalDate、LocalDateTime函数 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Java日期与时间 LocalDate、LocalDateTime函数</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <h1>为什么 JDK 1.8 之前的时间与日期 API 不好用？</h1> <p>java.util.Date 是从 JDK 1.0 开始提供，易用性差</p> <ul> <li>默认是中欧时区(Central Europe Time)</li> <li>起始年份是 1900 年</li> <li>起始月份从 0 开始</li> <li>对象创建之后可修改</li> </ul> <p> JDK 1.1 废弃了 Date 中很多方法，新增了并建议使用 java.util.Calendar 类</p> <ul> <li>相比 Date 去掉了年份从 1900 年开始</li> <li>月份依然从 0 开始</li> <li>选用 Date 或 Calendar，让人更困扰</li> <li>DateFormat 格式化时间，线程不安全</li> </ul> <p> 为了解决 JDK 中时间与日期较难使用的问题，JDK 1.8 开始，吸收了 Joda-Time 很多功能，新增 java.time 包，加了新特性：</p> <ul> <li>区分适合人阅读的和适合机器计算的时间与日期类</li> <li>日期、时间及对比相关的对象创建完均不可修改</li> <li>可并发解析与格式化日期与时间</li> <li>支持设置不同的时区与历法</li> </ul> <p>LocalDate&nbsp;&nbsp; &nbsp;本地日期<br /> LocalTime&nbsp;&nbsp; &nbsp;本地时间<br /> LocalDateTime&nbsp;&nbsp; &nbsp;本地日期+时间<br /> Instant&nbsp;&nbsp; &nbsp;时间戳，适合机器时间计算<br /> Duration&nbsp;&nbsp; &nbsp;时间差<br /> Period&nbsp;&nbsp; &nbsp;年、月、日差<br /> ZoneOffset&nbsp;&nbsp; &nbsp;时区偏移量<br /> ZonedDateTime&nbsp;&nbsp; &nbsp;带时区的日期时间<br /> Clock&nbsp;&nbsp; &nbsp;时钟，获取其他地区时钟<br /> DateTimeFormatter&nbsp;&nbsp; &nbsp;时间格式化<br /> Temporal&nbsp;&nbsp; &nbsp;日期-时间获取值的字段<br /> TemporalAdjuster&nbsp;&nbsp; &nbsp;emporal 对象转换，实现自定义<br /> ChronoLocalDate&nbsp;&nbsp; &nbsp;日历系统接口</p> <h1>常用 api</h1> <p>获取当前日期<br /> LocalDate.now()</p> <p> 创建日期<br /> LocalDate date = LocalDate.of(2020, 9, 21)</p> <p> 获取年份<br /> date.getYear()</p> <p>//通过 TemporalField 接口的实现枚举类 ChronoField.YEAR 获取年份<br /> date.get(ChronoField.YEAR)</p> <p> 获取月份<br /> date.getMonth().getValue()</p> <p>//通过 TemporalField 接口的实现枚举类 ChronoField.MONTH_OF_YEAR 获取月份<br /> date.get(ChronoField.MONTH_OF_YEAR)</p> <p> 获取日<br /> date.getDayOfMonth()</p> <p>//通过 TemporalField 接口的实现枚举类 ChronoField.DAY_OF_MONTH 获取日<br /> date.get(ChronoField.DAY_OF_MONTH)</p> <p> 获取周几<br /> date.getDayOfWeek()</p> <p> 获取当前月多少天<br /> date.lengthOfMonth()</p> <p> 获取当前年是否为闰年<br /> date.isLeapYear()</p> <p> 当前时间<br /> LocalTime nowTime = LocalTime.now()</p> <p> 10、创建时间</p> <p>LocalTime.of(23, 59, 59)</p> <p> 11、获取时</p> <p>nowTime.getHour()</p> <p> 12、获取分</p> <p>nowTime.getMinute()</p> <p> 13、获取秒</p> <p>nowTime.getSecond()</p> <p> 14、获取毫秒</p> <p>nowTime.getLong(ChronoField.MILLI_OF_SECOND)</p> <p> 15、获取纳秒</p> <p>nowTime.getNano()</p> <p> 16、创建日期时间对象</p> <p>LocalDateTime.of(2020, 9, 21, 1, 2, 3);<br /> LocalDateTime.of(date, nowTime);</p> <p> 17、获取当前日期时间对象</p> <p>LocalDateTime.now()</p> <p> 18、通过 LocalDate 创建日期时间对象</p> <p>date.atTime(1, 2, 3)</p> <p> 19、通过 LocalTime 创建日期时间对象</p> <p>nowTime.atDate(date)</p> <p> 20、通过 LocalDateTime 获取 LocalDate 对象</p> <p>LocalDateTime.now().toLocalDate()</p> <p> 21、通过 LocalDateTime 获取 LocalTime 对象</p> <p>LocalDateTime.now().toLocalTime()</p> <p> 22、解析日期字符串</p> <p>LocalDate.parse("2020-09-21")</p> <p> 23、解析时间字符串</p> <p>LocalTime.parse("01:02:03")</p> <p> 24、解析日期时间字符串</p> <p>LocalDateTime.parse("2020-09-21T01:02:03", DateTimeFormatter.ISO_LOCAL_DATE_TIME)</p> <p> 25、方便时间建模、机器处理的时间处理类 Instant，起始时间 1970-01-01 00:00:00</p> <p>//起始时间 + 3 秒<br /> Instant.ofEpochSecond(3)<br /> //起始时间 + 3 秒 + 100 万纳秒<br /> Instant.ofEpochSecond(3, 1_000_000_000)<br /> //起始时间 + 3 秒 - 100 万纳秒<br /> Instant.ofEpochSecond(3, -1_000_000_000))<br /> //距离 1970-01-01 00:00:00 毫秒数<br /> Instant.now().toEpochMilli()</p> <p> 26、Duration：LocalTime、LocalDateTime、Intant 的时间差处理</p> <p>Duration.between(LocalTime.parse("01:02:03"), LocalTime.parse("02:03:04"))<br /> Duration.between(LocalDateTime.parse("2020-09-21T01:02:03"), LocalDateTime.parse("2020-09-22T02:03:04"))<br /> Duration.between(Instant.ofEpochMilli(1600623455080L), Instant.now())</p> <p> 27、日期时间，前、后、相等比较</p> <p>//2020-09-21 在 2020-09-18 前？<br /> LocalDate.parse("2020-09-21").isBefore(LocalDate.parse("2020-09-18"))<br /> //01:02:03 在 02:03:04 后？<br /> LocalTime.parse("01:02:03").isAfter(LocalTime.parse("02:03:04"))</p> <p> 28、修改日期、时间对象，返回副本</p> <p>//修改日期返回副本<br /> LocalDate.now().withYear(2019).withMonth(9).withDayOfMonth(9)<br /> LocalDate date4Cal = LocalDate.now();<br /> //加一周<br /> date4Cal.plusWeeks(1)<br /> //减两个月<br /> date4Cal.minusMonths(2)<br /> //减三年<br /> date4Cal.minusYears(3)</p> <p> 29、格式化</p> <p>//格式化当前日期<br /> LocalDate.now().format(DateTimeFormatter.ISO_LOCAL_DATE)<br /> //指定格式，格式化当前日期<br /> LocalDate.now().format(DateTimeFormatter.ofPattern("yyyyMMdd"))<br /> 指定格式，格式化当前日期时间<br /> //格式化当前日期时间<br /> LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd &nbsp;HH:mm:ss"))</p> <p> 30、解析</p> <p>//日期解析<br /> LocalDate.parse("2020-09-20")<br /> //指定格式，日期解析<br /> LocalDate.parse("2020/09/20", DateTimeFormatter.ofPattern("yyyy/MM/dd"))<br /> //指定格式，日期时间解析<br /> LocalDateTime.parse("2020/09/20 01:01:03", DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss"))</p> <p> 31、时区</p> <p>//上海时区<br /> ZoneId shanghaiZone = ZoneId.of("Asia/Shanghai");<br /> //设置日期为上海时区<br /> LocalDate.now().atStartOfDay(shanghaiZone)<br /> //设置日期时间为上海时区<br /> LocalDateTime.now().atZone(shanghaiZone)<br /> //设置 Instant 为上海时区<br /> Instant.now().atZone(shanghaiZone)</p> <p> 32、子午线时间差</p> <p>//时间差减 1 小时<br /> ZoneOffset offset = ZoneOffset.of("-01:00");<br /> //设置时间差<br /> OffsetDateTime.of(LocalDateTime.now(), offset</p> <h1>Java DayOfWeek getDisplayName()用法及代码示例</h1> <p>java.time.DayOfWeek的getDisplayName()方法是Java中的一个内置函数，它根据指定的Locale类参数和TextStyle返回day-of-week的文本表示形式。 TextStyle定义了三个元素“ FULL”，“ SHORT”和“ NARROW”。语言环境类别代表世界上特定的语言和地区。</p> <p><strong>方法声明：</strong></p> <pre> public String getDisplayName(TextStyle style, Locale locale)</pre> <p><strong>用法:</strong></p> <pre> String text = dayOfWeekObject.getDisplayName(TextStyle style, Locale locale)</pre> <p><strong>参数：</strong>此方法有两个参数：</p> <ul> <li><em>style</em>–是TestStyle，可以包含三个元素“ FULL”，“ SHORT”和“ NARROW”。</li> <li><em>locale</em>–代表世界上特定的语言和地区。默认语言环境是US</li> <li><em>dayOfWeekObject</em>–是DayOfWeek的实例。</li> </ul> <p><strong>返回值：</strong>该函数返回根据指定的Locale类参数和TextStyle返回day-of-week的文本表示形式。</p> <p>以下示例程序旨在说明上述方法：</p> <pre><code>// Java Program Demonstrate getDisplayName()  // method of DayOfWeek     import java.time.*;  import java.time.format.TextStyle;  import java.util.Locale;     class DayOfWeekExample {      public static void main(String[] args)      {          // Initializing a DayOfWeek instance          DayOfWeek dayOfWeek = DayOfWeek.MONDAY;             // Get textual representation of the          // day-of-week in FULL style          String full_name              = dayOfWeek                    .getDisplayName(TextStyle.FULL,                                    Locale.getDefault());             // Get textual representation of the          // day-of-week in SHORT style          String short_name              = dayOfWeek                    .getDisplayName(TextStyle.SHORT,                                    Locale.getDefault());             // Get textual representation of the          // day-of-week in NARROW style          String narrow_name              = dayOfWeek                    .getDisplayName(TextStyle.NARROW,                                    Locale.getDefault());             // Printing the textual names of the day-of-week          System.out.println(full_name);             System.out.println(short_name);             System.out.println(narrow_name);      }  }</code></pre> <p>输出</p> <pre><code>Monday Mon M</code></pre> <pre><code>// Java Program Demonstrate getDisplayName()  // method of DayOfWeek     import java.time.*;  import java.time.DayOfWeek;  import java.time.format.TextStyle;  import java.util.Locale;     class DayOfWeekExample {      public static void main(String[] args)      {          // Initializing a DayOfWeek instance          DayOfWeek dayOfWeek = DayOfWeek.WEDNESDAY;             // Get textual representation of the          // day-of-week in FULL style          String full_name              = dayOfWeek                    .getDisplayName(TextStyle.FULL,                                    Locale.getDefault());             // Get textual representation of the          // day-of-week in SHORT style          String short_name              = dayOfWeek                    .getDisplayName(TextStyle.SHORT,                                    Locale.getDefault());             // Get textual representation of the          // day-of-week in NARROW style          String narrow_name              = dayOfWeek                    .getDisplayName(TextStyle.NARROW,                                    Locale.getDefault());             // Printing the textual names of the day-of-week          System.out.println(full_name);             System.out.println(short_name);             System.out.println(narrow_name);      }  }</code></pre> <p>输出</p> <pre><code>Wednesday Wed W</code></pre> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3598.htm">Vue实战：基于Vue-ElementUI的权限管理系统之动态路由和动态按钮显示</a></p>
                                                <p>下一个：<a href="/html/category/article-3600.htm">数据结构-图的遍历——DFS深度优先搜索_在线工具</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3780.htm" title="Vue 列表渲染中的key">Vue 列表渲染中的key</a></li>
                        <li class="py-2"><a href="/html/category/article-4467.htm" title="动物诊疗机构办理动物诊疗许可证需要多久 动物诊疗机构办理动物诊疗许可证需要多久">动物诊疗机构办理动物诊疗许可证需要多久 动物诊疗机构办理动物诊疗许可证需要多久</a></li>
                        <li class="py-2"><a href="/html/category/article-4091.htm" title="通过传递数字参数返回什么MySQL CONCAT()函数？">通过传递数字参数返回什么MySQL CONCAT()函数？</a></li>
                        <li class="py-2"><a href="/html/category/article-3726.htm" title="win11系统如何创建虚拟磁盘">win11系统如何创建虚拟磁盘</a></li>
                        <li class="py-2"><a href="/html/category/article-3706.htm" title="C ++中的最低票价">C ++中的最低票价</a></li>
                        <li class="py-2"><a href="/html/category/article-5952.htm" title="喵咪驱虫怎么做的（猫驱虫使用方法）">喵咪驱虫怎么做的（猫驱虫使用方法）</a></li>
                        <li class="py-2"><a href="/html/category/article-3720.htm" title="Git回退代码到指定版本方法">Git回退代码到指定版本方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4092.htm" title="nginx进程管理">nginx进程管理</a></li>
                        <li class="py-2"><a href="/html/category/article-4393.htm" title="2022公务员国考报名流程（国家公务员国考报名）">2022公务员国考报名流程（国家公务员国考报名）</a></li>
                        <li class="py-2"><a href="/html/category/article-4427.htm" title="家里养狗养猫会传染给人什么病（家里有狗养猫）">家里养狗养猫会传染给人什么病（家里有狗养猫）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>