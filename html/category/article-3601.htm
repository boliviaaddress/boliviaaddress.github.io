<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3601.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>【SpringBoot】核心依赖和自动配置 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">【SpringBoot】核心依赖和自动配置</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p><span style="font-size:18px;">之前介绍了springboot是有多么的好，那么，我们现在通过一个小demo来看他是有多么的强大！</span></p> <p><span style="font-size:18px;"><br /></span></p> <h1><span style="font-size:24px;">一、核心pom引入</span></h1> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">&nbsp; &nbsp; &nbsp; &nbsp; 我们可以知道一般的项目引入了的基本包和<span style="font-size:18px;">sprin<span style="font-size:18px;">g</span>一些连接池，再加上几个配置文件还有应用服务器（或者web服务器），就可以直接运行起来了。那么springboot要如何做呢？</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;">首先就是核心依赖了：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"></span></span></p> <pre><code class="language-html">&lt;parent&gt; 	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 	&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; 	&lt;version&gt;1.5.2.RELEASE&lt;/version&gt; &lt;/parent&gt;</code></pre> <p>这个parent是springboot最最核心的引入，所有的配置都在里面，并且是springboot项目必须引入的。</p> <p><span style="font-size:18px;"><span style="font-size:18px;">当然现在都是web项目居多，我们还需要引入一个需要的依赖：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"></span></span></p> <pre><code class="language-html">&lt;dependency&gt; 	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 	&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>然后可以的话还可以引入一个插件：</p> <p><span style="font-size:18px;"><span style="font-size:18px;"></span></span></p> <pre><code class="language-html">&lt;plugin&gt; 	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 	&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt;</code></pre> <p><span style="font-size:18px;"><span style="font-size:18px;">引入这些东西之后，我们可以在一个包中新建一个类，然后写入以下代码：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"></span></span></p> <pre><code class="language-java">@Controller @SpringBootApplication @Configuration public class HelloApplication {          @RequestMapping("hello")     @ResponseBody     public String hello(){         return "hello world！";     }          public static void main(String[] args) {         SpringApplication.run(HelloApplication.class, args);     }  }</code></pre> <p>之后直接用javaApplication 的run方式，我们就可以直接将springboot的这个项目run起来，可以在控制台看到：</p> <p><span style="font-size:18px;"><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/9867904cc517c03c63ca74cce617e0ee.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;">然后我们在浏览器中输入：http://localhost:8080/hello</span></span></p> <p><span style="font-size:18px;">就可以看到如下页面：</span></p> <p><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/05f9ba558b614aab09abb906bbff436f.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></p> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">这样，我们就启动了一个简单的springboot项目。</span></p> <p><span style="font-size:18px;"><br /></span></p> <h1><span style="font-size:24px;">二、核心自动配置</span></h1> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">&nbsp; &nbsp; &nbsp; &nbsp; 我们可以在项目中看到，其实我们就是写了一个类，为什么连tomcat都不用，就可以直接启动一个web程序呢？这一切都是从springboot的配置说起。</span></p> <p><span style="font-size:18px;">&nbsp; &nbsp; &nbsp; &nbsp; 还记得我们引入pom了一个spring-boot-starter-web了么，这个就是spring所依赖的web项目模板，我们可以在maven管理器的依赖中找到这些已经默认加载好的东西：</span></p> <p><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/a3c705ebfd24c574b1757f8ff7462a5b.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></p> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">&nbsp; &nbsp; &nbsp; &nbsp; 我们可以直观的看到，tomcat，hibernate，还有一些web项目需要用的东西全部都引入到了项目中，在项目启动的时候就是调用的他们，然后我们就相当于吧tomcat也启动了一样的感觉，为我们的开发配置省了不少事情。</span></p> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">然后我们再来看我们写的这个类，为什么可以直接用web来启动呢，根据上一篇文章的介绍，java的配置方式起到了很强的作用，那就是我们可以利用注解去轻易的配置一些我们想要配置的东西，springboot就是利用了这一点。我们可以看到我们的类上面除了java的@Configuration之外，还有一个是springboot的配置项@SpringBootApplication，这个注解的引入，就默认为我们自动的配置了一些常用的配置。</span></p> <p><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/a3c705ebfd24c574b1757f8ff7462a5b.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></p> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;">那么，它都自动为我们配置了什么呢？我们可以找到library的jar包引入，找到一个springboot的autoconfigure来看一下：</span></p> <p><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/e26a32ea96d4a4fe37e38fd22a526fb2.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></p> <p><span style="font-size:18px;"><br /></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;">我们展开看一下会发现很多熟悉的东西：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/b90174fc73582b5e896e0e7cbc347d57.jpg" alt="【SpringBoot】核心依赖和自动配置"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/62a68501bd873cd375a31afe722c0e00.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;">&nbsp; &nbsp; &nbsp; &nbsp; 是不是看到了很多熟悉的身影呢，我们可以在每个包下面都找到一个带有AutoConfigure的类，这就是用java配置方式写的默认配置：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><img decoding="async" src="http://img.555519.xyz/uploads/20221120/2eb5dc5b9c5336b2c9db4923e1957e17.jpg" alt="【SpringBoot】核心依赖和自动配置"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"><br /></span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;">当然，这些都是默认的配置，我们如果想要自己配置一个组件要怎么把默认的配置取消呢？其实很简单，因为每个springboot项目都必须有一个核心的带有@SpringBootApplication注解的类作为入口，所以我们只需要在这个注解上消除这个配置类的引入就可以了，例如：</span></span></p> <p><span style="font-size:18px;"><span style="font-size:18px;"></span></span></p> <pre><code class="language-java">@Controller @SpringBootApplication(exclude = {MongoAutoConfiguration.class, KafkaAutoConfiguration.class}) @Configuration public class HelloApplication {          @RequestMapping("hello")     @ResponseBody     public String hello(){         return "hello world！";     }          public static void main(String[] args) {         SpringApplication.run(HelloApplication.class, args);     }  }</code></pre> <p>通过这样用exclude的方式就把mongo和kafka的自动配置去掉了，我们就可以自己进行配置了。</div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3600.htm">数据结构-图的遍历——DFS深度优先搜索_在线工具</a></p>
                                                <p>下一个：<a href="/html/category/article-3602.htm">victoriaMetrics库之布隆过滤器</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7604.htm" title="领养宠物的条件和要求（领养宠物的条件和要求）">领养宠物的条件和要求（领养宠物的条件和要求）</a></li>
                        <li class="py-2"><a href="/html/category/article-7834.htm" title="猫粮所有品牌 猫粮所有品牌有哪些">猫粮所有品牌 猫粮所有品牌有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-7697.htm" title="锡耶纳的城市风格是什么(锡耶纳城市规划的特点)">锡耶纳的城市风格是什么(锡耶纳城市规划的特点)</a></li>
                        <li class="py-2"><a href="/html/category/article-7835.htm" title="动物医院资质 动物医院资质查询官网">动物医院资质 动物医院资质查询官网</a></li>
                        <li class="py-2"><a href="/html/category/article-7053.htm" title="猫体外驱虫药多久能杀死跳蚤（做完驱虫三天了还有跳蚤）">猫体外驱虫药多久能杀死跳蚤（做完驱虫三天了还有跳蚤）</a></li>
                        <li class="py-2"><a href="/html/category/article-7374.htm" title="济南宠物免费赠送信息在哪里（济南宠物免费赠送信息在哪里查看）">济南宠物免费赠送信息在哪里（济南宠物免费赠送信息在哪里查看）</a></li>
                        <li class="py-2"><a href="/html/category/article-6915.htm" title="沈阳哪里有批发猫的市场（沈阳最大猫咪批发市场）">沈阳哪里有批发猫的市场（沈阳最大猫咪批发市场）</a></li>
                        <li class="py-2"><a href="/html/category/article-7145.htm" title="猫粮十大品牌推荐（猫粮十大品牌推荐）">猫粮十大品牌推荐（猫粮十大品牌推荐）</a></li>
                        <li class="py-2"><a href="/html/category/article-6639.htm" title="宠物粮食哪里批发便宜又好吃（宠物粮食在哪里进货）">宠物粮食哪里批发便宜又好吃（宠物粮食在哪里进货）</a></li>
                        <li class="py-2"><a href="/html/category/article-7099.htm" title="动物疫苗分几种类型 动物疫苗分几种类型的">动物疫苗分几种类型 动物疫苗分几种类型的</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>