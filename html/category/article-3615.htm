<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3615.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>FreeRTOS进阶之空闲任务示例完全解析_操作系统_ - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">FreeRTOS进阶之空闲任务示例完全解析_操作系统_</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">1.释放内存</a></li> <li><a href="#_label1" rel="nofollow">2. 处理空闲优先级任务</a></li> <li><a href="#_label2" rel="nofollow">3.执行空闲任务钩子函数</a></li> <li><a href="#_label3" rel="nofollow">4.低功耗tickless模式</a></li> </ul> </div> <p>当RTOS调度器开始工作后，为了保证至少有一个任务在运行，空闲任务被自动创建，占用最低优先级（0优先级）。</p> <div class="ay1code"> <pre class="brush:cpp;">   xReturn = xTaskCreate( prvIdleTask,                           "IDLE",configMINIMAL_STACK_SIZE,                           (void * ) NULL,                           (tskIDLE_PRIORITY | portPRIVILEGE_BIT ),                           &amp;xIdleTaskHandle);</pre> </div> <p>空闲任务是FreeRTOS不可缺少的任务，因为FreeRTOS设计要求必须至少有一个任务处于运行状态。我们来看一下空闲任务要做的工作。</p> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>1.释放内存</h2> <p>从V9.0版本开始，如果一个任务删除另外一个任务，被删除任务的堆栈和TCB立即释放。如果一个任务删除自己，则任务的堆栈和TCB和以前一样，通过空闲任务删除。所以空闲任务开始就会检查是否有任务删除了自己，如果有的话，空闲任务负责删除这个任务的TCB和堆栈空间。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>2. 处理空闲优先级任务</h2> <p>当使用抢占式内核，相同优先级的任务使用时间片方式获得CPU权限。如果有任务与空闲任务共享一个优先级，并且宏configIDLE_SHOULD_YIELD设置为1，那么空闲任务不必等到时间片耗尽再进行任务切换。</p> <p>所以空闲任务检查空闲优先级下的就绪列表中是否有多个任务，有的话则执行任务切换，让用户任务获得CPU权限。</p> <p>宏configIDLE_SHOULD_YIELD控制任务在空闲优先级中的行为。仅在满足下列条件后，才会起作用。</p> <ul> <li>使用抢占式内核调度</li> <li>用户任务使用空闲优先级。</li> </ul> <p>通过时间片共享同一个优先级的多个任务，如果共享的优先级大于空闲优先级，并假设没有更高优先级任务，这些任务应该获得相同的处理器时间。</p> <p>但如果共享空闲优先级时，情况会稍微有些不同。当configIDLE_SHOULD_YIELD为1时，其它共享空闲优先级的用户任务就绪时，空闲任务立刻让出CPU，用户任务运行，这样确保了能最快响应用户任务。处于这种模式下也会有不良效果（取决于你的程序需要），描述如下：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/87f291c0d0fbf08d161860a7ec594387.jpg"></p> <p>图中描述了四个处于空闲优先级的任务，任务A、B和C是用户任务，任务I是空闲任务。上下文切换周期性的发生在T0、T1…T6时刻。当用户任务运行时，空闲任务立刻让出CPU，但是，空闲任务已经消耗了当前时间片中的一定时间。这样的结果就是空闲任务I和用户任务A共享一个时间片。用户任务B和用户任务C因此获得了比用户任务A更多的处理器时间。</p> <p>可以通过下面方法避免：</p> <ul> <li>如果合适的话，将处于空闲优先级的各单独的任务放置到空闲钩子函数中；</li> <li>创建的用户任务优先级大于空闲优先级；</li> <li>设置IDLE_SHOULD_YIELD为0；</li> </ul> <p>设置configIDLE_SHOULD_YIELD为0将阻止空闲任务为用户任务让出CPU，直到空闲任务的时间片结束。这确保所有处在空闲优先级的任务分配到相同多的处理器时间，但是，这是以分配给空闲任务更高比例的处理器时间为代价的。</p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>3.执行空闲任务钩子函数</h2> <p>空闲任务钩子是一个函数，这个函数由用户来实现，RTOS规定了函数的名字和参数，这个函数在每个空闲任务周期都会被调用。</p> <p>要创建一个空闲钩子：</p> <ul> <li>设置FreeRTOSConfig.h 文件中的configUSE_IDLE_HOOK 为1；</li> <li>定义一个函数，函数名和参数如下所示：</li> </ul> <div class="ay1code"> <pre class="brush:cpp;">void vApplicationIdleHook(void ); </pre> </div> <p>这个钩子函数不可以调用会引起空闲任务阻塞的API函数（例如：vTaskDelay()、带有阻塞时间的队列和信号量函数），在钩子函数内部使用协程是被允许的。</p> <p>使用空闲钩子函数设置CPU进入省电模式是很常见的。</p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>4.低功耗tickless模式</h2> <p>通常情况下，FreeRTOS回调空闲任务钩子函数（需要设计者自己实现），在空闲任务钩子函数中设置微处理器进入低功耗模式来达到省电的目的。因为系统要响应系统节拍中断事件，因此使用这种方法会周期性的退出、再进入低功耗状态。如果系统节拍中断频率过快，则大部分电能和CPU时间会消耗在进入和退出低功耗状态上。</p> <p>FreeRTOS的tickless空闲模式会在空闲周期时停止周期性系统节拍中断。停止周期性系统节拍中断可以使微控制器长时间处于低功耗模式。移植层需要配置外部唤醒中断，当唤醒事件到来时，将微控制器从低功耗模式唤醒。</p> <p>微控制器唤醒后，会重新使能系统节拍中断。由于微控制器在进入低功耗后，系统节拍计数器是停止的，但我们又需要知道这段时间能折算成多少次系统节拍中断周期，这就需要有一个不受低功耗影响的外部时钟源，即微处理器处于低功耗模式时它也在计时的，这样在重启系统节拍中断时就可以根据这个外部计时器计算出一个调整值并写入RTOS 系统节拍计数器变量中。</p> <p>空闲任务的源代码如下所示，其中宏portTASK_FUNCTION翻译出来为：</p> <blockquote> <p>void prvIdleTask(void * pvParameters)。</p> </blockquote> <div class="ay1code"> <pre class="brush:cpp;">static portTASK_FUNCTION( prvIdleTask,pvParameters ){ /*防止编译器警告 */ (void ) pvParameters; for(;; ) { /*检查是否有任务删除了自己,如果有的话,空闲任务负责删除这个任务的TCB和堆栈空间 */ prvCheckTasksWaitingTermination(); #if( configUSE_PREEMPTION == 0 ) {/*如果我们没有使用抢占式调度,我们会强制任务切换,看看是否有其它任务变得有效.如果使用抢占式调度,是不需要这样的,因为任务变得有效后会抢占空闲任务.*/taskYIELD(); } #endif/* configUSE_PREEMPTION */ #if( ( configUSE_PREEMPTION == 1 ) &amp;&amp; ( configIDLE_SHOULD_YIELD == 1 ) ) {/* 当使用抢占式内核,相同优先级的任务使用时间片方式获得CPU权限.如果有任务与空闲任务共享一个优先级,那么空闲任务不必等到时间片耗尽再进行任务切换.如果空闲优先级下的就绪列表中有多个任务,则执行用户任务*/if(listCURRENT_LIST_LENGTH( &amp;( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) &gt;( UBaseType_t ) 1 ){ taskYIELD();} } #endif/* ( ( configUSE_PREEMPTION == 1 ) &amp;&amp; ( configIDLE_SHOULD_YIELD == 1 )) */ #if( configUSE_IDLE_HOOK == 1 ) {externvoid vApplicationIdleHook( void );/*调用用户定义函数.这样允许设计者在不增加任务开销的情况下实现后台功能注意:这个函数中绝对不允许调用任务可能引起阻塞的函数.*/vApplicationIdleHook(); } #endif/* configUSE_IDLE_HOOK */ #if( configUSE_TICKLESS_IDLE != 0 ) { TickType_txExpectedIdleTime;/*如果每次执行空闲任务都挂起调度器,起然后再解除调度器,这很难让人满意,因此这里执行两次同样的比较(xExpectedIdleTime和configEXPECTED_IDLE_TIME_BEFORE_SLEEP),第一次比较是测试一下是否达到预期的空闲时间,并不会挂起调度器.*/xExpectedIdleTime= prvGetExpectedIdleTime();if(xExpectedIdleTime &gt;= configEXPECTED_IDLE_TIME_BEFORE_SLEEP ){ vTaskSuspendAll(); { /*现在调度器被挂起,需要再次采样空闲时间,这次空闲时间可以使用了*/ configASSERT(xNextTaskUnblockTime &gt;= xTickCount ); xExpectedIdleTime= prvGetExpectedIdleTime(); if(xExpectedIdleTime &gt;= configEXPECTED_IDLE_TIME_BEFORE_SLEEP ) {portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime ); } } (void ) xTaskResumeAll();} } #endif/* configUSE_TICKLESS_IDLE */ }}static portTASK_FUNCTION( prvIdleTask,pvParameters )  {  	 /*防止编译器警告 */  	 (void ) pvParameters;  	 for(;; )  	 {  		   /*检查是否有任务删除了自己,如果有的话,空闲任务负责删除这个任务的TCB和堆栈空间 */  		   prvCheckTasksWaitingTermination();     		   #if( configUSE_PREEMPTION == 0 )  		   {  				/*如果我们没有使用抢占式调度,我们会强制任务切换,看看是否有其它任务变得有效.  				如果使用抢占式调度,是不需要这样的,因为任务变得有效后会抢占空闲任务.*/  				taskYIELD();  		   }  		   #endif/* configUSE_PREEMPTION */  		   #if( ( configUSE_PREEMPTION == 1 ) &amp;&amp; ( configIDLE_SHOULD_YIELD == 1 ) )  		   {  				/*  当使用抢占式内核,相同优先级的任务使用时间片方式获得CPU权限.如果有任务与空闲  				任务共享一个优先级,那么空闲任务不必等到时间片耗尽再进行任务切换.  				如果空闲优先级下的就绪列表中有多个任务,则执行用户任务*/  				if(listCURRENT_LIST_LENGTH( &amp;( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) &gt;( UBaseType_t ) 1 )  				{  						 taskYIELD();  				}  		   }  		   #endif/* ( ( configUSE_PREEMPTION == 1 ) &amp;&amp; ( configIDLE_SHOULD_YIELD == 1 )) */     		   #if( configUSE_IDLE_HOOK == 1 )  		   {  				externvoid vApplicationIdleHook( void );     				/*调用用户定义函数.这样允许设计者在不增加任务开销的情况下实现后台功能  				注意:这个函数中绝对不允许调用任务可能引起阻塞的函数.*/  				vApplicationIdleHook();  		   }  		   #endif/* configUSE_IDLE_HOOK */     		   #if( configUSE_TICKLESS_IDLE != 0 )  		   {  		   TickType_txExpectedIdleTime;     				/*如果每次执行空闲任务都挂起调度器,起然后再解除调度器,这很难让人满意,因此这里  				执行两次同样的比较(xExpectedIdleTime和configEXPECTED_IDLE_TIME_BEFORE_SLEEP),  				第一次比较是测试一下是否达到预期的空闲时间,并不会挂起调度器.*/  				xExpectedIdleTime= prvGetExpectedIdleTime();     				if(xExpectedIdleTime &gt;= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )  				{  					 vTaskSuspendAll();  					 {  						   /*现在调度器被挂起,需要再次采样空闲时间,这次空闲时间可以使用了*/  						   configASSERT(xNextTaskUnblockTime &gt;= xTickCount );  						   xExpectedIdleTime= prvGetExpectedIdleTime();     						   if(xExpectedIdleTime &gt;= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )  						   {  								portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime );  						   }  					 }  					 (void ) xTaskResumeAll();  				}  		   }  		   #endif/* configUSE_TICKLESS_IDLE */  	 }  }</pre> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3614.htm">Go_error处理及panic、recover使用的正确姿势</a></p>
                                                <p>下一个：<a href="/html/category/article-3616.htm">Python Pandas大数据处理</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3699.htm" title="【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);">【c语言】杨氏矩阵  有一个二维数组. 数组的每行从左到右是递增的，每列从上到下是递增的. 在这样的数组中查找一个数字是否存在。 时间复杂度小于O(N);</a></li>
                        <li class="py-2"><a href="/html/category/article-3692.htm" title="创建TypeScript代码模板(NVS+Yarn+ESLint+Prettier+Husky)">创建TypeScript代码模板(NVS+Yarn+ESLint+Prettier+Husky)</a></li>
                        <li class="py-2"><a href="/html/category/article-3676.htm" title="Uncaught SyntaxError: Unexpected token &lt;">Uncaught SyntaxError: Unexpected token &lt;</a></li>
                        <li class="py-2"><a href="/html/category/article-3707.htm" title="远程调用Feign">远程调用Feign</a></li>
                        <li class="py-2"><a href="/html/category/article-3686.htm" title="Springboot之请求映射">Springboot之请求映射</a></li>
                        <li class="py-2"><a href="/html/category/article-3682.htm" title="Docker极简入门：使用Docker-Compose 运行网站浏览量统计Demo">Docker极简入门：使用Docker-Compose 运行网站浏览量统计Demo</a></li>
                        <li class="py-2"><a href="/html/category/article-3690.htm" title="springboot集成Elasticsearch实现各种搜索功能">springboot集成Elasticsearch实现各种搜索功能</a></li>
                        <li class="py-2"><a href="/html/category/article-3695.htm" title="时间与日期——瞬时（Instant）">时间与日期——瞬时（Instant）</a></li>
                        <li class="py-2"><a href="/html/category/article-3680.htm" title="springboot常用组件的集成">springboot常用组件的集成</a></li>
                        <li class="py-2"><a href="/html/category/article-3687.htm" title="Pandas大数据量内存优化">Pandas大数据量内存优化</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>