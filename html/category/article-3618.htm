<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3618.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>GAIA-IR: GraphScope 上的并行化图查询引擎 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">GAIA-IR: GraphScope 上的并行化图查询引擎</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<blockquote> <p>在本文中，我们将介绍 GraphScope 图交互式查询引擎 GAIA-IR，它支持高效的 Gremlin 语言表达的交互图查询，同时高度抽象了图上的查询计算，具有高可扩展性。</p> </blockquote> <h3 data-tool="mdnice编辑器">背景介绍</h3> <p data-tool="mdnice编辑器">在海量数据的分析中，图查询是一种重要的工具。Gremlin<sup>[1]</sup>&nbsp;是由 Apache Tinkerpop 提出并维护的工业界标准的图查询语言，被业界流行图数据库广泛应用，例如&nbsp;Neo4j<sup>[2]</sup>&nbsp;、OrientDB<sup>[3]</sup>、JanusGraph<sup>[4]</sup>、Microsoft&nbsp;Cosmos&nbsp;DB<sup>[5]</sup>&nbsp;以及&nbsp;Amazon&nbsp;Neptune<sup>[6]</sup>。而 GraphScope 中的图查询引擎 GAIA 则是业界首个开源的支持大规模分布式并行化 Gremlin 的系统。然而，尽管 Gremlin 语言的灵活性是它显著的优势，在 GAIA 系统的设计和使用中，我们也发现了一些存在的问题。</p> <h4 data-tool="mdnice编辑器">现有问题</h4> <p data-tool="mdnice编辑器">GAIA 查询系统主要有如下几点弊病：</p> <p data-tool="mdnice编辑器"><strong>D1:</strong>&nbsp;Gremlin 算子数量繁多，并且对同种语义有多种表达。这就导致为了支持丰富的 Gremlin 算子，GAIA 中需要端到端在各个模块中添加对应的算子，并且算子实现之间可能存在冗余的计算逻辑。例如，当我们有查看属性的需求时，Gremlin 中可以通过<code>elementMap()</code>、<code>valueMap()</code>、<code>values()</code>、<code>select().valueMap()</code>、<code>project().valueMap()</code>等表达方式得到类似的结果，示例如下：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">gremlin> g.V().elementMap()  ==>[id:1,label:person,name:marko,age:29]  ==>[id:2,label:person,name:vadas,age:27]  gremlin> g.V().valueMap('name','age')  ==>[name:[marko],age:[29]]  ==>[name:[vadas],age:[27]]  gremlin> g.V().as('a').select('a').by(valueMap('name', 'age'))  ==>[name:[marko], age:[29]]  ==>[name:[vadas], age:[27]]  gremlin> g.V().as('a').project('a').by(valueMap('name', 'age'))  ==>[a:[name:[marko], age:[29]]]  ==>[a:[name:[vadas], age:[27]]]</pre> </div> <p data-tool="mdnice编辑器">而为了支持这些类似的表达，GAIA 中需要定义多个冗余算子，并且需要在各个模块中支持，对开发并不友好，可扩展性较差。</p> <p data-tool="mdnice编辑器"><strong>D2:</strong>&nbsp;GAIA 的语言扩展性差。GAIA 是 Gremlin 并行化查询的定制化实现，而现如今也有很多其他常用的图查询语言，例如 Cypher、GSQL 等。如果未来我们需要进一步接入更多的查询语言，则几乎无法通过扩展 GAIA 来实现。</p> <p data-tool="mdnice编辑器"><strong>D3:</strong>: Gremlin 对复杂的 expression 支持不佳。例如，我们想通过以下 Gremlin 查询语句，找到 "a" 的两度邻居中，满足一定 "age" 属性条件的人：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">g.V().as("a").out().as("b").out().as("c")  .where("c", P.lt("a").or(P.gt("a").and(P.gt("b")))).by("age")</pre> </div> <p data-tool="mdnice编辑器">像<code>where()</code>&nbsp;中这样复杂的嵌套条件过滤并不直观，对用户使用来说不太友好。</p> <p data-tool="mdnice编辑器"><strong>D4:</strong>&nbsp;GAIA 中没有很好的 Gremlin 语法规范定义，也很难界定当前系统对 Gremlin 算子及算子组合的支持范围，对用户来说并不友好。</p> <h4 data-tool="mdnice编辑器">解决方案</h4> <p data-tool="mdnice编辑器">为了解决以上的问题，我们进一步提出了与查询语言无关、普适性更强的中间表示层<strong>GAIA-IR</strong>（简称<strong>IR</strong>），用来描述通用的图查询语义。我们抽象出的操作算子可以分为两类：关系型操作算子及图相关操作算子。其中，关系型操作算子主要与传统关系型数据库上的操作保持一致，如<code>Projection</code>、<code>Selection</code>、<code>GroupBy</code>、<code>OrderBy</code>&nbsp;等；而图相关操作算子则是图数据上的特有查询，如点查询、邻点（边）查询等等。通过这层查询语言无关的中间表示层，我们可以解决上述 GAIA 中存在的问题：</p> <p data-tool="mdnice编辑器"><strong>A1:</strong>&nbsp;GAIA-IR 层用统一中间表示来实现 Gremlin 算子中类似的表达。例如，我们抽象出<code>project</code>&nbsp;算子，用于统一表示上述 D1 中 Gremlin 各种取属性操作。</p> <p data-tool="mdnice编辑器"><strong>A2:</strong>&nbsp;GAIA-IR 层与查询语言无关，这就方便了 GAIA-IR 后续可以进一步接入更多的语言。将来，我们只需要将不同语言的操作算子翻译到 IR 的统一中间表示层，就可以自然地实现该语言的并行化查询，而不需要再针对每套语言去设计分布式并行化实现。</p> <p data-tool="mdnice编辑器"><strong>A3:</strong>&nbsp;GAIA-IR 还额外提供了丰富的 expression 支持，从而满足用户的需求。例如，对比 D3 中的例子，我们在<code>where()</code>&nbsp;算子中加入 expression 的表达支持会更加直观：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">g.V().as("a").out().as("b").out().as("c")  .where(expr("@c.age < @a.age || (@c.age > @a.age && @c.age > @b.age)"))</pre> </div> <p data-tool="mdnice编辑器"><strong>A4:</strong>&nbsp;GAIA-IR 中引入了 Antlr 工具，支持 Gremlin 语法检查功能，并且明确了系统对 Gremlin 算子及组合的支持范围，对用户使用更为友好。</p> <h3 data-tool="mdnice编辑器">IR整体设计</h3> <p data-tool="mdnice编辑器">接下来，我们介绍 GAIA-IR 的整体设计。</p> <h4 data-tool="mdnice编辑器">概念介绍</h4> <p data-tool="mdnice编辑器">首先，我们介绍 IR 中的一些基本概念。IR 抽象了图数据上的基本计算，从而提供了一套统一的、简洁的、语言无关的中间表示层。</p> <p data-tool="mdnice编辑器"><strong>操作算子（IR Operator）：</strong>目前，我们将操作算子（<strong>Graph-Relational Algebra</strong>）抽象为两类，即关系型操作和图相关操作。</p> <ul class="list-paddingleft-1" data-tool="mdnice编辑器"> <li>关系型操作包含了：<code>Projection</code>、<code>Selection</code>、<code>Join</code>、<code>Groupby</code>、<code>Orderby</code>、<code>Dedup</code>、<code>Limit</code>&nbsp;等。这与传统关系型数据库上的操作保持一致。</li> <li>图相关操作包含了：<strong>GetV</strong>、<strong>E</strong>(dge)-<strong>Join</strong>、<strong>P</strong>(ath)-<strong>Join</strong>，分别表示图上的取点属性操作、取邻点（边）操作、以及路径操作。</li> </ul> <p data-tool="mdnice编辑器">通过以上两类算子抽象，我们既可以表达传统的关系型运算，又可以支持图上特有的查询操作。同时，该抽象算子集合并不受查询语言的限制，由此可以很容易地拓展到其他语言。</p> <p data-tool="mdnice编辑器"><strong>数据结构（GRecord）：</strong>我们定义了数据结构 GRecord，用来表示每个 IR Operator 的输入输出。GRecord 是一个多列的结构，每列有自己的别名（Alias）和值（Value）：</p> <ul class="list-paddingleft-1" data-tool="mdnice编辑器"> <li>别名（Alias）：类似于SQL中的<code>As</code>别名。特别的，为了适配 Gremlin，我们额外提供了一个 Unique Alias -- "HEAD"，作为匿名别名，特指上一个算子的输出，即当前算子的输入。</li> <li>值（Value）：值的类型分为两种，简单类型 CommonObject（包括 int/string/intArray/stringArray 等）以及图数据类型 GraphObject（包括 Vertex、Edge 以及 Path）。</li> </ul> <h4 data-tool="mdnice编辑器">Gremlin查询翻译示例</h4> <p data-tool="mdnice编辑器">在 Gremlin 查询中，我们将其翻译成 GRecord 上的一系列 IR Operator 操作，从而支持 Gremlin 的查询语义。例如，在查询<code>g.V().as('a').select('a').by(valueMap('name', 'age'))</code>&nbsp;中，<code>g.V().as('a')</code>&nbsp;会产生如下的中间结果，别名叫做 "a"，数据类型为 Vertex 类型：</p> <div style="text-align: left"> <table style="height: 77px; width: 395px"> <thead> <tr> <th style="text-align: left">R1</th> <th style="text-align: left">Vertex { name:[marko], age:[29] }, Alias: "a"</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">GR2</td> <td>Vertex { name:[vadas], age:[27] }, Alias: "a"</td> </tr> </tbody> </table> </div> <p>而我们会将<code>select('a').by(valueMap('name', 'age'))</code>&nbsp;翻译为<code>Project("{a.name,a.age}")</code>，以上述的 GR1、GR2 作为<code>Project</code>&nbsp;的输入，我们可以得到输出 GR1'、GR2'，即我们所需要的点属性：</p> <table> <thead> <tr> <th>GR1'</th> <th>CommonObject {a.name:[marko], a.age:[29] }</th> </tr> </thead> <tbody> <tr> <td>GR2'</td> <td>CommonObject { a.name:[vadas], a.age:[27] }</td> </tr> </tbody> </table> <p data-tool="mdnice编辑器">类似的，对于 Gremlin 查询<code>g.V().valueMap('name','age')</code>，我们只需将 GR1、GR2 的 Alias 变为匿名的 "HEAD"，并将<code>valueMap('name','age')</code>&nbsp;翻译为<code>Project("{HEAD.name,HEAD.age}")</code>，便可以得到同样的结果。由此，我们就能够将同一语义、不同表达的 Gremlin 算子，翻译成统一的中间表示。更甚，对于其他语言，例如 SQL 中的取属性操作，我们也可以很直观的翻译成 IR 中的<code>Project</code>&nbsp;算子。由此可见，IR 是抽象出了一套更为简洁通用、且与查询语言无关的中间表示层。</p> <h4 data-tool="mdnice编辑器">系统架构</h4> <p data-tool="mdnice编辑器">接下来，我们给出 GAIA-IR 目前对 Gremlin 的并行化计算架构，如下图所示。</p> <p data-tool="mdnice编辑器"><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3d56090f85a23b0eee10fa9ed3412f83.jpg" alt="GAIA-IR: GraphScope 上的并行化图查询引擎"></p> <p data-tool="mdnice编辑器">总体来说，我们兼容了官方的 Gremlin Console 以及 Gremlin SDK 的查询方式。在用户提交 Gremlin Query 后：</p> <ol class="list-paddingleft-1" data-tool="mdnice编辑器"> <li>IR Compiler 负责对 Query 进行语法检查。对于合法 Query，IR Compiler 通过 IR Library API 对查询语法树进行编译，转换成由 IR Operator 组成的 Logical Plan，并进一步调用 IR Library API 生成 Physical Plan，再将 Physical Plan 分发到分布式的 Dataflow 计算框架。</li> <li>Dataflow 框架会在服务拉起阶段预先拉起图数据分区，建立执行计算的线程池。在接收到 IR Compiler 分发过来的物理执行计划后，IR Runtime 负责解析 Physical Plan，并构建引擎可执行的 Execution Plan。同时对于每个 IR Operator，IR Runtime 负责生成其对应的引擎可理解的 UDF，从而实现具体 IR Operator 的计算语义。完成计算后，IR Runtime 将结果返回给 IR Compiler，由 IR Compiler 进一步解析并返回给客户端。</li> </ol> <h3 data-tool="mdnice编辑器">如何使用 IR</h3> <p data-tool="mdnice编辑器">在介绍完 GAIA-IR 的整体设计后，我们介绍如何使用 GAIA-IR 引擎进行查询。</p> <p data-tool="mdnice编辑器"><strong>服务部署：</strong>在 GraphScope之前的文章中，我们介绍了如何部署 GraphScope。GAIA-IR 作为 GraphScope 中 GIE 的重要实现，整体的拉起方式与 GraphScope 保持一致。我们以 Helm 部署 GraphScope 为例，只需要在安装过程中，指定引擎选项为 GAIA，便可以顺利拉起 GAIA-IR，安装命令示例如下：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">helm repo add graphscope https://graphscope.oss-cn-beijing.aliyuncs.com/charts/ helm install [RELEASE_NAME] --set executor=gaia graphscope/graphscope-store</pre> </div> <p data-tool="mdnice编辑器">更多详细的部署操作可以参考官方文档<sup>[7]</sup>。</p> <p data-tool="mdnice编辑器"><strong>Gremlin 查询：</strong>在成功拉起服务后，我们可以通过 Gremlin Server host 和 port 来进行查询。以 Gremlin Console 查询为例，在服务顺利拉起并且导入数据（具体数据导入步骤可参考官方文档<sup>[8]</sup>）之后，我们便可以通过配置 Gremlin Console 来进行查询。示例如下：</p> <ol class="list-paddingleft-1" data-tool="mdnice编辑器"> <li>首先我们修改 Gremlin Console 的<code>conf/remote.yaml</code>&nbsp;配置文件，修改对应的 host 和 port;</li> <li>打开 Gremlin Console，给定<code>remote.yaml</code>&nbsp;的配置，便可以开始查询：</li> </ol> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">gremlin> :remote connect tinkerpop.server conf/remote.yaml ==>Configured localhost/127.0.0.1:8182 gremlin> :remote console ==>All scripts will now be sent to Gremlin Server - [localhost/127.0.0.1:8182] - type ':remote console' to return to local mode gremlin> g.V().valueMap('name','age')  ==>[name:[marko],age:[29]]  ==>[name:[vadas],age:[27]]</pre> </div> <h3 data-tool="mdnice编辑器">结语</h3> <p data-tool="mdnice编辑器">本文简述了 GAIA-IR 的设计初衷和总体架构，以及如何使用 GAIA-IR 引擎进行查询。在&nbsp;GAIA-IR 的目录<sup>[9]</sup>可以找到 GitHub 上的当前发布版本。GAIA-IR 作为 GraphScope 的图查询引擎，提供高效的 Gremlin 并行化查询实现。同时，在 IR 的统一中间表示上，我们也会引入更多的等价变换、优化实现，支持例如 Pattern Match 等重要场景。在后续的文章中，我们也会介绍更多的技术细节。我们也将持续完善 GAIA-IR 的实现，同时非常欢迎与期待社区的反馈和贡献。</p> <h3 data-tool="mdnice编辑器">参考资料</h3> <p data-tool="mdnice编辑器">[1]Gremlin:<em>http://tinkerpop.apache.org/</em></p> <p data-tool="mdnice编辑器">[2]Neo4j:<em>https://neo4j.com/</em></p> <p data-tool="mdnice编辑器">[3]OrientDB:<em>https://www.orientdb.org/</em></p> <p data-tool="mdnice编辑器">[4]JanusGraph:<em>https://janusgraph.org/</em></p> <p data-tool="mdnice编辑器">[5]Microsoft&nbsp;Cosmos&nbsp;DB:<em>https://azure.microsoft.com/en-us/services/cosmos-db/</em></p> <p data-tool="mdnice编辑器">[6]Amazon&nbsp;Neptune:<em>https://aws.amazon.com/neptune/</em></p> <p data-tool="mdnice编辑器">[7]官方文档:<em>https://graphscope.io/docs/persistent_graph_store.html</em></p> <p data-tool="mdnice编辑器">[8]官方文档:<em>https://graphscope.io/docs/persistent_graph_store.html</em></p> <p data-tool="mdnice编辑器">[9]GAIA-IR 的目录:<em>https://github.com/alibaba/GraphScope/tree/main/research/query_service/ir</em></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3617.htm">Jenkins 脚本命令行应用总结</a></p>
                                                <p>下一个：<a href="/html/category/article-3619.htm">Pandas之数据读取与储存</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4393.htm" title="2022公务员国考报名流程（国家公务员国考报名）">2022公务员国考报名流程（国家公务员国考报名）</a></li>
                        <li class="py-2"><a href="/html/category/article-6173.htm" title="上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）">上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-7006.htm" title="腊肉的做法大全（腊肉的做法大全家常菜）">腊肉的做法大全（腊肉的做法大全家常菜）</a></li>
                        <li class="py-2"><a href="/html/category/article-4503.htm" title="女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）">女人养猫的十大坏处视频教程（女人养猫的十大坏处视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-4609.htm" title="欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)">欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)</a></li>
                        <li class="py-2"><a href="/html/category/article-7052.htm" title="宠物商品粮什么意思（宠物粮是什么）">宠物商品粮什么意思（宠物粮是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-6639.htm" title="宠物粮食哪里批发便宜又好吃（宠物粮食在哪里进货）">宠物粮食哪里批发便宜又好吃（宠物粮食在哪里进货）</a></li>
                        <li class="py-2"><a href="/html/category/article-6041.htm" title="动物疫苗销售需要什么手续和条件呢英文翻译（卖动物疫苗利润有多高）">动物疫苗销售需要什么手续和条件呢英文翻译（卖动物疫苗利润有多高）</a></li>
                        <li class="py-2"><a href="/html/category/article-4147.htm" title="MySQL 5.7的Homebrew安装 &#8211; MacOS">MySQL 5.7的Homebrew安装 &#8211; MacOS</a></li>
                        <li class="py-2"><a href="/html/category/article-4316.htm" title="电动隔膜泵生产厂家(电动隔膜泵品牌进口)">电动隔膜泵生产厂家(电动隔膜泵品牌进口)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>