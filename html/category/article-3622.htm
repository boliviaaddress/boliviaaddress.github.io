<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3622.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>HCNP Routing&amp;Switching之代理ARP - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">HCNP Routing&amp;Switching之代理ARP</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p>　　前文我们了解了端口隔离相关话题，回顾请参考https://www.cnblogs.com/qiuhom-1874/p/16186451.html；今天我们来聊一聊ARP代理相关话题；</p> <p>　　端口隔离之破解之道</p> <p>　　前文我们通过抓包可以看到，当同一vlan下的端口做了双向端口隔离或者单向端口隔离以后，对应的端口就不能正常通信；其中最主要的原因是通信双方在通信时，拿不到对方的mac；拿不到通信对方的mac，以太网二层封装就封装不了，从而导致通信无法正常进行；那怎么打破端口隔离这样的限制呢？其实也很简单，我们找一个中间设备或接口，该接口能够和通信双方正常通信，然后赋予该接口转发arp的功能，是不是可以实现做过端口隔离的双方实现通信呢？</p> <p>　　代理ARP</p> <p>　　所谓代理ARP是指，如果ARP请求是从一个网络的主机发往同一网段，却不再同一物理物理网络上的另一台主机（即相互隔离的同一网段内的主机），那么连接它们的具有代理ARP功能的设备就可以回答该请求，这个过程就叫做代理ARP（Proxy ARP）；代理ARP屏蔽了分离的物理网络，使用户使用起来就好像在同一物理网络上一样；代理ARP可以分为两大类，一类是连接相同三层接口的本地代理和连接不同三层接口的普通代理arp；</p> <p>　　普通代理ARP</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/42fabb3e608d3115d852e0080e7b2ad4.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：普通代理ARP是通信双方分别连接到设备的不同三层接口上，且这些主机不再同一广播域上；如上图主机A和主机B，分别连接路由器的两个端口上；但是主机A和主机B通信时，由于掩码都是16位，网络地址都一样，所以主机A和主机B通信时，它们都会先发送ARP请求（因为同一网段，不需要找网关）；但是主机A或主机B如果直接发送arp请求，都会被路由器分割，所以导致通信无法正常进行；要想正常进行，我们需要在路由器的两个接口上开启代理ARP，这样主机A或主机B发送的arp请求都会通过开启路由器代理arp的接口转发，从而实现拿到对方mac实现通信；</p> <p>　　本地代理ARP</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4f192b8401746c64e83b55101b88f502.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：本地代理ARP就是指想要互通的主机连接到设备的同一个三层接口上，且这些主机不再同一广播域中；如上图主机A和主机B都同属VLAN2 且有做了双向端口隔离，此时主机A和主机B的通信就依赖一个三层接口来代理ARP实现通信；</p> <p>　　实验：在交换机上我们做了pc1和pc2双向端口隔离，pc1和pc3做了单向端口隔离，在不取消端口隔离的情况下是实现pc1和pc2、pc3互通</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d9a13619c2fa85031dae7f82d8d4be15.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　交换机配置</p> <div class="cnblogs_code"><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="HCNP Routing&Switching之代理ARP" id="code_img_opened_689285c9-6cf5-49bc-bf60-3f778a9becc9" class="code_img_opened" style="display: none"/></p> <div id="cnblogs_code_open_689285c9-6cf5-49bc-bf60-3f778a9becc9" class="cnblogs_code_hide"> <pre><span style="color: rgba(0, 0, 0, 1)">sys sys sw1 vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)"> port link</span>-<span style="color: rgba(0, 0, 0, 1)">type access port default vlan</span><span style="color: rgba(128, 0, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> port</span>-<span style="color: rgba(0, 0, 0, 1)">isolate en</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)"> port</span>-<span style="color: rgba(0, 0, 0, 1)">isolate en</span><span style="color: rgba(0, 0, 255, 1)">int</span> g0/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)"> am isolate g0</span>/<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(128, 0, 128, 1)">1</span></pre> </div> <p><span class="cnblogs_code_collapse">View Code</span></div> <p>　　验证隔离信息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7c8c217e29b52a1fcfe0956b1b7b6658.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　验证：pc1和pc2、pc3的互通性</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1d5b926cfe48a72a65686f22f9c2647a.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：现在pc1和pc2、pc3都是不通的；</p> <p>　　在交换机上启用一个vlanif12的接口，并配置和pc1、pc2同网段ip地址</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7cd772b32b00937fc3351ee4c16631c0.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　在vlanif 12接口上开启同VLAN内ARP代理</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/5058ebe04e7f6f766610fe1dd98150c6.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：在三层交换机上开启arp代理分同一VLAN内的ARP代理和不同VLAN间的ARP代理；上述实验环境需要在三层接口上开启同一VLAN内的ARP代理；arp-proxy 这个命令是路由器上开启ARP代理；</p> <p>　　验证：pc1和pc2、pc3的互通性</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/5188ffeb85dda390904781618349d367.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到现在pc1和pc2、pc3都能正常通信；</p> <p>　　在pc1上查看arp表</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e31df73c56c08182945b2975b8ad6619.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到在pc1上pc2和pc3的mac地址都是同vlanif 12接口mac地址一样，这是为什么呢？其实从上面的mac地址表我们就能想到，pc1和pc2、pc3通信都是用的vlanif 12的mac，这是因为pc1和pc2、pc3通信时发送arp请求，对应回复pc1的都是vlanif12接口；</p> <p>　　清空三台pc上的arp地址表和交换机的mac地址表，抓包查看其过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/28b2a318b88825b1c37839d0f32c8545.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到pc1pingpc2时，首先是pc1发送arp广播，说谁是1.0.0.2，请告诉我你的mac地址，此时vlanif 12收到pc1发送的arp广播后，它一看自己的路由表是可以直接到达1.0.0.2，所以它就把自己的mac地址告诉pc1，然后vlanif 12又发送arp请求，说谁是1.0.0.2，请把mac地址告诉1.0.0.12，此时pc2收到arp广播后，就把自己的mac告诉1.0.0.12，后续pc发送数据给vlanif12 ，vlanif12 通过拆除以太网二层包头，然后又用pc2的mac地址作为目标mac封装以太网二层包头发送给pc2；pc1同pc3的通信过程同pc1和pc2的过程一样；</p> <p>　　端口隔离之防破解之道</p> <p>　　通过上述实验可以看到如果我们在三层交换机上创建vlanif接口，并开启arp代理，那么我们之前配置的端口隔离就失效了，那怎么避免呢？其实很简单，默认情况下端口隔离只是隔离的二层，如果我们想要把三层也给隔离了，只需要修改端口隔离模式为all即可，如下所示</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3e30f94d570b07cda2380fd9692c0f8e.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　验证：pc1和pc2、pc3的互通性</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/975121e22e100e924265b6a5cecdc197.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到现在把隔离模式修改为all以后，即便我们在交换机上创建了vlanif接口，也开启了arp代理，对应通信还是被隔离的；这是因为之前只是隔离二层，现在修改隔离模式为all，表示二层和三层都做隔离；所以现在即便有三层接口，也开启了arp代理，对应通信也是被隔离的；</p> <p>　　代理ARP之写静态路由出接口和下一跳区别</p> <p>　　在前边聊静态路由时，我们特意提到在写静态路由时，如果是以太网链路上，我们推荐写下一跳地址，不推荐写出接口，这是为什么呢？先看一个实验</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8c6587f0b88d3882ca99e2b44a0ef92e.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　如上实验环境，我们在R1上配置静态路由时，为什么推荐写下一跳呢？</p> <p>　　写下一跳，然后r1 ping 2.2.2.2 抓包查看其过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c1c5160853ac7394db8622c8f54ac9ac.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　在R1抓包看看通信过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c71ddba1637be5614453adfed1c52b8b.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到R1ping 2.2.2.2时，根据静态路由，它首先会发送arp请求下一跳的arp；</p> <p>　　静态路由改写成出接口，看看对应通信又有什么变化呢？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/5714bf6456b0ffc7bbd55a1a96383559.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　在R1上抓包，看看通信过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b728be2a4cc13074ff042fe7fd3f1296.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到当我们写静态路由写成出接口后，R1会直接问2.2.2.2的mac地址，它会认为2.2.2.2和本地直连；这样一来会导致一个问题就是拿不到2.2.2.2的mac；从而导致通信无法正常完成；</p> <p>　　分析：之所以在以太网环境中写静态路由推荐写下一跳地址，是因为写下一跳，路由器会发送要下一跳的mac地址，从而实现通信；写出接口就是告诉路由器去往目标网段，直接将数据发送给对应出接口即可；这样一来导致路由器认为目标网段和出接口直连（误认为出接口和目标地址在同一广播域，所以它就直接发送arp请求目标地址的mac地址），从而导致拿不到目标网段的mac，导致通信无法正常完成；</p> <p>　　在R2上开启arp代理，实现通信</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4ca9f79b36364c97280ba21b83943597.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　验证：R1ping2.2.2.2看看是否能通？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2e4d73fc57375233bea782ff4e62f311.jpg" alt="HCNP Routing&Switching之代理ARP"></p> <p>　　提示：可以看到在R2上开启arp代理以后，对应通信就能正常进行；这是因为R1发送arp请求2.2.2.2的mac地址，R2的g0/0/0口收到arp请求以后，一看自己的路由表中能够到达2.2.2.2,且该接口也开启了arp代理，所以它会把自己的mac告诉给R1，然后R1有了2.2.2.2的mac后，后续就可以直接封装以太网包头发送数据；</p> <p>　　那为什么点到点的串行链路中写下一跳或出接口都行呢？</p> <p>　　因为，串行链路中不需要封装mac地址！！！</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3621.htm">Spring Security核心组件之安全上下文</a></p>
                                                <p>下一个：<a href="/html/category/article-3623.htm">Java map详解 &#8211; 用法、遍历、排序、常用API等</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-8248.htm" title="宠物粮在哪里批发 宠物粮在哪里批发便宜">宠物粮在哪里批发 宠物粮在哪里批发便宜</a></li>
                        <li class="py-2"><a href="/html/category/article-7605.htm" title="动物打疫苗需要什么 动物打疫苗需要什么证件">动物打疫苗需要什么 动物打疫苗需要什么证件</a></li>
                        <li class="py-2"><a href="/html/category/article-7236.htm" title="动物疫苗厂家排名前十有哪些品种图片（动物疫苗行业排名）">动物疫苗厂家排名前十有哪些品种图片（动物疫苗行业排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-8064.htm" title="上海十大必游景点排名(2020上海十大必去景点)">上海十大必游景点排名(2020上海十大必去景点)</a></li>
                        <li class="py-2"><a href="/html/category/article-7697.htm" title="锡耶纳的城市风格是什么(锡耶纳城市规划的特点)">锡耶纳的城市风格是什么(锡耶纳城市规划的特点)</a></li>
                        <li class="py-2"><a href="/html/category/article-7098.htm" title="上海宠物领养网点地址电话（上海宠物领养网点地址电话号码）">上海宠物领养网点地址电话（上海宠物领养网点地址电话号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-7512.htm" title="宠物领养管理系统论文范文大全（宠物领养管理系统论文范文大全）">宠物领养管理系统论文范文大全（宠物领养管理系统论文范文大全）</a></li>
                        <li class="py-2"><a href="/html/category/article-7052.htm" title="宠物商品粮什么意思（宠物粮是什么）">宠物商品粮什么意思（宠物粮是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-7007.htm" title="免费领养宠物正规网站平台下载大全视频（免费领养宠物的网站）">免费领养宠物正规网站平台下载大全视频（免费领养宠物的网站）</a></li>
                        <li class="py-2"><a href="/html/category/article-7881.htm" title="川味宫保鸡丁的做法大全(川味宫保鸡丁的做法 正宗)">川味宫保鸡丁的做法大全(川味宫保鸡丁的做法 正宗)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>