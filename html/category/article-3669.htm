<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3669.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>react实战系列起步（mockjs、第一个模块、docusaurus） - Bolivia Address</title>
    <link rel="icon" href="/assets/website/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/boliviaaddress/style-starter.css">
    <link rel="stylesheet" href="/assets/website/css/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">react实战系列起步（mockjs、第一个模块、docusaurus）</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<blockquote> <p>其他章节请看：</p> <p>react实战 系列</p> </blockquote> <h2 id="起步">起步</h2> <p>本篇我们首先引入 mockjs ，然后进入 spug 系统，接着模仿”任务计划“模块实现一个类似的一级导航页面（”My任务计划“），最后玩一下 Facebook 的docusaurus，将 spug 官网文档在本地跑起来。</p> <p><em>Tip</em>：环境准备请看上文</p> <h3 id="mockjs">mockjs</h3> <p>点击登录，提示“请求异常: Network Error”。因为没有后端提供接口。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e053da79d527319819b9f9729ff7b891.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p>笔者使用<code>mockjs</code> 来绕过，进入系统。</p> <p>添加 mockjs 只需要三步。</p> <p>首先安装依赖：</p> <pre><code class="language-javascript">spug-study> npm i -D mockjs@1  added 1 package, and audited 1789 packages in 54s  107 packages are looking for funding   run `npm fund` for details  33 vulnerabilities (1 low, 16 moderate, 15 high, 1 critical)  To address issues that do not require attention, run:          npm audit fix  To address all issues (including breaking changes), run:       npm audit fix --force  Run `npm audit` for details.</code></pre> <p>然后新建<code>src/mock/index.js</code>，内容如下：</p> <pre><code class="language-javascript">import Mock from 'mockjs'  // 开发环境引入 mock if (process.env.NODE_ENV === 'development') {     Mock.mock('/api/account/login/', 'post', {         "data": { "id": 1, "access_token": "5bb076db06fd4001b85d12e44ab96c56", "nickname": "\u7ba1\u7406\u5458", "is_supper": true, "has_real_ip": true, "permissions": [] }, "error": ""     }) }</code></pre> <p>最后在<code>src/index.js</code> 中引入 mock：</p> <pre><code class="language-javascript">+ import './mock'</code></pre> <p>重启服务，再次点击点击“登录”，即可进入系统：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2f3249349c0315125a4a40581f1391eb.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p><em>Tip</em>：spug 提供了“演示预览”，只需要关注即可获取体验账号，上面的 mock 数据就是这么来的。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8ac22269bea3d620d743d513af1f96e8.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p><em>注</em>：mockjs 这种使用方式，在浏览器开发界面是看不到 ajax 请求的。倘若想看到 ajax 请求，你可以把 mockjs 配合 node 的 express 使用，mockjs 仅仅当作造数据的工具，url 匹配就交由 express 处理。</p> <h3 id="任务计划">任务计划</h3> <p>”任务计划“页面分为两部分：上面用于过滤、下面是表格：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8f14a129f6b00db2afdbb4f9c295186d.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <h3 id="my任务计划">My任务计划</h3> <p>模仿”任务计划“，最终效果如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cc5de0721fa9399c8e7f2909128b3464.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p>点击“开始执行”和刷新表格，“更新于“中的模拟时间都会变化。</p> <p>代码如下：</p> <p>新增导航”M任务计划“：</p> <pre><code class="language-javascript">// src/routes.js import ScheduleIndex from './pages/schedule'; + import MyScheduleIndex from './pages/myschedule';    {     icon: <ScheduleOutlined/>,     title: '任务计划',     auth: 'schedule.schedule.view',     path: '/schedule',     component: ScheduleIndex   }, + { +   icon: <ScheduleOutlined/>, +   title: 'M任务计划', +   auth: 'myschedule.myschedule.view', +   path: '/myschedule', +   component: MyScheduleIndex + },</code></pre> <p>增加 mock 数据：</p> <pre><code class="language-javascript">// src/mock/index.js  // 开发环境引入 mock if (process.env.NODE_ENV === 'development') {         Mock.mock('/api/schedule/', 'get', {         "data": { "types": ["每天执行"], "tasks": [{ "id": 1, "name": "\u6e05\u7406\u8ba2\u5355\u6570\u636e", "type": "\u6bcf\u5929\u6267\u884c", "command": "echo '\u6e05\u7406\u8ba2\u5355\u6570\u636e'", "targets": ["local"], "trigger": "cron", "trigger_args": { "rule": "0 1 * * *", "start": null, "stop": null }, "is_active": true, "desc": null, "latest_id": null, "rst_notify": { "mode": "0" }, "created_at": "2021-04-28 12:07:56", "created_by_id": 1, "updated_at": "2021-04-28 12:19:16", "updated_by_id": 1, "latest_status": null, "latest_run_time": null, "latest_status_alias": null }] }, "error": ""     })      Mock.mock('/api/myschedule/', 'get', () => ({         "data": [{ "id": 1, "name": "项目A", machine: '192.168.1.3', time: new Date().toLocaleTimeString(), status: '进行中'}],          "error": ""     }))      // 点击“开始执行”     Mock.mock(/\/api\/myschedule.*/, 'post', () => ({         data: { test: 'test' }, error: ''     })) }</code></pre> <p>增加 myschedule 路由组件。共 3 个文件，内容如下：</p> <pre><code class="language-javascript">// src/pages/myschedule/index.js  import React from 'react'; import { observer } from 'mobx-react'; import { Select, Button } from 'antd'; import { SearchForm, AuthDiv, Breadcrumb } from 'components'; import ComTable from './Table'; import store from './store';  export default observer(function () {   return (            <Breadcrumb>         <Breadcrumb.Item>首页</Breadcrumb.Item>         <Breadcrumb.Item>M任务计划</Breadcrumb.Item>       </Breadcrumb>       <SearchForm>       <SearchForm.Item span={6} title="项目">           <Select allowClear value={store.name} onChange={v => store.name = v} placeholder="请选择">             <Select.Option value="p1">项目1</Select.Option>             <Select.Option value="p2">项目2</Select.Option>             <Select.Option value="p3">项目3</Select.Option>             <Select.Option value='p4'>项目4</Select.Option>           </Select>         </SearchForm.Item>          <SearchForm.Item span={6} title="机器">           <Select allowClear value={store.machine} onChange={v => store.machine = v} placeholder="请选择">             <Select.Option value='m1'>机器1</Select.Option>             <Select.Option value='m2'>机器2</Select.Option>             <Select.Option value='m3'>机器3</Select.Option>             <Select.Option value='m4'>机器4</Select.Option>           </Select>         </SearchForm.Item>         <Button type="primary" onClick={store.build}>开始执行</Button>       </SearchForm>       <ComTable />     </AuthDiv>   ) })</code></pre> <pre><code class="language-javascript">// src/pages/myschedule/store.js   import { observable, computed } from 'mobx';  import http from 'libs/http';    class Store {    // 表格数据    @observable records = [];    // 是否正在请求数据    @observable isFetching = false;     // 计算属性    // 数据源    @computed get dataSource() {        return this.records    }      fetchRecords = () => {      this.isFetching = true;      http.get('/api/myschedule/')        .then(res => this.records = res)        .finally(() => this.isFetching = false)    };     build = () => {     const params = {       name: this.name,       machine: this.machine     }     console.log('params', params)     http.post('/api/myschedule', {params})       .then(res => {         this.fetchRecords()       })    }  }    export default new Store()</code></pre> <pre><code class="language-javascript">// src/pages/myschedule/Table.js  import React from 'react'; import { observer } from 'mobx-react'; import { Tag } from 'antd'; import { Action, TableCard } from 'components'; import store from './store';  @observer class ComTable extends React.Component {   componentDidMount() {     store.fetchRecords()   }    colors = ['orange', 'green', 'red'];    columns = [{     title: '项目',     dataIndex: 'name',   }, {     title: '机器',     dataIndex: 'machine',   }, {     title: '更新于',     dataIndex: 'time',   }, {     title: '最新状态',     render: info => {       return <Tag color="blue">{info.status}</Tag>     },   }, {     title: '操作',     width: 180,     render: info => (       <Action>         <Action.Button disabled>详情</Action.Button>       </Action>     )   }];    render() {     return (       <TableCard         // tKey 必须唯一？         tKey="msi"         rowKey="id"         title="M任务列表"         loading={store.isFetching}         dataSource={store.dataSource}         onReload={store.fetchRecords}          pagination={{           showSizeChanger: true,           showLessItems: true,           showTotal: total => `共 ${total} 条`,           pageSizeOptions: ['10', '20', '50', '100']         }}         columns={this.columns} />     )   } }  export default ComTable</code></pre> <h3 id="docusaurus">docusaurus</h3> <p>spug 的官网文档采用 Facebook 的<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.docusaurus.cn/"  title="docusaurus" target="_blank" rel="nofollow">docusaurus（<code>快速</code> 构建<code>高效</code> 的网站，专注处理<code>内容</code>） 来构建的。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4dba59921b586b64ad5578e31dde9635.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p>我们可以将 spug 的文档在克隆到本地。步骤如下：</p> <pre><code class="language-javascript">$ git clone https://github.com/JackieLieu/spug.dev.git spug-docs Cloning into 'spug-docs'... remote: Enumerating objects: 525, done. Receiving objects:  73% (384/5remote: Total 525 (delta 0), reused 0 (delta 0), pack-reused 525 Receiving objects: 100% (525/525), 458.97 KiB | 420.00 KiB/s, done. Resolving deltas: 100% (317/317), done.</code></pre> <p>进入<code>spug-docs/website</code>，查看目录：</p> <pre><code class="language-javascript">spug-docs/website (master) $ ll total 21 drwxr-xr-x 1 78614 197609    0  4月 17 17:58 blog/ drwxr-xr-x 1 78614 197609    0  4月 17 17:58 core/ -rw-r--r-- 1 78614 197609  390  4月 17 17:58 package.json drwxr-xr-x 1 78614 197609    0  4月 17 17:58 pages/ -rw-r--r-- 1 78614 197609 4258  4月 17 17:58 README.md -rw-r--r-- 1 78614 197609 1289  4月 17 17:58 sidebars.json -rw-r--r-- 1 78614 197609 3567  4月 17 17:58 siteConfig.js drwxr-xr-x 1 78614 197609    0  4月 17 17:58 static/</code></pre> <p>安装依赖：</p> <pre><code class="language-javascript">PS website> cnpm i √ Installed 1 packages √ Linked 845 latest versions [1/6] scripts.postinstall docusaurus@1.14.7 › imagemin-jpegtran@6.0.0 › jpegtran-bin@^4.0.0 run "node lib/install.js", root: "spug-docs\\website\\node_modules\\_jpegtran-bin@4.0.0@jpegtran-bin"   √ jpegtran pre-build test passed successfully [1/6] scripts.postinstall docusaurus@1.14.7 › imagemin-jpegtran@6.0.0 › jpegtran-bin@^4.0.0 finished in 954ms [2/6] scripts.postinstall docusaurus@1.14.7 › imagemin-gifsicle@6.0.1 › gifsicle@^4.0.0 run "node lib/install.js", root: "spug-docs\\website\\node_modules\\_gifsicle@4.0.1@gifsicle"   √ gifsicle pre-build test passed successfully [2/6] scripts.postinstall docusaurus@1.14.7 › imagemin-gifsicle@6.0.1 › gifsicle@^4.0.0 finished in 751ms ... [6/6] scripts.postinstall docusaurus@1.14.7 › tree-node-cli@1.5.2 › fast-folder-size@^1.6.1 run "node get-sysinternals-du.js", root: "spug-docs\\website\\node_modules\\_fast-folder-size@1.6.1@fast-folder-size" ... deprecate docusaurus@1.14.7 › markdown-toc@1.2.0 › remarkable@1.7.4 › autolinker@0.28.1 › gulp-header@^1.7.1 Removed event-stream from gulp-header √ All packages installed (973 packages installed from npm registry, used 59s(network 38s), speed 148.83kB/s, json 846(5.51MB), tarball 0B)</code></pre> <p>启动项目：</p> <pre><code class="language-javascript">PS spug-docs\website> npm run start  > start > docusaurus-start  Failed to start live reload server: RangeError: Maximum call stack size exceeded LiveReload server started on port 35729 Docusaurus server started on port 3001</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9d84083912863c5c2610fcba742df0e1.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/76e9680b07438ed50b2a42992dc3b6e2.jpg" alt="react实战系列起步（mockjs、第一个模块、docusaurus）"></p> <p><em>注</em>：docusaurus 官网提到系统要求是<code>node >= 14</code>，笔者尝试用 node 14 编译 spug-docs，报各种错误，最后尝试 node 16，却成功了。</p> <h3 id="spug-与内网">spug 与内网</h3> <p>倘若你要在内网中使用 spug，你可能会遇到如下问题：</p> <h4 id="cnpm-导致压缩失败">cnpm 导致压缩失败</h4> <p>将<strong>node_modules</strong> 压缩拷贝，如果安装 spug 的依赖使用的是<code>cnpm i</code>，可能会压缩失败（笔者尝试使用了各种压缩工具），可以改用<code>npm i</code>。</p> <h4 id="win7">win7</h4> <p>如果你的环境是 win7，那么 node 最多只能安装<code>node 14</code> 以下的版本，笔者使用<code>v13.14</code>。</p> <p>而<code>node 12</code> 是不能对 spug 项目进行<strong>构建</strong>的。</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3668.htm">promise和async/await区别</a></p>
                                                <p>下一个：<a href="/html/category/article-3670.htm">AES算法中填充模式的区别(PKCS7Padding/PKCS5Padding/ZeroPadding)</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    


<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-9628.htm" title="小型宠物粮加工厂需要什么手续呢视频（宠物粮食加工厂怎么起步）">小型宠物粮加工厂需要什么手续呢视频（宠物粮食加工厂怎么起步）</a></li>
                        <li class="py-2"><a href="/html/category/article-9767.htm" title="狗粮批发价格表（狗粮批发价格表最新）">狗粮批发价格表（狗粮批发价格表最新）</a></li>
                        <li class="py-2"><a href="/html/category/article-10411.htm" title="动物防疫站可以打疫苗吗多少钱（动物防疫中心可以打疫苗吗）">动物防疫站可以打疫苗吗多少钱（动物防疫中心可以打疫苗吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-9260.htm" title="我所在的城市有家宠物医院英语 我所在的城市有家宠物医院英语怎么说">我所在的城市有家宠物医院英语 我所在的城市有家宠物医院英语怎么说</a></li>
                        <li class="py-2"><a href="/html/category/article-9445.htm" title="玄关酒柜隔断类型有哪些图片(玄关酒柜隔断类型有哪些种类)">玄关酒柜隔断类型有哪些图片(玄关酒柜隔断类型有哪些种类)</a></li>
                        <li class="py-2"><a href="/html/category/article-9444.htm" title="成都宠物托运平台哪家好点的（成都狗狗托运公司）">成都宠物托运平台哪家好点的（成都狗狗托运公司）</a></li>
                        <li class="py-2"><a href="/html/category/article-10181.htm" title="上海宠物领养网免费领养狗狗（上海宠物领养网免费领养狗狗的地方）">上海宠物领养网免费领养狗狗（上海宠物领养网免费领养狗狗的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-9950.htm" title="广州领养宠物狗的地方在哪里呀（广州领养宠物狗的地方在哪里呀最近）">广州领养宠物狗的地方在哪里呀（广州领养宠物狗的地方在哪里呀最近）</a></li>
                        <li class="py-2"><a href="/html/category/article-10134.htm" title="广州宠物食品市场（广州宠物批发）">广州宠物食品市场（广州宠物批发）</a></li>
                        <li class="py-2"><a href="/html/category/article-10043.htm" title="动物医院的面积不得小于多少（动物医院布局设计及分析）">动物医院的面积不得小于多少（动物医院布局设计及分析）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/html/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/website/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>