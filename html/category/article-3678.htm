<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3678.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C++引用以及结构体 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">C++引用以及结构体</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <div class="toc"> <h3>计算机考研机试笔记之C/C++基础6</h3> <ul> <li>C++引用</li> <li>结构体</li> </ul> </div> <h1> C++引用</h1> <ol> <li>引用在C++编程中极为实用。<br /> 函数的参数是属于局部变量，如果想要修改传入的参数，那就要用到指针。<br /> 在C++中，还可以使用“引用”。引用不会产生副本，相当于给原来的变量又取了个别名，二者其实都是指同一个东西，且对引用变量的操作就是对原变量的操作。<br /> 引用的使用方法很简单，只需要在函数的参数类型后面加个&就可以了（或者&加在变量前面即可）。 <pre><code class="prism language-javascript">#include <span class="token operator"><</span>iostream<span class="token operator">></span> using namespace std<span class="token punctuation">;</span> int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     int a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>     	cout <span class="token operator"><<</span> a <span class="token operator"><<</span> endl<span class="token punctuation">;</span>  	int <span class="token operator">&</span>b <span class="token operator">=</span> a<span class="token punctuation">;</span> 	b <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span> 	cout <span class="token operator"><<</span> a <span class="token operator"><<</span> endl<span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p> 输出：</p> <pre><code class="prism language-javascript"><span class="token number">10</span> <span class="token number">23</span> </code></pre> <p> 可见，程序中对<strong>a的引用</strong>b的操作，也是对变量a的操作。<br /><strong>注意：</strong><br /> 要把引用的&跟取地址运算符&区分开来，引用并不是取地址的意思。</li> <li>指针的引用<br /> 在指针相关一文中提到的swap()，还可以通过将传入的地址交换来达到交换两个变量的效果。使用引用可以达到这种操作，如下： <pre><code class="prism language-javascript">#include <span class="token operator"><</span>iostream<span class="token operator">></span> using namespace std<span class="token punctuation">;</span> <span class="token comment">//将 int* 型变量的引用作为参数，</span> <span class="token comment">//相当于对原int*变量的操作 </span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span>int<span class="token operator">*</span> <span class="token operator">&</span>p1<span class="token punctuation">,</span>int<span class="token operator">*</span> <span class="token operator">&</span>p2<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	int <span class="token operator">*</span>temp <span class="token operator">=</span> p1<span class="token punctuation">;</span> 	p1 <span class="token operator">=</span> p2<span class="token punctuation">;</span> 	p2 <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token punctuation">}</span> int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     int a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>     	int <span class="token operator">*</span>p1 <span class="token operator">=</span> <span class="token operator">&</span>a<span class="token punctuation">,</span><span class="token operator">*</span>p2 <span class="token operator">=</span> <span class="token operator">&</span>b<span class="token punctuation">;</span>  	<span class="token comment">//p1 p2为指针变量，存放a b的地址 </span> 	cout <span class="token operator"><<</span> <span class="token operator">*</span>p1 <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> <span class="token operator">*</span>p2 <span class="token operator"><<</span> endl<span class="token punctuation">;</span>  	<span class="token function">swap</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//函数参数为a b的地址，类型为int* </span> 	cout <span class="token operator"><<</span> <span class="token operator">*</span>p1 <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> <span class="token operator">*</span>p2 <span class="token operator"><<</span> endl<span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <pre><code class="prism language-javascript"><span class="token number">10</span> <span class="token number">23</span> <span class="token number">23</span> <span class="token number">10</span> </code></pre> <p> 为了理解上的方便，可以“简单”地把int*型理解成unsigned int型，而直接交换这样的两个整型变量是需要加引用的。<br /> 注意：<br /> 引用是产生变量的别名，因此常量不可使用引用。于是上面的代码中不可以写成swap(&a,&b)，而必须用指针变量pl和p2存放&a和&b，然后把指针变量作为参数传入。</li> </ol> <p>另外，如果想要深入了解引用，我推荐一篇文章：https://blog.csdn.net/JayRoxis/article/details/73060770 作者总结的比较用心。</p> <h1> 结构体</h1> <ol> <li> <p>结构体定义<br /> 可以将若干不同数据类型的数据封装在一起，可以用来储存复合数据。可以将若干不同数据类型的数据封装在一起，可以用来储存复合数据。</p> <pre><code class="prism language-javascript">struct Name<span class="token punctuation">{<!-- --></span> <span class="token comment">//自定义的数据结构</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre> <pre><code class="prism language-javascript">struct person<span class="token punctuation">{<!-- --></span> 	char name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	char gender<span class="token punctuation">;</span> 	int age<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> person Jhon<span class="token punctuation">,</span>Harry<span class="token punctuation">,</span>students<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </code></pre> <pre><code class="prism language-javascript">struct person<span class="token punctuation">{<!-- --></span> 	char name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	char gender<span class="token punctuation">;</span> 	int age<span class="token punctuation">;</span> <span class="token punctuation">}</span>Jhon<span class="token punctuation">,</span>Harry<span class="token punctuation">,</span>students<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//Jhon,Harry为结构体变量，students[10]为结构体数组变量</span> </code></pre> <pre><code class="prism language-javascript">struct person<span class="token punctuation">{<!-- --></span> 	char name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	char gender<span class="token punctuation">;</span> 	int age<span class="token punctuation">;</span> 	person<span class="token operator">*</span> father<span class="token punctuation">;</span><span class="token comment">//结构体内可以定义结构体本身的指针类型的指针变量</span> <span class="token punctuation">}</span>Jhon<span class="token punctuation">,</span>Harry<span class="token punctuation">,</span>students<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//Jhon,Harry为结构体变量，students[10]为结构体数组变量</span> </code></pre> </li> <li> <p>访问结构体中的元素</p> <p>方式一：</p> <pre><code class="prism language-javascript">Jhon<span class="token punctuation">.</span>name Jhon<span class="token punctuation">.</span>gender Jhon<span class="token punctuation">.</span>age </code></pre> <p>方式二：</p> <pre><code class="prism language-javascript">Jhon<span class="token operator">-</span><span class="token operator">></span>name Jhon<span class="token operator">-</span><span class="token operator">></span>gender Jhon<span class="token operator">-</span><span class="token operator">></span>age </code></pre> </li> <li> <p>结构体初始化<br /> 使用构造函数初始化</p> <pre><code class="prism language-javascript">#include <span class="token operator"><</span>iostream<span class="token operator">></span> #include <span class="token operator"><</span>string<span class="token punctuation">.</span>h<span class="token operator">></span> using namespace std<span class="token punctuation">;</span> struct person<span class="token punctuation">{<!-- --></span> 	char name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	char gender<span class="token punctuation">;</span> 	int age<span class="token punctuation">;</span> 	<span class="token function">person</span><span class="token punctuation">(</span>char<span class="token operator">*</span> name_<span class="token punctuation">,</span>char gender_<span class="token punctuation">,</span>int age_<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>	<span class="token function">strcpy</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>name_<span class="token punctuation">)</span><span class="token punctuation">;</span> gender <span class="token operator">=</span> gender_<span class="token punctuation">;</span> age <span class="token operator">=</span> age_<span class="token punctuation">;</span><span class="token punctuation">}</span> 	 <span class="token punctuation">}</span><span class="token punctuation">;</span> int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     person <span class="token function">a</span><span class="token punctuation">(</span><span class="token string">"green"</span><span class="token punctuation">,</span><span class="token string">'F'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	cout <span class="token operator"><<</span> a<span class="token punctuation">.</span>name <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> a<span class="token punctuation">.</span>gender <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> a<span class="token punctuation">.</span>age <span class="token operator"><<</span> endl<span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>在创建时，自行初始化</p> <pre><code class="prism language-javascript">#include <span class="token operator"><</span>iostream<span class="token operator">></span> #include <span class="token operator"><</span>string<span class="token punctuation">.</span>h<span class="token operator">></span> using namespace std<span class="token punctuation">;</span> struct person<span class="token punctuation">{<!-- --></span> 	char name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	char gender<span class="token punctuation">;</span> 	int age<span class="token punctuation">;</span>	 <span class="token punctuation">}</span><span class="token punctuation">;</span> int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     person a<span class="token punctuation">;</span>     <span class="token function">strcpy</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">"white"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     a<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token string">'M'</span><span class="token punctuation">;</span>     a<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span> 	cout <span class="token operator"><<</span> a<span class="token punctuation">.</span>name <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> a<span class="token punctuation">.</span>gender <span class="token operator"><<</span> <span class="token string">" "</span> <span class="token operator"><<</span> a<span class="token punctuation">.</span>age <span class="token operator"><<</span> endl<span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> </li> </ol> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3677.htm">1.23 实例：正则表达式验证IP地址</a></p>
                                                <p>下一个：<a href="/html/category/article-3679.htm">Vuex大全</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7236.htm" title="动物疫苗厂家排名前十有哪些品种图片（动物疫苗行业排名）">动物疫苗厂家排名前十有哪些品种图片（动物疫苗行业排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-7099.htm" title="动物疫苗分几种类型 动物疫苗分几种类型的">动物疫苗分几种类型 动物疫苗分几种类型的</a></li>
                        <li class="py-2"><a href="/html/category/article-6173.htm" title="上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）">上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-6776.htm" title="动物疫苗贵吗多少钱（动物疫苗多少钱一支）">动物疫苗贵吗多少钱（动物疫苗多少钱一支）</a></li>
                        <li class="py-2"><a href="/html/category/article-7742.htm" title="太原哪里可以免费领养狗狗（太原哪里可以免费领养狗狗狗）">太原哪里可以免费领养狗狗（太原哪里可以免费领养狗狗狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7604.htm" title="领养宠物的条件和要求（领养宠物的条件和要求）">领养宠物的条件和要求（领养宠物的条件和要求）</a></li>
                        <li class="py-2"><a href="/html/category/article-6823.htm" title="挪威犬价格（挪威牧羊犬多少钱一只）">挪威犬价格（挪威牧羊犬多少钱一只）</a></li>
                        <li class="py-2"><a href="/html/category/article-6216.htm" title="单螺杆泵品牌排名(单螺杆泵企业)">单螺杆泵品牌排名(单螺杆泵企业)</a></li>
                        <li class="py-2"><a href="/html/category/article-7650.htm" title="宠物领养证如何办理手续和流程视频（宠物领养中心领养要钱吗）">宠物领养证如何办理手续和流程视频（宠物领养中心领养要钱吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7053.htm" title="猫体外驱虫药多久能杀死跳蚤（做完驱虫三天了还有跳蚤）">猫体外驱虫药多久能杀死跳蚤（做完驱虫三天了还有跳蚤）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>