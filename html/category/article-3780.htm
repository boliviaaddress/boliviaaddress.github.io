<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-3780.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Vue 列表渲染中的key - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Vue 列表渲染中的key</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <div id="cnblogs_post_body" class="blogpost-body"> <p>首先看一下官网的论述：</p> <div class="cnblogs_code"> <pre><span style="color:#008080;"> 1</span> 当 Vue.js 用 v-<span style="color:#0000ff;">for</span> 正在更新已渲染过的元素列表时，它默认用“就地复用”策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序， 而是简单复用此处每个元素，<br/>   并且确保它在特定索引下显示已被渲染过的每个元素。这个类似 Vue 1.x 的 track-by="$index"<span style="color:#000000;"> 。 </span><span style="color:#008080;"> 2</span>  <span style="color:#008080;"> 3</span> <span style="color:#000000;">这个默认的模式是高效的，但是只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出。 </span><span style="color:#008080;"> 4</span>  <span style="color:#008080;"> 5</span> 为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 key 属性。理想的 key 值是每项都有的且唯一的 id。这个特殊的属性<br/>   相当于 Vue 1.x 的 track-by ，但它的工作方式类似于一个属性，所以你需要用 v-<span style="color:#000000;">bind 来绑定动态值 (在这里使用简写)： </span><span style="color:#008080;"> 6</span>  <span style="color:#008080;"> 7</span> <div v-<span style="color:#0000ff;">for</span>="item in items" :key="item.id"> <span style="color:#008080;"> 8</span>   <!-- 内容 --> <span style="color:#008080;"> 9</span> </div> <span style="color:#008080;">10</span> 建议尽可能在使用 v-<span style="color:#0000ff;">for</span><span style="color:#000000;"> 时提供 key，除非遍历输出的 DOM 内容非常简单，或者是刻意依赖默认行为以获取性能上的提升。 </span><span style="color:#008080;">11</span>  <span style="color:#008080;">12</span> 因为它是 Vue 识别节点的一个通用机制，key 并不与 v-<span style="color:#0000ff;">for</span> 特别关联，key 还具有其他用途，我们将在后面的指南中看到其他用途。</pre> </p></div> <p>为了了解为什么需要key我们看下以下内容（标注:以下内容是从知乎上看到的）</p> <div>   </p> <div> <p>要解释key的作用，不得不先介绍一下虚拟DOM的Diff算法了。</p> <p>我们知道，vue和react都实现了一套虚拟DOM，使我们可以不直接操作DOM元素，只操作数据便可以重新渲染页面。而隐藏在背后的原理便是其高效的Diff算法。</p> <p>vue和react的虚拟DOM的Diff算法大致相同，其核心是基于两个简单的假设：</p> <p><strong>1. 两个相同的组件产生类似的DOM结构，不同的组件产生不同的DOM结构。</strong></p> <p><strong>2. 同一层级的一组节点，他们可以通过唯一的id进行区分。</strong></p> <p>基于以上这两点假设，使得虚拟DOM的Diff算法的复杂度从<strong>O(n^3)</strong>降到了<strong>O(n)</strong>。</p> <p>这里我们借用React’s diff algorithm中的一张图来简单说明一下：</p> <p>&amp;lt;img src="https://pic2.zhimg.com/50/v2-73120ff4c30dd81a128cd422e325786a_hd.jpg" alt="Vue 列表渲染中的key" data-rawwidth="377" data-rawheight="199" class="content_image" width="377"&amp;gt;<br />    <img decoding="async" class="content_image lazy" src="http://img.555519.xyz/uploads/20230204/f9f0af0b54debac9315f5fb5395829a9.jpg" alt="Vue 列表渲染中的key"></p> <p>当页面的数据发生变化时，Diff算法只会比较同一层级的节点：</p> <p><strong>如果节点类型不同，直接干掉前面的节点，再创建并插入新的节点，不会再比较这个节点以后的子节点了。</strong></p> <p><strong>如果节点类型相同，则会重新设置该节点的属性，从而实现节点的更新。</strong></p> <p>当某一层有很多相同的节点时，也就是列表节点时，Diff算法的更新过程默认情况下也是遵循以上原则。</p> <p>比如一下这个情况：</p> <p> &amp;lt;img src="https://pic1.zhimg.com/50/v2-6e88cc53a7e427f0ae8340cf930ac30d_hd.jpg" alt="Vue 列表渲染中的key" data-rawwidth="477" data-rawheight="191" class="origin_image zh-lightbox-thumb" width="477" data-original="https://pic1.zhimg.com/v2-6e88cc53a7e427f0ae8340cf930ac30d_r.jpg"&amp;gt;<br />    <img decoding="async" class="origin_image zh-lightbox-thumb lazy" src="http://img.555519.xyz/uploads/20230204/61514f459b8e4225eb4cf129e27b3e99.jpg" alt="Vue 列表渲染中的key"></p> <p>我们希望可以在B和C之间加一个F，Diff算法默认执行起来是这样的：</p> <p> &amp;lt;img src="https://pic3.zhimg.com/50/v2-bf76311258f100b789226ccbb2600071_hd.jpg" alt="Vue 列表渲染中的key" data-rawwidth="572" data-rawheight="215" class="origin_image zh-lightbox-thumb" width="572" data-original="https://pic3.zhimg.com/v2-bf76311258f100b789226ccbb2600071_r.jpg"&amp;gt;<br />    <img decoding="async" class="origin_image zh-lightbox-thumb lazy" src="http://img.555519.xyz/uploads/20230204/044e7806c10e458e9b1a5a1dc2220208.jpg" alt="Vue 列表渲染中的key"></p> <p>即把C更新成F，D更新成C，E更新成D，最后再插入E，是不是很没有效率？</p> <p>所以我们需要使用key来给每个节点做一个唯一标识，Diff算法就可以正确的识别此节点，找到正确的位置区插入新的节点。</p> <p> &amp;lt;img src="https://pic1.zhimg.com/50/v2-bb1147af7c458f0b09d6a3c2f74b0100_hd.jpg" alt="Vue 列表渲染中的key" data-rawwidth="452" data-rawheight="130" class="origin_image zh-lightbox-thumb" width="452" data-original="https://pic1.zhimg.com/v2-bb1147af7c458f0b09d6a3c2f74b0100_r.jpg"&amp;gt;<br />    <img decoding="async" class="origin_image zh-lightbox-thumb lazy" src="http://img.555519.xyz/uploads/20230204/f5432f4e1e0ead94ddf0657ab2200e8f.jpg" alt="Vue 列表渲染中的key"></p> <p>所以一句话，<strong>key的作用主要是为了高效的更新虚拟DOM。</strong>另外vue中在使用<strong>相同标签名元素的过渡切换</strong>时，也会使用到key属性，其目的也是为了让vue可以区分它们，否则vue只会替换其内部属性而不会触发过渡效果。</p> </p></div> </p></div> </div> <p>转载于:https://www.cnblogs.com/qjuly/p/8514513.html</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3779.htm">js数组删除的方法</a></p>
                                                <p>下一个：<a href="/html/category/article-4091.htm">通过传递数字参数返回什么MySQL CONCAT()函数？</a></p>
                                            </div>

                                        <div class="panel panel-default mt-5">
                        <div class="panel-heading">
                            <h3 class="m-0">推荐文章</h3>
                        </div>
                        <div class="panel-body">
                            <ul class="p-0 x-0">
                                                                <li class="py-2"><a href="/html/category/article-3704.htm">微服务架构-分布式服务中,Feign请求拦截器实现日志链路的跟踪</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3687.htm">Pandas大数据量内存优化</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3678.htm">C++引用以及结构体</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3669.htm">react实战系列起步（mockjs、第一个模块、docusaurus）</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3635.htm">ERROR: Failed to resolve: org.jetbrains.kotlin:kotlin-stdlib-jre7:1.3.41</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3579.htm">Spring的事务管理机制和传播机制</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3571.htm">基于MyBatis的多租户设计方案与实现</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3563.htm">vue的混合mixins学习</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3552.htm">Bootstrap Blazor 模板使用Layout 组件</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3455.htm">@DateTimeFormat 注解 和 @JsonFormat 注解</a></li>
                                                            </ul>
                        </div>
                    </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7190.htm" title="长沙宠物猫领养中心地址 长沙宠物猫领养中心地址在哪里">长沙宠物猫领养中心地址 长沙宠物猫领养中心地址在哪里</a></li>
                        <li class="py-2"><a href="/html/category/article-7789.htm" title="汉文帝的霸陵原来是这么发现的！网友：原来历史剧都是真的(汉文帝霸陵原址)">汉文帝的霸陵原来是这么发现的！网友：原来历史剧都是真的(汉文帝霸陵原址)</a></li>
                        <li class="py-2"><a href="/html/category/article-7098.htm" title="上海宠物领养网点地址电话（上海宠物领养网点地址电话号码）">上海宠物领养网点地址电话（上海宠物领养网点地址电话号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-6173.htm" title="上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）">上海市青浦区第二中学分数线2023（青浦区二中最低分数线是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-7558.htm" title="开个宠物粮加工厂怎么样啊视频教学（开个宠物粮加工厂怎么样啊视频教学大全）">开个宠物粮加工厂怎么样啊视频教学（开个宠物粮加工厂怎么样啊视频教学大全）</a></li>
                        <li class="py-2"><a href="/html/category/article-7743.htm" title="动物疫苗公司招聘条件（动物疫苗招聘信息）">动物疫苗公司招聘条件（动物疫苗招聘信息）</a></li>
                        <li class="py-2"><a href="/html/category/article-6684.htm" title="动物疫苗防疫站几点上班（动物疫苗防疫站几点上班的）">动物疫苗防疫站几点上班（动物疫苗防疫站几点上班的）</a></li>
                        <li class="py-2"><a href="/html/category/article-7007.htm" title="免费领养宠物正规网站平台下载大全视频（免费领养宠物的网站）">免费领养宠物正规网站平台下载大全视频（免费领养宠物的网站）</a></li>
                        <li class="py-2"><a href="/html/category/article-7145.htm" title="猫粮十大品牌推荐（猫粮十大品牌推荐）">猫粮十大品牌推荐（猫粮十大品牌推荐）</a></li>
                        <li class="py-2"><a href="/html/category/article-7099.htm" title="动物疫苗分几种类型 动物疫苗分几种类型的">动物疫苗分几种类型 动物疫苗分几种类型的</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>