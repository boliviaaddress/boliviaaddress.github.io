<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://boliviaaddress.github.io/html/category/article-4120.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>项目打包成 jar 后包无法读取src/main/resources下文件 - Bolivia Address</title>
    <link rel="icon" href="/assets/addons/xcblog/img/boliviaaddress/favicon.ico" type="image/x-icon"/>
        <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/boliviaaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?48ec1baacefae763d2c0b3b6955a6c32";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand d-flex align-items-center" href="/">
                        Bolivia Address</a>
                                
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">项目打包成 jar 后包无法读取src/main/resources下文件</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>项目打包成 jar后包无法读取src/main/resources下文件</h3> <ul> <li>一、项目场景</li> <li>二、问题描述</li> <li> <ul> <li>发现问题</li> <li>分析问题</li> <li>为什么使用 ClassPathResource 后, 可以找到打包后的文件路径?</li> </ul> </li> <li>三、解决方案</li> <li> <ul> <li>方案一</li> <li>方案二</li> <li>意外出现</li> </ul> </li> <li>总结</li> </ul> </div> <hr/> <h1>一、项目场景</h1> <blockquote> <p>在项目中读取文件时, 使用new File() 出现的一个坑以及解决流程<br /> 这种问题不仅在本地文件读取时会遇到, 而且在下载项目下 (<code>例如: src/main/resources目录下</code>) 的文本时, 也会遇到,</p> </blockquote> <h1>二、问题描述</h1> <h2>发现问题</h2> <ol> <li> <p>原来代码<br /> 该代码功能是利用 common.io 包下的FileUtils来读取文件, 放到一个字符串中</p> <pre><code class="prism language-java"><span class="token class-name">String</span> s<span class="token operator">=</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">readFileToString</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"src/main/resources/holiday.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </li> <li> <p>这种路径书写方式<code>new File("src/main/resources/holiday.txt")</code> , 在本地运行没问题,<br /> 但是打包之后在服务器中运行出现了问题. 下面是错误截图<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/15ec3d0fd09ff494bf88c82ddfbea3e2.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> <li> <p>可以看到在服务器中日志提示:<code> java.io.FileNotFoundException: File 'holiday.txt' does not exist</code><br /> 即: 在打包后, 一开始配置的路径<code>src/main/resources</code>下无法找到该文件</p> </li> </ol> <h2>分析问题</h2> <ol> <li> <p>项目在打包之后, 位于 resource目录下的文件, 最常见的就是各种Spring配置文件就会打包在<code>BOOT-INF/classes</code> 目录下<br /> 而FIle 在按照原来的文件路径<code>src/main/resources/holiday.txt'</code>去寻找, 必然找不到文件, 因此会报文件找不到的异常<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/128c3264690877bc91d44688b62a4992.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> <li> <p>在定位问题的过程中发现,这里 提供了一个思路<br /> 就是SpringBoot中所有文件都在jar包中，没有一个实际的路径，因此可以使用以下方式</p> <pre><code class="prism language-java"><span class="token comment">/**      * 通过ClassPathResource类获取，建议SpringBoot中使用      * springboot项目中需要使用此种方法，因为jar包中没有一个实际的路径存放文件      *      * @param fileName      * @throws IOException      */</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">function6</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileName<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">IOException</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ClassPathResource</span> classPathResource<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> inputStream<span class="token operator">=</span> classPathResource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getFileContent</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </li> </ol> <h2>为什么使用 ClassPathResource 后, 可以找到打包后的文件路径?</h2> <blockquote> <p>上面代码的核心就是:<strong>实例化<code>ClassPathResource</code> 对象. 然后调用<code>getInputStream</code> 来获取资源文件</strong></p> </blockquote> <ol> <li>下面我们来分析这些代码<br /> 在<code>ClassPathResource</code> 在实例化时, 会初始化类加载器<code>classLoader</code> 并将项目所用到的所有路径加载到类加载器<code>classLoader</code> 中, 这些路径包括:<strong>java运行环境的jar, Maven 项目中的jar,</strong> 以及<strong>当前项目打包后的jar等(如下图)</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/339fb8789ccf85385b604f2a8bc5c3b6.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></li> <li>而<code>classPathResource.getInputStream</code> 在获取资源文件时, 因为上面我们初始化了一个<code>classLoader</code>.<br /> 所以<code>classLoader</code>不为空, 因此会执行<code>getResourceAsStream</code> 方法, 我们来追一下这个方法<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/ddd9123182e4ff1bca531f08035329d5.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></li> <li><code>getResourceAsStream</code> 方法中的<code>getResource</code>是实际的业务处理方法, 我们继续深入<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/2b3847c2deac6e03168118a9609ca455.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></li> <li><code>getResource</code> 方法如下图, 实际的功能就是递归调用自己, 去不断遍历<code>parent</code> 下的路径, 获取对应的资源文件<br /> 那么<code>parent</code> 又是谁呢? 我们继续往下看<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/21d555674b837e603e602d95a013ede4.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></li> <li>看到这里我们豁然开朗, 这个神秘的<code>parent</code> 就是类加载器<code>classLoader</code>!!!<br /> 因此<code>getResource</code><strong>方法就是去不断遍历我们在</strong><code>ClassPathResource</code><strong>实例化时, 创建的类加载器下面的路径!!!</strong>(对应第1点)<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/fc3b7192640a33aa6637a35ff794192f.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></li> </ol> <hr/> <h1>三、解决方案</h1> <ol> <li> <p>原来读取文件的代码如下</p> <pre><code class="prism language-java"><span class="token class-name">String</span> s<span class="token operator">=</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">readFileToString</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"src/main/resources/holiday.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </li> <li> <p>去查看 File 的构造函数, 看能否通过<code>InputStream</code> 来构造<br /> 从下图看是不行的<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/12a86b0467e66a4cb1caec45981c869b.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> </ol> <h2>方案一</h2> <ol start="3"> <li> <p>并且我们发现<code>org.apache.commons.io</code> 下<strong>没有提供</strong>将<code>ClassPathResource</code> 作为入参的读取文件的方法.<br /> 因此我们必须手写读取文件的方法<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/a0e143e81d4f6c8f8fb0387193718840.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> <li> <p>手写的代码如下<br /> 主要注意<code>Resource resource = new ClassPathResource(fileName); is = resource.getInputStream();</code></p> <pre><code class="prism language-java"><span class="token comment">/**      * Java读取txt文件的内容      *      * @param fileName resources目录下文件名称(无需带目录)      * @return 将每行作为一个单位放到list中      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token function">readTxtFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileName<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span></span> listContent<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation"><</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> is<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">InputStreamReader</span> isr<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">BufferedReader</span> br<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">String</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Resource</span> resource<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>             is<span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             isr<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>             br<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>isr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> lineTxt<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>lineTxt<span class="token operator">=</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 listContent<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>lineTxt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">finally</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 isr<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> listContent<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </li> </ol> <h2>方案二</h2> <ol start="5"> <li> <p>这种方式对代码入侵较小, 核心还是利用 common.io 下的 FileUtils, 具体方法是<br /><strong>利用FileUtils将<code>ClassPathResource.getInputStream</code> 得到的输入流复制到临时文件中, 然后读取这个临时文件</strong><br /> 这种方式<strong>缺点是: 需要创建临时文件, 如果待读取文件过大, 则重新创建文件和复制操作会消耗一定的空间和时间, 影响性能</strong></p> <pre><code class="prism language-java"><span class="token comment">//方式二 利用FileUtils将ClassPathResource.getInputStream 得到的输入流复制到临时文件中</span><span class="token class-name">Resource</span> resource<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">"holiday.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> inputStream<span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> tempFile<span class="token operator">=</span><span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">createTempFile</span><span class="token punctuation">(</span><span class="token string">"temp"</span><span class="token punctuation">,</span><span class="token string">".txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">copyInputStreamToFile</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> tempFile<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> s<span class="token operator">=</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">readFileToString</span><span class="token punctuation">(</span>tempFile<span class="token punctuation">,</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </li> </ol> <h2>意外出现</h2> <ol> <li> <p>到这里又出现了一个问题, 就是我用的<strong>测试项目</strong>因为在 maven 里面指定了某些格式的文件. 如下配置<br /><strong>因为指定了banner.txt 以及 xml 与 properties结尾的文件作为资源被打包. 所以文件 holiday.txt 运行后还是访问不到</strong><br /> 有问题的pom.xml文件如下</p> <pre><code class="prism language-xml"><span class="token comment"><!-- 资源拷贝插件，实现在打包时自动拷贝java目录下以及resources目录下的xml的配置文件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resources</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>directory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>directory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/banner.txt<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resources</span><span class="token punctuation">></span></span></code></pre> <p>打包后资源文件截图如下, 从该图中可以看到 holiday.txt 没有被打包进来<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/128c3264690877bc91d44688b62a4992.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"><br /> 程序运行之后的错误截图<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/56abeeccf633c8d270acb6861a9c7f60.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> <li> <p>我们修改下指定打包的配置<code><include>**/*.txt</include></code><br /> 这样配置后, 我们就可以<strong>将类路径下的所有txt 文件打包进行项目中</strong>了, 打包之后文件位置如下图<br /><strong>或者我们可以去除项目中下面的代码配置, 这样做会默认打包 resources 下面的所有文件</strong></p> <pre><code class="prism language-xml"><span class="token comment"><!-- 资源拷贝插件，实现在打包时自动拷贝java目录下以及resources目录下的xml的配置文件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resources</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>directory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>directory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>include</span><span class="token punctuation">></span></span>**/*.txt<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>resources</span><span class="token punctuation">></span></span></code></pre> <p>修改pom文件后, 重新打包后资源文件(<strong>从这里可以看到 holiday.txt 被打包进来</strong> )<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/1eadbf4116fc2eae5f4e79c0ddfbbc2a.jpg" alt="项目打包成 jar 后包无法读取src/main/resources下文件"></p> </li> </ol> <h1>总结</h1> <ol> <li> <p><strong>在项目内的文件的读取/下载时, 由于本地路径和项目打包后的路径不同. 出现找不到文件的情况,<br /> 我们只需要实例化<code>ClassPathResource(文件名)</code> 对象. 然后调用getInputStream 来获取资源文件.<br /> 就能获取任意环境下项目内的文件</strong></p> </li> <li> <p><strong>如果想打算使用其他方式来获取resources 目录下的文件, 可以参见</strong>这篇博客 .<br /> 核心和上面问题分析差不多, 基本上都是通过类加载器来获取资源文件的输入流进而找到这个文件</p> </li> </ol> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4119.htm">超级详细的webpack Plugin讲解_javascript技巧_</a></p>
                                                <p>下一个：<a href="/html/category/article-4147.htm">MySQL 5.7的Homebrew安装 &#8211; MacOS</a></p>
                                            </div>

                                        <div class="panel panel-default mt-5">
                        <div class="panel-heading">
                            <h3 class="m-0">推荐文章</h3>
                        </div>
                        <div class="panel-body">
                            <ul class="p-0 x-0">
                                                                <li class="py-2"><a href="/html/category/article-3694.htm">Vue el-table实现右键菜单功能_vue.js_</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3643.htm">CI框架分页类及其实现</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3615.htm">FreeRTOS进阶之空闲任务示例完全解析_操作系统_</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3606.htm">vue3 vue-router的使用</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3578.htm">Docker报错：Using default tag: latest Error response from daemon: Get https://registry-1.docker.io/v2/</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3575.htm">C ++中二进制矩阵的最短路径</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3526.htm">Vue中刷新页面的三种方式</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3521.htm">HCNP Routing&amp;Switching之Super VLAN_在线工具</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3474.htm">触摸板触摸屏禁止手指缩放，这么处理才行_在线工具</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3459.htm">Python实现多元线性回归算法预测房价</a></li>
                                                            </ul>
                        </div>
                    </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4392.htm" title="动物医院有公立的吗还是私立医院好呢（动物医院归哪里管）">动物医院有公立的吗还是私立医院好呢（动物医院归哪里管）</a></li>
                        <li class="py-2"><a href="/html/category/article-3779.htm" title="js数组删除的方法">js数组删除的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4120.htm" title="项目打包成 jar 后包无法读取src/main/resources下文件">项目打包成 jar 后包无法读取src/main/resources下文件</a></li>
                        <li class="py-2"><a href="/html/category/article-6217.htm" title="青岛最好的动物医院排名（青岛市动物诊疗价目收费表）">青岛最好的动物医院排名（青岛市动物诊疗价目收费表）</a></li>
                        <li class="py-2"><a href="/html/category/article-3714.htm" title="windows配置kubectl访问k8s集群">windows配置kubectl访问k8s集群</a></li>
                        <li class="py-2"><a href="/html/category/article-4610.htm" title="加盟狗粮加工厂多少钱合适（狗粮加工厂加盟销售）">加盟狗粮加工厂多少钱合适（狗粮加工厂加盟销售）</a></li>
                        <li class="py-2"><a href="/html/category/article-5953.htm" title="猫驱虫一次要多少钱左右（猫猫驱虫多少钱）">猫驱虫一次要多少钱左右（猫猫驱虫多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-4147.htm" title="MySQL 5.7的Homebrew安装 &#8211; MacOS">MySQL 5.7的Homebrew安装 &#8211; MacOS</a></li>
                        <li class="py-2"><a href="/html/category/article-3716.htm" title="Java和matlab混合编程时Java代码参数不一致的问题">Java和matlab混合编程时Java代码参数不一致的问题</a></li>
                        <li class="py-2"><a href="/html/category/article-4609.htm" title="欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)">欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">37</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                    <p>Bolivia Address 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/jquery-3.3.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/addons/xcblog/js/frontend/boliviaaddress/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>